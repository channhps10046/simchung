{"version":3,"sources":["components/shop/partials/Action.js","components/shop/auth/fetchApi.js","components/shop/partials/Navber.js","components/shop/partials/Footer.js","components/shop/partials/FetchApi.js","components/shop/productDetails/Mixins.js","components/shop/partials/Mixins.js","components/shop/partials/CartModal.js","components/shop/auth/Login.js","components/shop/auth/Signup.js","components/shop/auth/LoginSignup.js","components/shop/layout/index.js","components/shop/home/OrderSuccessMessage.js","components/admin/dashboardAdmin/FetchApi.js","components/admin/orders/FetchApi.js","components/admin/dashboardAdmin/Action.js","components/shop/home/Mixins.js","components/shop/home/Slider.js","components/admin/categories/FetchApi.js","components/admin/products/FetchApi.js","components/shop/home/ProductCategoryDropdown.js","components/shop/home/ProductCategory.js","components/shop/home/HomeContext.js","components/shop/home/SingleProduct.js","components/shop/home/index.js","components/shop/wishlist/FetchApi.js","components/shop/wishlist/SingleWishProduct.js","components/shop/wishlist/index.js","components/shop/auth/ProtectedRoute.js","components/shop/auth/AdminProtectedRoute.js","components/shop/auth/CartProtectedRoute.js","components/shop/layout/layoutContext.js","components/shop/layout/PageNotFound.js","components/shop/productDetails/ProductDetailsContext.js","components/shop/productDetails/Submenu.js","components/shop/productDetails/FetchApi.js","components/shop/productDetails/Action.js","components/shop/productDetails/AllReviews.js","components/shop/productDetails/ReviewForm.js","components/shop/productDetails/ProductDetailsSectionTwo.js","components/shop/productDetails/ProductDetailsSection.js","components/shop/productDetails/Details.js","components/shop/productDetails/index.js","components/shop/home/ProductByCategory.js","components/shop/order/FetchApi.js","components/shop/order/Action.js","components/shop/order/CheckoutProducts.js","components/shop/order/CheckoutPage.js","components/admin/partials/AdminNavber.js","components/admin/partials/AdminSidebar.js","components/admin/partials/AdminFooter.js","components/admin/layout/index.js","components/admin/dashboardAdmin/DashboardCard.js","components/admin/dashboardAdmin/Customize.js","components/admin/dashboardAdmin/DashboardContext.js","components/admin/dashboardAdmin/TodaySell.js","components/admin/dashboardAdmin/index.js","components/admin/categories/AddCategoryModal.js","components/admin/categories/EditCategoryModal.js","components/admin/categories/CategoryMenu.js","components/admin/categories/AllCategories.js","components/admin/categories/CategoryContext.js","components/admin/categories/index.js","components/admin/products/AddProductModal.js","components/admin/products/EditProductModal.js","components/admin/products/ProductMenu.js","components/admin/products/ProductTable.js","components/admin/products/ProductContext.js","components/admin/products/index.js","components/admin/orders/UpdateOrderModal.js","components/admin/orders/SearchFilter.js","components/admin/orders/Actions.js","components/admin/orders/OrderMenu.js","components/admin/orders/AllOrders.js","components/admin/orders/OrderContext.js","components/admin/orders/index.js","components/shop/dashboardUser/FetchApi.js","components/shop/dashboardUser/Action.js","components/shop/dashboardUser/Sidebar.js","components/shop/dashboardUser/DashboardUserContext.js","components/shop/dashboardUser/Layout.js","components/shop/dashboardUser/UserProfile.js","components/shop/dashboardUser/UserOrders.js","components/shop/dashboardUser/SettingUser.js","components/index.js","App.js","serviceWorker.js","index.js"],"names":["logout","localStorage","removeItem","window","location","href","apiURL","process","isAuthenticate","getItem","JSON","parse","isAdmin","user","role","loginReq","a","email","password","data","axios","post","res","console","log","signupReq","name","cPassword","Navber","props","history","useHistory","useLocation","useContext","LayoutContext","dispatch","className","onClick","e","push","navberHamburger","type","payload","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","style","letterSpacing","title","pathname","loginSignupModal","cartModal","cartProduct","length","Footer","background","color","moment","format","cartListProduct","carts","productArray","cart","id","cartList","list","updateQuantity","totalQuantitiy","quantitiy","setQuantitiy","setAlertq","slideImage","active","count","setCount","pImages","subTotal","price","subTotalCost","filter","item","quantity","product","totalCost","map","CartModal","products","cartModalOpen","useEffect","fetchData","responseData","Products","fillRule","clipRule","index","key","src","alt","pName","_id","pPrice","setItem","stringify","removeCartProduct","cartTotalCost","loginSignupError","Login","layoutData","layoutDispatch","useState","error","loading","setData","alert","msg","formSubmit","token","htmlFor","onChange","target","value","Signup","success","LoginSignup","login","setLogin","loginValue","setLoginValue","loginSignupModalToggle","border","createContext","Layout","children","OrderSuccessMessage","orderSuccess","DashboardData","getSliderImages","get","postUploadImage","formData","postDeleteImage","getAllOrder","editCategory","oId","status","deleteOrder","GetAllData","todayAllOrders","sliderImages","Images","deleteImage","setTimeout","uploadImage","image","FormData","append","isWish","wList","includes","isWishReq","setWlist","unWishReq","splice","indexOf","Slider","HomeContext","slide","setSlide","totalImg","prevSlide","nextSlide","Headers","headers","getAllCategory","createCategory","cName","cImage","cDescription","cStatus","cId","des","deleteCategory","getAllProduct","createProduct","pDescription","pImage","pStatus","pCategory","pQuantity","pOffer","file","editProduct","pEditImages","pId","deleteProduct","productByCategory","catId","productByPrice","CategoryList","categories","setCategories","Categories","categoryListDropdown","FilterList","range","setRange","filterListDropdown","min","max","step","rangeHandle","Search","search","setSearch","setPa","searchDropdown","searchHandle","placeholder","ProductCategoryDropdown","ProductCategory","homeState","homeReducer","state","action","toUpperCase","SingleProduct","ShowProduct","pRatingsReviews","HomeComponent","Home","useReducer","Provider","wishListProducts","Product","setProducts","setLoading","removeFromWishList","SingleWishProduct","WishList","ProtectedRoute","Component","component","rest","render","to","from","AdminProtectedRoute","CartProtectedRoute","layoutState","singleProductDetail","inCart","layoutReducer","PageNotFoundComponent","PageNotFound","productDetailsState","menu","productDetailsReducer","cartState","Submenu","categoryId","category","getSingleProduct","postAddReview","postDeleteReview","Alert","text","deleteReview","reviewId","productId","setFdata","rId","addReview","fData","rating","review","uId","AllReviews","useParams","createdAt","Array","Number","ReviewForm","ratingUserList","defaultValue","cols","rows","reviewSubmitHanlder","Menu","ProductDetailsContext","RatingReview","ProductDetailsSectionTwo","singleProduct","setSingleproduct","ProductDetailsSection","sProduct","setPimages","fetchCartProduct","isObj","forEach","addToCart","disabled","Details","DetailsComponent","ProductDetails","AllProduct","pRatings","PageComponent","ProductByCategory","getBrainTreeToken","getPaymentProcess","paymentData","createOrder","orderData","fetchbrainTree","setState","clientToken","pay","address","phone","instance","requestPaymentMethod","then","nonce","amountTotal","paymentMethod","allProduct","amount","transaction","transactionId","resposeData","catch","err","message","CheckoutComponent","onBlur","options","authorization","paypal","flow","onInstance","CheckoutProducts","CheckoutPage","AdminNavber","AdminSidebar","boxShadow","AdminFooter","AdminLayout","DashboardCard","DashboardContext","totalData","Users","Orders","UploadImageSection","files","accept","uploadSliderBtn","AllImages","imageUpload","Customize","dashboardState","totalOrders","dashboardReducer","SellTable","ordersList","newList","undefined","elem","order","colSpan","TodayOrderTable","TodaySell","DashboardComponent","DashboardAdmin","AddCategoryModal","CategoryContext","submitForm","preventDefault","reset","addCategoryModal","onSubmit","EditCategoryModal","setDes","setStatus","setCid","editCategoryModal","modal","edit","CategoryMenu","CategoryTable","deleteCat","editCat","slice","updatedAt","AllCategory","deleteCategoryReq","deleteC","class","stroke-linecap","stroke-linejoin","stroke-width","categoryState","categoryReducer","CategoryComponent","AllCategories","AddProductDetail","ProductContext","addProductModal","multiple","AddProductModal","fetchCategoryData","allCat","setAllCat","EditProductModal","editformData","setEditformdata","editProductModal","selected","ProductMenu","ProductTable","substring","deleteProductReq","productState","productReducer","ProductComponent","UpdateOrderModal","OrderContext","setOid","updateOrderModal","SearchFilter","deleteOrderReq","filterOrder","dropdown","setDropdown","newData","OrderMenu","editOrder","i","orders","editOrderReq","orderState","orderReducer","OrderComponent","AllOrders","getUserById","updatePersonalInformationFetch","userData","getOrderByUser","updatePassword","userId","User","fetchOrderByUser","Order","updatePersonalInformationAction","phoneNumber","handleChangePassword","newPassword","oldPassword","confirmPassword","Sidebar","DashboardUserContext","userDetails","dashboardUserState","OrderByUser","dashboardUserReducer","ProfileComponent","readOnly","UserProfile","TableHeader","TableBody","OrdersComponent","UserOrders","SettingComponent","passwordView","SettingUser","Routes","exact","path","App","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.811f7691.chunk.js","sourcesContent":["export const logout = () => {\n  localStorage.removeItem(\"jwt\");\n  localStorage.removeItem(\"cart\");\n  localStorage.removeItem(\"wishList\");\n  window.location.href = \"/\";\n};\n","import axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_URL;\n\nexport const isAuthenticate = () =>\n  localStorage.getItem(\"jwt\") ? JSON.parse(localStorage.getItem(\"jwt\")) : false;\n\nexport const isAdmin = () =>\n  localStorage.getItem(\"jwt\")\n    ? JSON.parse(localStorage.getItem(\"jwt\")).user.role === 1\n    : false;\n\nexport const loginReq = async ({ email, password }) => {\n  const data = { email, password };\n  try {\n    let res = await axios.post(`${apiURL}/api/signin`, data);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const signupReq = async ({ name, email, password, cPassword }) => {\n  const data = { name, email, password, cPassword };\n  try {\n    let res = await axios.post(`${apiURL}/api/signup`, data);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { Fragment, useContext } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport './style.css';\n\nimport { logout } from './Action';\nimport { LayoutContext } from '../index';\nimport { isAdmin } from '../auth/fetchApi';\n\nconst Navber = (props) => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const { data, dispatch } = useContext(LayoutContext);\n\n    const navberToggleOpen = () =>\n        data.navberHamburger\n            ? dispatch({ type: 'hamburgerToggle', payload: false })\n            : dispatch({ type: 'hamburgerToggle', payload: true });\n\n    const loginModalOpen = () =>\n        data.loginSignupModal\n            ? dispatch({ type: 'loginSignupModalToggle', payload: false })\n            : dispatch({ type: 'loginSignupModalToggle', payload: true });\n\n    const cartModalOpen = () =>\n        data.cartModal\n            ? dispatch({ type: 'cartModalToggle', payload: false })\n            : dispatch({ type: 'cartModalToggle', payload: true });\n\n    return (\n        <Fragment>\n            {/* Navber Section */}\n            <nav className=\"fixed top-0 w-full z-10 shadow-lg lg:shadow-none bg-white\">\n                <div className=\"m-4 md:mx-12 md:my-6 grid grid-cols-4 lg:grid-cols-3\">\n                    <div className=\"lg:block col-span-1 flex text-gray-600 mt-1\">\n                        <span\n                            className=\"hover:bg-gray-200 px-4 py-3 rounded-lg font-light tracking-widest hover:text-gray-800 cursor-pointer\"\n                            onClick={(e) => history.push('/')}\n                        >\n                            Shop\n                        </span>\n                        <span\n                            className=\"hover:bg-gray-200 px-4 py-3 rounded-lg font-light tracking-widest hover:text-gray-800 cursor-pointer\"\n                            onClick={(e) => history.push('/blog')}\n                        >\n                            Blog\n                        </span>\n                        <span\n                            className=\"hover:bg-gray-200 px-4 py-3 rounded-lg font-light tracking-widest hover:text-gray-800 cursor-pointer\"\n                            onClick={(e) => history.push('/contact-us')}\n                        >\n                            Contact us\n                        </span>\n                    </div>\n                    <div className=\"col-span-2 lg:hidden flex justify-items-stretch\t items-center\">\n                        <svg\n                            onClick={(e) => navberToggleOpen()}\n                            className=\"col-span-1 lg:hidden w-8 h-8 cursor-pointer text-gray-600\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            viewBox=\"0 0 24 24\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth={2}\n                                d=\"M4 6h16M4 12h16M4 18h16\"\n                            />\n                        </svg>\n                        <span\n                            onClick={(e) => history.push('/')}\n                            style={{ letterSpacing: '0.10rem' }}\n                            className=\"flex items-left text-center font-bold uppercase text-gray-800 text-2xl cursor-pointer px-2 text-center\"\n                        >\n                            SimChung\n                        </span>\n                    </div>\n                    <div\n                        onClick={(e) => history.push('/')}\n                        style={{ letterSpacing: '0.70rem' }}\n                        className=\"lg:block flex items-left col-span-1 text-center text-gray-800 font-bold tracking-widest uppercase text-2xl cursor-pointer\"\n                    >\n                        SimChung\n                    </div>\n                    <div className=\"flex items-right col-span-2 lg:col-span-1 flex justify-end\">\n                        {/*  WishList Page Button */}\n                        <div\n                            onClick={(e) => history.push('/wish-list')}\n                            className=\"hover:bg-gray-200 rounded-lg px-2 py-2 cursor-pointer\"\n                            title=\"Wishlist\"\n                        >\n                            <svg\n                                className={`${\n                                    location.pathname === '/wish-list'\n                                        ? 'fill-current text-gray-800'\n                                        : ''\n                                } w-8 h-8 text-gray-600 cursor-pointer`}\n                                fill=\"none\"\n                                stroke=\"currentColor\"\n                                viewBox=\"0 0 24 24\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth={2}\n                                    d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n                                />\n                            </svg>\n                        </div>\n                        {localStorage.getItem('jwt') ? (\n                            <Fragment>\n                                <div\n                                    className=\"userDropdownBtn hover:bg-gray-200 px-2 py-2 rounded-lg relative\"\n                                    title=\"Logout\"\n                                >\n                                    <svg\n                                        className=\"cursor-pointer w-8 h-8 text-gray-600 hover:text-gray-800\"\n                                        fill=\"none\"\n                                        stroke=\"currentColor\"\n                                        viewBox=\"0 0 24 24\"\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                        <path\n                                            strokeLinecap=\"round\"\n                                            strokeLinejoin=\"round\"\n                                            strokeWidth={2}\n                                            d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                                        />\n                                    </svg>\n                                    <div className=\"userDropdown absolute right-0 mt-1 bg-gray-200 rounded\">\n                                        {!isAdmin() ? (\n                                            <Fragment>\n                                                <li className=\"flex flex-col text-gray-700 w-48 shadow-lg\">\n                                                    <span\n                                                        onClick={(e) =>\n                                                            history.push(\n                                                                '/user/orders'\n                                                            )\n                                                        }\n                                                        className=\"flex space-x-2 py-2 px-8 hover:bg-gray-400 cursor-pointer\"\n                                                    >\n                                                        <span>\n                                                            <svg\n                                                                className=\"w-6 h-6\"\n                                                                fill=\"none\"\n                                                                stroke=\"currentColor\"\n                                                                viewBox=\"0 0 24 24\"\n                                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                            >\n                                                                <path\n                                                                    strokeLinecap=\"round\"\n                                                                    strokeLinejoin=\"round\"\n                                                                    strokeWidth={\n                                                                        2\n                                                                    }\n                                                                    d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                                                                />\n                                                            </svg>\n                                                        </span>\n                                                        <span>My Orders</span>\n                                                    </span>\n                                                    <span\n                                                        onClick={(e) =>\n                                                            history.push(\n                                                                '/user/profile'\n                                                            )\n                                                        }\n                                                        className=\"flex space-x-2 py-2 px-8 hover:bg-gray-400 cursor-pointer\"\n                                                    >\n                                                        <span>\n                                                            <svg\n                                                                className=\"w-6 h-6\"\n                                                                fill=\"none\"\n                                                                stroke=\"currentColor\"\n                                                                viewBox=\"0 0 24 24\"\n                                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                            >\n                                                                <path\n                                                                    strokeLinecap=\"round\"\n                                                                    strokeLinejoin=\"round\"\n                                                                    strokeWidth={\n                                                                        2\n                                                                    }\n                                                                    d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n                                                                />\n                                                            </svg>\n                                                        </span>\n                                                        <span>My Account</span>\n                                                    </span>\n                                                    <span\n                                                        onClick={(e) =>\n                                                            history.push(\n                                                                '/wish-list'\n                                                            )\n                                                        }\n                                                        className=\"flex space-x-2 py-2 px-8 hover:bg-gray-400 cursor-pointer\"\n                                                    >\n                                                        <span>\n                                                            <svg\n                                                                className=\"w-6 h-6\"\n                                                                fill=\"none\"\n                                                                stroke=\"currentColor\"\n                                                                viewBox=\"0 0 24 24\"\n                                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                            >\n                                                                <path\n                                                                    strokeLinecap=\"round\"\n                                                                    strokeLinejoin=\"round\"\n                                                                    strokeWidth={\n                                                                        2\n                                                                    }\n                                                                    d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n                                                                />\n                                                            </svg>\n                                                        </span>\n                                                        <span>My Wishlist</span>\n                                                    </span>\n                                                    <span\n                                                        onClick={(e) =>\n                                                            history.push(\n                                                                '/user/setting'\n                                                            )\n                                                        }\n                                                        className=\"flex space-x-1 py-2 px-8 hover:bg-gray-400 cursor-pointer\"\n                                                    >\n                                                        <span>\n                                                            <svg\n                                                                className=\"w-6 h-6\"\n                                                                fill=\"none\"\n                                                                stroke=\"currentColor\"\n                                                                viewBox=\"0 0 24 24\"\n                                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                            >\n                                                                <path\n                                                                    strokeLinecap=\"round\"\n                                                                    strokeLinejoin=\"round\"\n                                                                    strokeWidth={\n                                                                        2\n                                                                    }\n                                                                    d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n                                                                />\n                                                                <path\n                                                                    strokeLinecap=\"round\"\n                                                                    strokeLinejoin=\"round\"\n                                                                    strokeWidth={\n                                                                        2\n                                                                    }\n                                                                    d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                                                                />\n                                                            </svg>\n                                                        </span>\n                                                        <span>Setting</span>\n                                                    </span>\n                                                    <span\n                                                        onClick={(e) =>\n                                                            logout()\n                                                        }\n                                                        className=\"flex space-x-2 py-2 px-8 hover:bg-gray-400 cursor-pointer\"\n                                                    >\n                                                        <span>\n                                                            <svg\n                                                                className=\"w-6 h-6\"\n                                                                fill=\"none\"\n                                                                stroke=\"currentColor\"\n                                                                viewBox=\"0 0 24 24\"\n                                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                            >\n                                                                <path\n                                                                    strokeLinecap=\"round\"\n                                                                    strokeLinejoin=\"round\"\n                                                                    strokeWidth={\n                                                                        2\n                                                                    }\n                                                                    d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                                                                />\n                                                            </svg>\n                                                        </span>\n                                                        <span>Logout</span>\n                                                    </span>\n                                                </li>\n                                            </Fragment>\n                                        ) : (\n                                            <Fragment>\n                                                <li className=\"flex flex-col text-gray-700 w-48 shadow-lg\">\n                                                    <span\n                                                        onClick={(e) =>\n                                                            history.push(\n                                                                '/admin/dashboard'\n                                                            )\n                                                        }\n                                                        className=\"flex space-x-2 py-2 px-8 hover:bg-gray-400 cursor-pointer\"\n                                                    >\n                                                        <span>\n                                                            <svg\n                                                                className=\"w-6 h-6\"\n                                                                fill=\"none\"\n                                                                stroke=\"currentColor\"\n                                                                viewBox=\"0 0 24 24\"\n                                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                            >\n                                                                <path\n                                                                    strokeLinecap=\"round\"\n                                                                    strokeLinejoin=\"round\"\n                                                                    strokeWidth={\n                                                                        2\n                                                                    }\n                                                                    d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n                                                                />\n                                                                <path\n                                                                    strokeLinecap=\"round\"\n                                                                    strokeLinejoin=\"round\"\n                                                                    strokeWidth={\n                                                                        2\n                                                                    }\n                                                                    d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                                                                />\n                                                            </svg>\n                                                        </span>\n                                                        <span>Admin Panel</span>\n                                                    </span>\n                                                    <span\n                                                        onClick={(e) =>\n                                                            logout()\n                                                        }\n                                                        className=\"flex space-x-2 py-2 px-8 hover:bg-gray-400 cursor-pointer\"\n                                                    >\n                                                        <span>\n                                                            <svg\n                                                                className=\"w-6 h-6\"\n                                                                fill=\"none\"\n                                                                stroke=\"currentColor\"\n                                                                viewBox=\"0 0 24 24\"\n                                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                            >\n                                                                <path\n                                                                    strokeLinecap=\"round\"\n                                                                    strokeLinejoin=\"round\"\n                                                                    strokeWidth={\n                                                                        2\n                                                                    }\n                                                                    d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                                                                />\n                                                            </svg>\n                                                        </span>\n                                                        <span>Logout</span>\n                                                    </span>\n                                                </li>\n                                            </Fragment>\n                                        )}\n                                    </div>\n                                </div>\n                            </Fragment>\n                        ) : (\n                            /* Login Modal Button */\n                            <div\n                                onClick={(e) => loginModalOpen()}\n                                className=\"cursor-pointer hover:bg-gray-200 px-2 py-2 rounded-lg\"\n                                title=\"Login\"\n                            >\n                                <svg\n                                    className=\"w-8 h-8 text-gray-600 hover:text-gray-800\"\n                                    fill=\"none\"\n                                    stroke=\"currentColor\"\n                                    viewBox=\"0 0 24 24\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                >\n                                    <path\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        strokeWidth={2}\n                                        d=\"M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1\"\n                                    />\n                                </svg>\n                            </div>\n                        )}\n                        {/* Cart Modal Button */}\n                        <div\n                            onClick={(e) => cartModalOpen()}\n                            className=\"hover:bg-gray-200 px-2 py-2 rounded-lg relative cursor-pointer\"\n                            title=\"Cart\"\n                        >\n                            <svg\n                                className=\"w-8 h-8 text-gray-600 hover:text-gray-800\"\n                                fill=\"none\"\n                                stroke=\"currentColor\"\n                                viewBox=\"0 0 24 24\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth={2}\n                                    d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\"\n                                />\n                            </svg>\n                            <span className=\"absolute top-0 ml-6 mt-1 bg-yellow-700 rounded px-1 text-white text-xs hover:text-gray-200 font-semibold\">\n                                {data.cartProduct !== null\n                                    ? data.cartProduct.length\n                                    : 0}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div\n                    className={\n                        data.navberHamburger && data.navberHamburger\n                            ? 'px-1 pb-2 md:pb-0 md:px-10 lg:hidden'\n                            : 'hidden px-1 pb-2 md:pb-0 md:px-10 lg:hidden'\n                    }\n                >\n                    <div className=\"col-span-1 flex flex-col text-gray-600\">\n                        <span\n                            className=\"font-medium text-lg tracking-widest hover:text-gray-800 hover:bg-gray-200 px-3 py-2 rounded-lg cursor-pointer\"\n                            onClick={(e) => history.push('/')}\n                        >\n                            Shop\n                        </span>\n                        <span\n                            className=\"font-medium text-lg tracking-widest hover:text-gray-800 hover:bg-gray-200 px-3 py-2 rounded-lg cursor-pointer\"\n                            onClick={(e) => history.push('/blog')}\n                        >\n                            Blog\n                        </span>\n                        <span\n                            className=\"font-medium text-lg tracking-widest hover:text-gray-800 hover:bg-gray-200 px-3 py-2 rounded-lg cursor-pointer\"\n                            onClick={(e) => history.push('/contact-us')}\n                        >\n                            Contact us\n                        </span>\n                    </div>\n                </div>\n            </nav>\n            {/* End Navber Section */}\n        </Fragment>\n    );\n};\n\nexport default Navber;\n","import React, { Fragment } from 'react';\nimport moment from 'moment';\n\nconst Footer = (props) => {\n    return (\n        <Fragment>\n            <footer\n                style={{ background: '#303031', color: '#87898A' }}\n                className=\"z-10 py-6 px-4 md:px-12 text-center\"\n            >\n                Tran Duc Bo Team {moment().format('YYYY')}\n            </footer>\n        </Fragment>\n    );\n};\n\nexport default Footer;\n","import axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_URL;\n\nexport const cartListProduct = async () => {\n  let carts = JSON.parse(localStorage.getItem(\"cart\"));\n  let productArray = [];\n  if (carts) {\n    for (const cart of carts) {\n      productArray.push(cart.id);\n    }\n  }\n  try {\n    let res = await axios.post(`${apiURL}/api/product/cart-product`, {\n      productArray,\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","export const cartList = () => {\n  let carts = localStorage.getItem(\"cart\")\n    ? JSON.parse(localStorage.getItem(\"cart\"))\n    : null;\n  let list = [];\n  if (carts !== null) {\n    for (let cart of carts) {\n      list.push(cart.id);\n    }\n    return list;\n  } else {\n    return (list = null);\n  }\n};\n\nexport const updateQuantity = (\n  type,\n  totalQuantitiy,\n  quantitiy,\n  setQuantitiy,\n  setAlertq\n) => {\n  if (type === \"increase\") {\n    if (quantitiy === totalQuantitiy) {\n      setAlertq(true);\n    } else {\n      setQuantitiy(quantitiy + 1);\n    }\n  } else if (type === \"decrease\") {\n    if (quantitiy === 1) {\n      setQuantitiy(1);\n      setAlertq(false);\n    } else {\n      setQuantitiy(quantitiy - 1);\n    }\n  }\n};\n\nexport const slideImage = (type, active, count, setCount, pImages) => {\n  if (active === count) {\n    return true;\n  }\n  if (type === \"increase\") {\n    if (count === pImages.length - 1) {\n      setCount(0);\n    } else if (count < pImages.length) {\n      setCount(count + 1);\n    }\n  }\n};\n\nexport const inCart = (id) => {\n  if (localStorage.getItem(\"cart\")) {\n    let cartProducts = JSON.parse(localStorage.getItem(\"cart\"));\n    for (let product of cartProducts) {\n      if (product.id === id) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const addToCart = (\n  id,\n  quantitiy,\n  price,\n  layoutDispatch,\n  setQuantitiy,\n  setAlertq,\n  fetchData,\n  totalCost\n) => {\n  let isObj = false;\n  let cart = localStorage.getItem(\"cart\")\n    ? JSON.parse(localStorage.getItem(\"cart\"))\n    : [];\n  if (cart.length > 0) {\n    cart.forEach((item) => {\n      if (item.id === id) {\n        isObj = true;\n      }\n    });\n    if (!isObj) {\n      cart.push({ id, quantitiy, price });\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n    }\n  } else {\n    cart.push({ id, quantitiy, price });\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }\n  layoutDispatch({ type: \"inCart\", payload: cartList() });\n  layoutDispatch({ type: \"cartTotalCost\", payload: totalCost() });\n  setQuantitiy(1);\n  setAlertq(false);\n  fetchData();\n};\n","export const subTotal = (id, price) => {\n  let subTotalCost = 0;\n  let carts = JSON.parse(localStorage.getItem(\"cart\"));\n  carts.filter((item) => {\n    if (item.id === id) {\n      subTotalCost = item.quantitiy * price;\n    }\n  });\n  return subTotalCost;\n};\n\nexport const quantity = (id) => {\n  let product = 0;\n  let carts = JSON.parse(localStorage.getItem(\"cart\"));\n  carts.filter((item) => {\n    if (item.id === id) {\n      product = item.quantitiy;\n    }\n  });\n  return product;\n};\n\nexport const totalCost = () => {\n  let totalCost = 0;\n  let carts = JSON.parse(localStorage.getItem(\"cart\"));\n  carts.map((item) => {\n    totalCost += item.quantitiy * item.price;\n  });\n  return totalCost;\n};\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { LayoutContext } from \"../index\";\nimport { cartListProduct } from \"./FetchApi\";\nimport { isAuthenticate } from \"../auth/fetchApi\";\nimport { cartList } from \"../productDetails/Mixins\";\nimport { subTotal, quantity, totalCost } from \"./Mixins\";\n\nconst apiURL = process.env.REACT_APP_API_URL;\n\nconst CartModal = (props) => {\n  const history = useHistory();\n\n  const { data, dispatch } = useContext(LayoutContext);\n  const products = data.cartProduct;\n\n  const cartModalOpen = () =>\n    dispatch({ type: \"cartModalToggle\", payload: !data.cartModal });\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      let responseData = await cartListProduct();\n      if (responseData && responseData.Products) {\n        dispatch({ type: \"cartProduct\", payload: responseData.Products });\n        dispatch({ type: \"cartTotalCost\", payload: totalCost() });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const removeCartProduct = (id) => {\n    let cart = localStorage.getItem(\"cart\")\n      ? JSON.parse(localStorage.getItem(\"cart\"))\n      : [];\n    if (cart.length !== 0) {\n      cart = cart.filter((item) => item.id !== id);\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      fetchData();\n      dispatch({ type: \"inCart\", payload: cartList() });\n      dispatch({ type: \"cartTotalCost\", payload: totalCost() });\n    }\n    if (cart.length === 0) {\n      dispatch({ type: \"cartProduct\", payload: null });\n      fetchData();\n      dispatch({ type: \"inCart\", payload: cartList() });\n    }\n  };\n\n  return (\n    <Fragment>\n      {/* Black Overlay */}\n      <div\n        className={`${\n          !data.cartModal ? \"hidden\" : \"\"\n        } fixed top-0 z-30 w-full h-full bg-black opacity-50`}\n      />\n      {/* Cart Modal Start */}\n      <section\n        className={`${\n          !data.cartModal ? \"hidden\" : \"\"\n        } fixed z-40 inset-0 flex items-start justify-end`}\n      >\n        <div\n          style={{ background: \"#303031\" }}\n          className=\"w-full md:w-5/12 lg:w-4/12 h-full flex flex-col justify-between\"\n        >\n          <div className=\"overflow-y-auto\">\n            <div className=\"border-b border-gray-700 flex justify-between\">\n              <div className=\"p-4 text-white text-lg font-semibold\">Cart</div>\n              {/* Cart Modal Close Button */}\n              <div className=\"p-4 text-white\">\n                <svg\n                  onClick={(e) => cartModalOpen()}\n                  className=\"w-6 h-6 cursor-pointer\"\n                  fill=\"currentColor\"\n                  viewBox=\"0 0 20 20\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              </div>\n            </div>\n            <div className=\"m-4 flex-col\">\n              {products &&\n                products.length !== 0 &&\n                products.map((item, index) => {\n                  return (\n                    <Fragment key={index}>\n                      {/* Cart Product Start */}\n                      <div className=\"text-white flex space-x-2 my-4 items-center\">\n                        <img\n                          className=\"w-16 h-16 object-cover object-center\"\n                          src={`${apiURL}/uploads/products/${item.pImages[0]}`}\n                          alt=\"cartProduct\"\n                        />\n                        <div className=\"relative w-full flex flex-col\">\n                          <div className=\"my-2\">{item.pName}</div>\n                          <div className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center justify-between space-x-2\">\n                              <div className=\"text-sm text-gray-400\">\n                                Quantity :\n                              </div>\n                              <div className=\"flex items-end\">\n                                <span className=\"text-sm text-gray-200\">\n                                  {quantity(item._id)}\n                                </span>\n                              </div>\n                            </div>\n                            <div>\n                              {\" \"}\n                              <span className=\"text-sm text-gray-400\">\n                                Subtotoal :\n                              </span>{\" \"}\n                              ${subTotal(item._id, item.pPrice)}.00\n                            </div>{\" \"}\n                            {/* SUbtotal Count */}\n                          </div>\n                          {/* Cart Product Remove Button */}\n                          <div\n                            onClick={(e) => removeCartProduct(item._id)}\n                            className=\"absolute top-0 right-0 text-white\"\n                          >\n                            <svg\n                              className=\"w-5 h-5 cursor-pointer\"\n                              fill=\"currentColor\"\n                              viewBox=\"0 0 20 20\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                              <path\n                                fillRule=\"evenodd\"\n                                d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                                clipRule=\"evenodd\"\n                              />\n                            </svg>\n                          </div>\n                        </div>\n                      </div>\n                      {/* Cart Product Start */}\n                    </Fragment>\n                  );\n                })}\n\n              {products === null && (\n                <div className=\"m-4 flex-col text-white text-xl text-center\">\n                  No product in cart\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"m-4 space-y-4\">\n            <div\n              onClick={(e) => cartModalOpen()}\n              className=\"cursor-pointer px-4 py-2 border border-gray-400 text-white text-center cursor-pointer\"\n            >\n              Continue shipping\n            </div>\n            {data.cartTotalCost ? (\n              <Fragment>\n                {isAuthenticate() ? (\n                  <div\n                    className=\"px-4 py-2 bg-black text-white text-center cursor-pointer\"\n                    onClick={(e) => {\n                      history.push(\"/checkout\");\n                      cartModalOpen();\n                    }}\n                  >\n                    Checkout ${data.cartTotalCost}.00\n                  </div>\n                ) : (\n                  <div\n                    className=\"px-4 py-2 bg-black text-white text-center cursor-pointer\"\n                    onClick={(e) => {\n                      history.push(\"/\");\n                      cartModalOpen();\n                      dispatch({\n                        type: \"loginSignupError\",\n                        payload: !data.loginSignupError,\n                      });\n                      dispatch({\n                        type: \"loginSignupModalToggle\",\n                        payload: !data.loginSignupModal,\n                      });\n                    }}\n                  >\n                    Checkout ${data.cartTotalCost}.00\n                  </div>\n                )}\n              </Fragment>\n            ) : (\n              <div className=\"px-4 py-2 bg-black text-white text-center cursor-not-allowed\">\n                Checkout\n              </div>\n            )}\n          </div>\n        </div>\n      </section>\n      {/* Cart Modal End */}\n    </Fragment>\n  );\n};\n\nexport default CartModal;\n","import React, { Fragment, useState, useContext } from \"react\";\nimport { loginReq } from \"./fetchApi\";\nimport { LayoutContext } from \"../index\";\n\nconst Login = (props) => {\n  const { data: layoutData, dispatch: layoutDispatch } = useContext(\n    LayoutContext\n  );\n\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    error: false,\n    loading: true,\n  });\n\n  const alert = (msg) => <div className=\"text-xs text-red-500\">{msg}</div>;\n\n  const formSubmit = async () => {\n    setData({ ...data, loading: true });\n    try {\n      let responseData = await loginReq({\n        email: data.email,\n        password: data.password,\n      });\n      if (responseData.error) {\n        setData({\n          ...data,\n          loading: false,\n          error: responseData.error,\n          password: \"\",\n        });\n      } else if (responseData.token) {\n        setData({ email: \"\", password: \"\", loading: false, error: false });\n        localStorage.setItem(\"jwt\", JSON.stringify(responseData));\n        window.location.href = \"/\";\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"text-center text-2xl mb-6\">Login</div>\n      {layoutData.loginSignupError ? (\n        <div className=\"bg-red-200 py-2 px-4 rounded\">\n          You need to login for checkout. Haven't accont? Create new one.\n        </div>\n      ) : (\n        \"\"\n      )}\n      <form className=\"space-y-4\">\n        <div className=\"flex flex-col\">\n          <label htmlFor=\"name\">\n            Username or email address\n            <span className=\"text-sm text-gray-600 ml-1\">*</span>\n          </label>\n          <input\n            onChange={(e) => {\n              setData({ ...data, email: e.target.value, error: false });\n              layoutDispatch({ type: \"loginSignupError\", payload: false });\n            }}\n            value={data.email}\n            type=\"text\"\n            id=\"name\"\n            className={`${\n              !data.error ? \"\" : \"border-red-500\"\n            } px-4 py-2 focus:outline-none border`}\n          />\n          {!data.error ? \"\" : alert(data.error)}\n        </div>\n        <div className=\"flex flex-col\">\n          <label htmlFor=\"password\">\n            Password<span className=\"text-sm text-gray-600 ml-1\">*</span>\n          </label>\n          <input\n            onChange={(e) => {\n              setData({ ...data, password: e.target.value, error: false });\n              layoutDispatch({ type: \"loginSignupError\", payload: false });\n            }}\n            value={data.password}\n            type=\"password\"\n            id=\"password\"\n            className={`${\n              !data.error ? \"\" : \"border-red-500\"\n            } px-4 py-2 focus:outline-none border`}\n          />\n          {!data.error ? \"\" : alert(data.error)}\n        </div>\n        <div className=\"flex flex-col space-y-2 md:flex-row md:justify-between md:items-center\">\n          <div>\n            <input\n              type=\"checkbox\"\n              id=\"rememberMe\"\n              className=\"px-4 py-2 focus:outline-none border mr-1\"\n            />\n            <label htmlFor=\"rememberMe\">\n              Remember me<span className=\"text-sm text-gray-600\">*</span>\n            </label>\n          </div>\n          <a className=\"block text-gray-600\" href=\"/\">\n            Lost your password?\n          </a>\n        </div>\n        <div\n          onClick={(e) => formSubmit()}\n          style={{ background: \"#303031\" }}\n          className=\"font-medium px-4 py-2 text-white text-center cursor-pointer\"\n        >\n          Login\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default Login;\n","import React, { Fragment, useState } from \"react\";\nimport { signupReq } from \"./fetchApi\";\n\nconst Signup = (props) => {\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    cPassword: \"\",\n    error: false,\n    loading: false,\n    success: false,\n  });\n\n  const alert = (msg, type) => (\n    <div className={`text-sm text-${type}-500`}>{msg}</div>\n  );\n\n  const formSubmit = async () => {\n    setData({ ...data, loading: true });\n    if (data.cPassword !== data.password) {\n      return setData({\n        ...data,\n        error: {\n          cPassword: \"Password doesn't match\",\n          password: \"Password doesn't match\",\n        },\n      });\n    }\n    try {\n      let responseData = await signupReq({\n        name: data.name,\n        email: data.email,\n        password: data.password,\n        cPassword: data.cPassword,\n      });\n      if (responseData.error) {\n        setData({\n          ...data,\n          loading: false,\n          error: responseData.error,\n          password: \"\",\n          cPassword: \"\",\n        });\n      } else if (responseData.success) {\n        setData({\n          success: responseData.success,\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          cPassword: \"\",\n          loading: false,\n          error: false,\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"text-center text-2xl mb-6\">Register</div>\n      <form className=\"space-y-4\">\n        {data.success ? alert(data.success, \"green\") : \"\"}\n        <div className=\"flex flex-col\">\n          <label htmlFor=\"name\">\n            Name<span className=\"text-sm text-gray-600 ml-1\">*</span>\n          </label>\n          <input\n            onChange={(e) =>\n              setData({\n                ...data,\n                success: false,\n                error: {},\n                name: e.target.value,\n              })\n            }\n            value={data.name}\n            type=\"text\"\n            id=\"name\"\n            className={`${\n              data.error.name ? \"border-red-500\" : \"\"\n            } px-4 py-2 focus:outline-none border`}\n          />\n          {!data.error ? \"\" : alert(data.error.name, \"red\")}\n        </div>\n        <div className=\"flex flex-col\">\n          <label htmlFor=\"email\">\n            Email address<span className=\"text-sm text-gray-600 ml-1\">*</span>\n          </label>\n          <input\n            onChange={(e) =>\n              setData({\n                ...data,\n                success: false,\n                error: {},\n                email: e.target.value,\n              })\n            }\n            value={data.email}\n            type=\"email\"\n            id=\"email\"\n            className={`${\n              data.error.email ? \"border-red-500\" : \"\"\n            } px-4 py-2 focus:outline-none border`}\n          />\n          {!data.error ? \"\" : alert(data.error.email, \"red\")}\n        </div>\n        <div className=\"flex flex-col\">\n          <label htmlFor=\"password\">\n            Password<span className=\"text-sm text-gray-600 ml-1\">*</span>\n          </label>\n          <input\n            onChange={(e) =>\n              setData({\n                ...data,\n                success: false,\n                error: {},\n                password: e.target.value,\n              })\n            }\n            value={data.password}\n            type=\"password\"\n            id=\"password\"\n            className={`${\n              data.error.password ? \"border-red-500\" : \"\"\n            } px-4 py-2 focus:outline-none border`}\n          />\n          {!data.error ? \"\" : alert(data.error.password, \"red\")}\n        </div>\n        <div className=\"flex flex-col\">\n          <label htmlFor=\"cPassword\">\n            Confirm password\n            <span className=\"text-sm text-gray-600 ml-1\">*</span>\n          </label>\n          <input\n            onChange={(e) =>\n              setData({\n                ...data,\n                success: false,\n                error: {},\n                cPassword: e.target.value,\n              })\n            }\n            value={data.cPassword}\n            type=\"password\"\n            id=\"cPassword\"\n            className={`${\n              data.error.cPassword ? \"border-red-500\" : \"\"\n            } px-4 py-2 focus:outline-none border`}\n          />\n          {!data.error ? \"\" : alert(data.error.cPassword, \"red\")}\n        </div>\n        <div className=\"flex flex-col space-y-2 md:flex-row md:justify-between md:items-center\">\n          <div>\n            <input\n              type=\"checkbox\"\n              id=\"rememberMe\"\n              className=\"px-4 py-2 focus:outline-none border mr-1\"\n            />\n            <label htmlFor=\"rememberMe\">\n              Remember me<span className=\"text-sm text-gray-600\">*</span>\n            </label>\n          </div>\n          <a className=\"block text-gray-600\" href=\"/\">\n            Lost your password?\n          </a>\n        </div>\n        <div\n          onClick={(e) => formSubmit()}\n          style={{ background: \"#303031\" }}\n          className=\"px-4 py-2 text-white text-center cursor-pointer font-medium\"\n        >\n          Create an account\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default Signup;\n","import React, { Fragment, useState, useContext } from \"react\";\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nimport { LayoutContext } from \"../index\";\n\nconst LoginSignup = (props) => {\n  const { data, dispatch } = useContext(LayoutContext);\n\n  const [login, setLogin] = useState(true);\n  const [loginValue, setLoginValue] = useState(\"Create an account\");\n\n  const loginSignupModalToggle = () =>\n    data.loginSignupModal\n      ? dispatch({ type: \"loginSignupModalToggle\", payload: false })\n      : dispatch({ type: \"loginSignupModalToggle\", payload: true });\n\n  const changeLoginSignup = () => {\n    if (login) {\n      setLogin(false);\n      setLoginValue(\"Login\");\n    } else {\n      setLogin(true);\n      setLoginValue(\"Create an account\");\n    }\n  };\n\n  return (\n    <Fragment>\n      {/* Black Overlay  */}\n      <div\n        onClick={(e) => loginSignupModalToggle()}\n        className={` ${\n          data.loginSignupModal ? \"\" : \"hidden\"\n        } fixed top-0 z-40 w-full h-screen bg-black opacity-50 cursor-pointer`}\n      ></div>\n      {/* Signup Login Component Render */}\n      <section\n        className={` ${\n          data.loginSignupModal ? \"\" : \"hidden\"\n        } fixed z-40 inset-0 my-8 md:my-20 flex items-start justify-center overflow-auto`}\n      >\n        <div className=\"w-11/12 md:w-3/5 lg:w-2/4 relative space-y-4 bg-white p-6 md:px-12 md:py-6\">\n          {login ? <Login /> : <Signup />}\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"border-b border-gray-500 w-full\" />\n            <span className=\"font-medium\">or</span>\n            <span className=\"border-b border-gray-500 w-full\" />\n          </div>\n          <div\n            onClick={(e) => changeLoginSignup()}\n            style={{ color: \"#303031\", border: \"1px solid #303031\" }}\n            className=\"px-4 py-2 font-medium text-center cursor-pointer\"\n          >\n            {loginValue}\n          </div>\n          {/*  Modal Close Button */}\n          <div className=\"absolute top-0 right-0 mx-4\">\n            <svg\n              onClick={(e) => {\n                loginSignupModalToggle();\n                dispatch({ type: \"loginSignupError\", payload: false });\n              }}\n              className=\"w-6 h-6 cursor-pointer\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </div>\n        </div>\n      </section>\n    </Fragment>\n  );\n};\n\nexport default LoginSignup;\n","import React, { Fragment, createContext } from \"react\";\nimport { Navber, Footer, CartModal } from \"../partials\";\nimport LoginSignup from \"../auth/LoginSignup\";\n\nexport const LayoutContext = createContext();\n\nconst Layout = ({ children }) => {\n  return (\n    <Fragment>\n      <div className=\"flex-grow\">\n        <Navber />\n        <LoginSignup />\n        <CartModal />\n        {/* All Children pass from here */}\n        {children}\n      </div>\n      <Footer />\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import React, { Fragment, useContext } from \"react\";\nimport { LayoutContext } from \"../layout\";\n\nconst OrderSuccessMessage = (props) => {\n  const { data, dispatch } = useContext(LayoutContext);\n  return (\n    <Fragment>\n      <div\n        className={`${\n          data.orderSuccess ? \"\" : \"hidden\"\n        } fixed bottom-0 flex justify-between items-center z-30 w-full bg-gray-800 text-white text-lg py-8 md:py-16 md:text-xl px-4 text-center`}\n      >\n        <span className=\"w-10/12 md:w-full\">\n          Your Order in process. Wait 2 days to deliver.\n        </span>\n        <span\n          onClick={(e) => dispatch({ type: \"orderSuccess\", payload: false })}\n          className=\"hover:bg-gray-400 hover:text-gray-800 p-2 rounded-full cursor-pointer\"\n        >\n          <svg\n            className=\"w-6 h-6\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        </span>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default OrderSuccessMessage;\n","import axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_URL;\n\nexport const DashboardData = async () => {\n  try {\n    let res = await axios.post(`${apiURL}/api/customize/dashboard-data`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSliderImages = async () => {\n  try {\n    let res = await axios.get(`${apiURL}/api/customize/get-slide-image`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const postUploadImage = async (formData) => {\n  try {\n    let res = await axios.post(\n      `${apiURL}/api/customize/upload-slide-image`,\n      formData\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const postDeleteImage = async (id) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/customize/delete-slide-image`, {\n      id,\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_URL;\n\nexport const getAllOrder = async () => {\n  try {\n    let res = await axios.get(`${apiURL}/api/order/get-all-orders`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const editCategory = async (oId, status) => {\n  let data = { oId: oId, status: status };\n  console.log(data);\n  try {\n    let res = await axios.post(`${apiURL}/api/order/update-order`, data);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteOrder = async (oId) => {\n  let data = { oId: oId };\n  try {\n    let res = await axios.post(`${apiURL}/api/order/delete-order`, data);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  DashboardData,\n  postUploadImage,\n  getSliderImages,\n  postDeleteImage,\n} from \"./FetchApi\";\nimport { getAllOrder } from \"../orders/FetchApi.js\";\n\nexport const GetAllData = async (dispatch) => {\n  let responseData = await DashboardData();\n  if (responseData) {\n    dispatch({ type: \"totalData\", payload: responseData });\n  }\n};\n\nexport const todayAllOrders = async (dispatch) => {\n  let responseData = await getAllOrder();\n  if (responseData) {\n    dispatch({ type: \"totalOrders\", payload: responseData });\n  }\n};\n\nexport const sliderImages = async (dispatch) => {\n  try {\n    let responseData = await getSliderImages();\n    if (responseData && responseData.Images) {\n      dispatch({ type: \"sliderImages\", payload: responseData.Images });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteImage = async (id, dispatch) => {\n  dispatch({ type: \"imageUpload\", payload: true });\n  try {\n    let responseData = await postDeleteImage(id);\n    if (responseData && responseData.success) {\n      setTimeout(function () {\n        sliderImages(dispatch);\n        dispatch({ type: \"imageUpload\", payload: false });\n      }, 1000);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const uploadImage = async (image, dispatch) => {\n  dispatch({ type: \"imageUpload\", payload: true });\n  let formData = new FormData();\n  formData.append(\"image\", image);\n  console.log(formData.get(\"image\"));\n  try {\n    let responseData = await postUploadImage(formData);\n    if (responseData && responseData.success) {\n      setTimeout(function () {\n        dispatch({ type: \"imageUpload\", payload: false });\n        sliderImages(dispatch);\n      }, 1000);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n","export const isWish = (id, wList) => {\n  if (wList !== null && wList.includes(id) === true) {\n    return true;\n  }\n  return false;\n};\n\nexport const isWishReq = (e, id, setWlist) => {\n  let list = localStorage.getItem(\"wishList\")\n    ? JSON.parse(localStorage.getItem(\"wishList\"))\n    : [];\n  if (list.length > 0) {\n    if (list.includes(id) !== true) {\n      list.push(id);\n      localStorage.setItem(\"wishList\", JSON.stringify(list));\n      setWlist(list);\n    }\n  } else {\n    list.push(id);\n    localStorage.setItem(\"wishList\", JSON.stringify(list));\n    setWlist(list);\n  }\n};\n\nexport const unWishReq = (e, id, setWlist) => {\n  let list = localStorage.getItem(\"wishList\")\n    ? JSON.parse(localStorage.getItem(\"wishList\"))\n    : [];\n  if (list.length > 0) {\n    if (list.includes(id) === true) {\n      list.splice(list.indexOf(id), 1);\n      localStorage.setItem(\"wishList\", JSON.stringify(list));\n      setWlist(list);\n    }\n  }\n};\n\nexport const nextSlide = (totalImg, slide, setSlide) => {\n  if (slide === totalImg - 1) {\n    setSlide(0);\n  } else if (slide < totalImg) {\n    setSlide(slide + 1);\n  }\n};\n\nexport const prevSlide = (totalImg, slide, setSlide) => {\n  if (slide === 0) {\n    setSlide(totalImg - 1);\n  } else if (slide === totalImg - 1) {\n    setSlide(0);\n  }\n};\n","import React, { Fragment, useEffect, useContext, useState } from \"react\";\nimport OrderSuccessMessage from \"./OrderSuccessMessage\";\nimport { HomeContext } from \"./\";\nimport { sliderImages } from \"../../admin/dashboardAdmin/Action\";\nimport { prevSlide, nextSlide } from \"./Mixins\";\n\nconst apiURL = process.env.REACT_APP_API_URL;\n\nconst Slider = (props) => {\n  const { data, dispatch } = useContext(HomeContext);\n  const [slide, setSlide] = useState(0);\n\n  useEffect(() => {\n    sliderImages(dispatch);\n  }, []);\n\n  return (\n    <Fragment>\n      <div className=\"relative mt-16 bg-gray-100 border-2\">\n        {data.sliderImages.length > 0 ? (\n          <img\n            className=\"w-full\"\n            src={`${apiURL}/uploads/customize/${data.sliderImages[slide].slideImage}`}\n            alt=\"sliderImage\"\n          />\n        ) : (\n          \"\"\n        )}\n        <svg\n          onClick={(e) => prevSlide(data.sliderImages.length, slide, setSlide)}\n          className={`z-10 absolute top-0 left-0 mt-64 flex justify-end items-center box-border flex justify-center w-12 h-12 text-gray-700  cursor-pointer hover:text-yellow-700`}\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M15 19l-7-7 7-7\"\n          />\n        </svg>\n        <svg\n          onClick={(e) => nextSlide(data.sliderImages.length, slide, setSlide)}\n          className={`z-10 absolute top-0 right-0 mt-64 flex justify-start items-center box-border flex justify-center w-12 h-12 text-gray-700 cursor-pointer hover:text-yellow-700`}\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M9 5l7 7-7 7\"\n          />\n        </svg>\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <a\n            href=\"#shop\"\n            style={{ background: \"#303031\" }}\n            className=\"cursor-pointer box-border text-2xl text-white px-4 py-2 rounded\"\n          >\n            Shop Now\n          </a>\n        </div>\n      </div>\n      <OrderSuccessMessage />\n    </Fragment>\n  );\n};\n\nexport default Slider;\n","import axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_URL;\n\nconst BearerToken = () =>\n  localStorage.getItem(\"jwt\")\n    ? JSON.parse(localStorage.getItem(\"jwt\")).token\n    : false;\nconst Headers = () => {\n  return {\n    headers: {\n      token: `Bearer ${BearerToken()}`,\n    },\n  };\n};\n\nexport const getAllCategory = async () => {\n  try {\n    let res = await axios.get(`${apiURL}/api/category/all-category`, Headers());\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createCategory = async ({\n  cName,\n  cImage,\n  cDescription,\n  cStatus,\n}) => {\n  let formData = new FormData();\n  formData.append(\"cImage\", cImage);\n  formData.append(\"cName\", cName);\n  formData.append(\"cDescription\", cDescription);\n  formData.append(\"cStatus\", cStatus);\n\n  try {\n    let res = await axios.post(\n      `${apiURL}/api/category/add-category`,\n      formData,\n      Headers()\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const editCategory = async (cId, des, status) => {\n  let data = { cId: cId, cDescription: des, cStatus: status };\n  try {\n    let res = await axios.post(\n      `${apiURL}/api/category/edit-category`,\n      data,\n      Headers()\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteCategory = async (cId) => {\n  try {\n    let res = await axios.post(\n      `${apiURL}/api/category/delete-category`,\n      { cId },\n      Headers()\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_URL;\n\nexport const getAllProduct = async () => {\n  try {\n    let res = await axios.get(`${apiURL}/api/product/all-product`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createPorductImage = async ({ pImage }) => {\n  /* Most important part for uploading multiple image  */\n  let formData = new FormData();\n  for (const file of pImage) {\n    formData.append(\"pImage\", file);\n  }\n  /* Most important part for uploading multiple image  */\n};\n\nexport const createProduct = async ({\n  pName,\n  pDescription,\n  pImage,\n  pStatus,\n  pCategory,\n  pQuantity,\n  pPrice,\n  pOffer,\n}) => {\n  /* Most important part for uploading multiple image  */\n  let formData = new FormData();\n  for (const file of pImage) {\n    formData.append(\"pImage\", file);\n  }\n  /* Most important part for uploading multiple image  */\n  formData.append(\"pName\", pName);\n  formData.append(\"pDescription\", pDescription);\n  formData.append(\"pStatus\", pStatus);\n  formData.append(\"pCategory\", pCategory);\n  formData.append(\"pQuantity\", pQuantity);\n  formData.append(\"pPrice\", pPrice);\n  formData.append(\"pOffer\", pOffer);\n\n  try {\n    let res = await axios.post(`${apiURL}/api/product/add-product`, formData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const editProduct = async (product) => {\n  console.log(product);\n  /* Most important part for updating multiple image  */\n  let formData = new FormData();\n  if (product.pEditImages) {\n    for (const file of product.pEditImages) {\n      formData.append(\"pEditImages\", file);\n    }\n  }\n  /* Most important part for updating multiple image  */\n  formData.append(\"pId\", product.pId);\n  formData.append(\"pName\", product.pName);\n  formData.append(\"pDescription\", product.pDescription);\n  formData.append(\"pStatus\", product.pStatus);\n  formData.append(\"pCategory\", product.pCategory._id);\n  formData.append(\"pQuantity\", product.pQuantity);\n  formData.append(\"pPrice\", product.pPrice);\n  formData.append(\"pOffer\", product.pOffer);\n  formData.append(\"pImages\", product.pImages);\n\n  try {\n    let res = await axios.post(`${apiURL}/api/product/edit-product`, formData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteProduct = async (pId) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/product/delete-product`, { pId });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const productByCategory = async (catId) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/product/product-by-category`, {\n      catId,\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const productByPrice = async (price) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/product/product-by-price`, {\n      price,\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { HomeContext } from \"./index\";\nimport { getAllCategory } from \"../../admin/categories/FetchApi\";\nimport { getAllProduct, productByPrice } from \"../../admin/products/FetchApi\";\nimport \"./style.css\";\n\nconst apiURL = process.env.REACT_APP_API_URL;\n\nconst CategoryList = () => {\n  const history = useHistory();\n  const { data } = useContext(HomeContext);\n  const [categories, setCategories] = useState(null);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      let responseData = await getAllCategory();\n      if (responseData && responseData.Categories) {\n        setCategories(responseData.Categories);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className={`${data.categoryListDropdown ? \"\" : \"hidden\"} my-4`}>\n      <hr />\n      <div className=\"py-1 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4\">\n        {categories && categories.length > 0 ? (\n          categories.map((item, index) => {\n            return (\n              <Fragment key={index}>\n                <div\n                  onClick={(e) =>\n                    history.push(`/products/category/${item._id}`)\n                  }\n                  className=\"col-span-1 m-2 flex flex-col items-center justify-center space-y-2 cursor-pointer\"\n                >\n                  <img\n                    src={`${apiURL}/uploads/categories/${item.cImage}`}\n                    alt=\"pic\"\n                  />\n                  <div className=\"font-medium\">{item.cName}</div>\n                </div>\n              </Fragment>\n            );\n          })\n        ) : (\n          <div className=\"text-xl text-center my-4\">No Category</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst FilterList = () => {\n  const { data, dispatch } = useContext(HomeContext);\n  const [range, setRange] = useState(0);\n\n  const rangeHandle = (e) => {\n    setRange(e.target.value);\n    fetchData(e.target.value);\n  };\n\n  const fetchData = async (price) => {\n    if (price === \"all\") {\n      try {\n        let responseData = await getAllProduct();\n        if (responseData && responseData.Products) {\n          dispatch({ type: \"setProducts\", payload: responseData.Products });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      dispatch({ type: \"loading\", payload: true });\n      try {\n        setTimeout(async () => {\n          let responseData = await productByPrice(price);\n          if (responseData && responseData.Products) {\n            console.log(responseData.Products);\n            dispatch({ type: \"setProducts\", payload: responseData.Products });\n            dispatch({ type: \"loading\", payload: false });\n          }\n        }, 700);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const closeFilterBar = () => {\n    fetchData(\"all\");\n    dispatch({ type: \"filterListDropdown\", payload: !data.filterListDropdown });\n    setRange(0);\n  };\n\n  return (\n    <div className={`${data.filterListDropdown ? \"\" : \"hidden\"} my-4`}>\n      <hr />\n      <div className=\"w-full flex flex-col\">\n        <div className=\"font-medium py-2\">Filter by price</div>\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex flex-col space-y-2  w-2/3 lg:w-2/4\">\n            <label htmlFor=\"points\" className=\"text-sm\">\n              Price (between 0 and 10$):{\" \"}\n              <span className=\"font-semibold text-yellow-700\">{range}.00$</span>{\" \"}\n            </label>\n            <input\n              value={range}\n              className=\"slider\"\n              type=\"range\"\n              id=\"points\"\n              min=\"0\"\n              max=\"1000\"\n              step=\"10\"\n              onChange={(e) => rangeHandle(e)}\n            />\n          </div>\n          <div onClick={(e) => closeFilterBar()} className=\"cursor-pointer\">\n            <svg\n              className=\"w-8 h-8 text-gray-700 hover:bg-gray-200 rounded-full p-1\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M6 18L18 6M6 6l12 12\"\n              />\n            </svg>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Search = () => {\n  const { data, dispatch } = useContext(HomeContext);\n  const [search, setSearch] = useState(\"\");\n  const [productArray, setPa] = useState(null);\n\n  const searchHandle = (e) => {\n    setSearch(e.target.value);\n    fetchData();\n    dispatch({\n      type: \"searchHandleInReducer\",\n      payload: e.target.value,\n      productArray: productArray,\n    });\n  };\n\n  const fetchData = async () => {\n    dispatch({ type: \"loading\", payload: true });\n    try {\n      setTimeout(async () => {\n        let responseData = await getAllProduct();\n        if (responseData && responseData.Products) {\n          setPa(responseData.Products);\n          dispatch({ type: \"loading\", payload: false });\n        }\n      }, 700);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const closeSearchBar = () => {\n    dispatch({ type: \"searchDropdown\", payload: !data.searchDropdown });\n    fetchData();\n    dispatch({ type: \"setProducts\", payload: productArray });\n    setSearch(\"\");\n  };\n\n  return (\n    <div\n      className={`${\n        data.searchDropdown ? \"\" : \"hidden\"\n      } my-4 flex items-center justify-between`}\n    >\n      <input\n        value={search}\n        onChange={(e) => searchHandle(e)}\n        className=\"px-4 text-xl py-4 focus:outline-none\"\n        type=\"text\"\n        placeholder=\"Search products...\"\n      />\n      <div onClick={(e) => closeSearchBar()} className=\"cursor-pointer\">\n        <svg\n          className=\"w-8 h-8 text-gray-700 hover:bg-gray-200 rounded-full p-1\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M6 18L18 6M6 6l12 12\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nconst ProductCategoryDropdown = (props) => {\n  return (\n    <Fragment>\n      <CategoryList />\n      <FilterList />\n      <Search />\n    </Fragment>\n  );\n};\n\nexport default ProductCategoryDropdown;\n","import React, { Fragment, useContext } from \"react\";\nimport ProductCategoryDropdown from \"./ProductCategoryDropdown\";\nimport { HomeContext } from \"./index\";\n\nconst ProductCategory = (props) => {\n  const { data, dispatch } = useContext(HomeContext);\n\n  return (\n    <Fragment>\n      <div className=\"flex justify-between font-medium\">\n        <div\n          onClick={(e) =>\n            dispatch({\n              type: \"categoryListDropdown\",\n              payload: !data.categoryListDropdown,\n            })\n          }\n          className={`flex items-center space-x-1 cursor-pointer ${\n            data.categoryListDropdown ? \"text-yellow-700\" : \"\"\n          }`}\n        >\n          <span className=\"text-md md:text-lg hover:text-yellow-700\">\n            Categories\n          </span>\n          <svg\n            className=\"w-4 h-4 text-yellow-700\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M19 9l-7 7-7-7\"\n            ></path>\n          </svg>\n        </div>\n        <div className=\"flex space-x-2\">\n          <div\n            onClick={(e) =>\n              dispatch({\n                type: \"filterListDropdown\",\n                payload: !data.filterListDropdown,\n              })\n            }\n            className={`flex items-center space-x-1 cursor-pointer ${\n              data.filterListDropdown ? \"text-yellow-700\" : \"\"\n            }`}\n          >\n            <span className=\"text-md md:text-lg\">Filter</span>\n            <span>\n              <svg\n                className=\"w-4 h-4 text-gray-700 text-yellow-700\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4\"\n                ></path>\n              </svg>\n            </span>\n          </div>\n          <span>/</span>\n          <div\n            onClick={(e) =>\n              dispatch({\n                type: \"searchDropdown\",\n                payload: !data.searchDropdown,\n              })\n            }\n            className={`flex items-center space-x-1 cursor-pointer ${\n              data.searchDropdown ? \"text-yellow-700\" : \"\"\n            }`}\n          >\n            <span className=\"text-md md:text-lg\">Search</span>\n            <span>\n              <svg\n                className=\"w-4 h-4 text-gray-700 text-yellow-700\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                ></path>\n              </svg>\n            </span>\n          </div>\n        </div>\n      </div>\n      <ProductCategoryDropdown />\n    </Fragment>\n  );\n};\n\nexport default ProductCategory;\n","export const homeState = {\n  categoryListDropdown: false,\n  filterListDropdown: false,\n  searchDropdown: false,\n  products: null,\n  loading: false,\n  sliderImages: [],\n};\n\nexport const homeReducer = (state, action) => {\n  switch (action.type) {\n    case \"categoryListDropdown\":\n      return {\n        ...state,\n        categoryListDropdown: action.payload,\n        filterListDropdown: false,\n        searchDropdown: false,\n      };\n    case \"filterListDropdown\":\n      return {\n        ...state,\n        categoryListDropdown: false,\n        filterListDropdown: action.payload,\n        searchDropdown: false,\n      };\n    case \"searchDropdown\":\n      return {\n        ...state,\n        categoryListDropdown: false,\n        filterListDropdown: false,\n        searchDropdown: action.payload,\n      };\n    case \"setProducts\":\n      return {\n        ...state,\n        products: action.payload,\n      };\n    case \"searchHandleInReducer\":\n      return {\n        ...state,\n        products:\n          action.productArray &&\n          action.productArray.filter((item) => {\n            if (\n              item.pName.toUpperCase().indexOf(action.payload.toUpperCase()) !==\n              -1\n            ) {\n              return item;\n            }\n            return null;\n          }),\n      };\n    case \"loading\":\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    case \"sliderImages\":\n      return {\n        ...state,\n        sliderImages: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { getAllProduct } from '../../admin/products/FetchApi';\nimport { HomeContext } from './index';\nimport { isWishReq, unWishReq, isWish } from './Mixins';\n\nconst apiURL = process.env.REACT_APP_API_URL;\n\nconst SingleProduct = (props) => {\n    const { data, dispatch } = useContext(HomeContext);\n    const { products } = data;\n    const history = useHistory();\n\n    /* WhisList State */\n    const [wList, setWlist] = useState(\n        JSON.parse(localStorage.getItem('wishList'))\n    );\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = async () => {\n        dispatch({ type: 'loading', payload: true });\n        try {\n            let responseData = await getAllProduct();\n            setTimeout(() => {\n                if (responseData && responseData.Products) {\n                    dispatch({\n                        type: 'setProducts',\n                        payload: responseData.Products,\n                    });\n                    dispatch({ type: 'loading', payload: false });\n                }\n            }, 500);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    if (data.loading) {\n        return (\n            <div className=\"col-span-2 md:col-span-3 lg:col-span-4 flex items-center justify-center py-24\">\n                <svg\n                    className=\"w-12 h-12 animate-spin text-gray-600\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"2\"\n                        d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                    ></path>\n                </svg>\n            </div>\n        );\n    }\n    return (\n        <Fragment>\n            {products && products.length > 0 ? (\n                products.map((item, index) => {\n                    const ShowProduct =\n                        item.pStatus === 'Disabled' ? <h1>het hang</h1> : null;\n                    return (\n                        <Fragment key={index}>\n                            <div className=\"relative col-span-1 m-2\">\n                                {ShowProduct}\n                                <img\n                                    onClick={(e) =>\n                                        history.push(`/products/${item._id}`)\n                                    }\n                                    className=\"w-full object-cover object-center cursor-pointer\"\n                                    src={`${apiURL}/uploads/products/${item.pImages[0]}`}\n                                    alt=\"\"\n                                />\n                                <div className=\"flex items-center justify-between mt-2\">\n                                    <div className=\"text-gray-600 font-light truncate\">\n                                        {item.pName}\n                                    </div>\n                                    <div className=\"flex items-center space-x-1\">\n                                        <span>\n                                            <svg\n                                                className=\"w-4 h-4 fill-current text-yellow-700\"\n                                                fill=\"none\"\n                                                stroke=\"currentColor\"\n                                                viewBox=\"0 0 24 24\"\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                            >\n                                                <path\n                                                    strokeLinecap=\"round\"\n                                                    strokeLinejoin=\"round\"\n                                                    strokeWidth={2}\n                                                    d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"\n                                                />\n                                            </svg>\n                                        </span>\n                                        <span className=\"text-gray-700\">\n                                            {item.pRatingsReviews.length}\n                                        </span>\n                                    </div>\n                                </div>\n                                <div>${item.pPrice}.00</div>\n                                {/* WhisList Logic  */}\n                                <div className=\"absolute top-0 right-0 mx-2 my-2 md:mx-4\">\n                                    <svg\n                                        onClick={(e) =>\n                                            isWishReq(e, item._id, setWlist)\n                                        }\n                                        className={`${\n                                            isWish(item._id, wList) && 'hidden'\n                                        } w-5 h-5 md:w-6 md:h-6 cursor-pointer text-yellow-700 transition-all duration-300 ease-in`}\n                                        fill=\"none\"\n                                        stroke=\"currentColor\"\n                                        viewBox=\"0 0 24 24\"\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                        <path\n                                            strokeLinecap=\"round\"\n                                            strokeLinejoin=\"round\"\n                                            strokeWidth={2}\n                                            d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n                                        />\n                                    </svg>\n                                    <svg\n                                        onClick={(e) =>\n                                            unWishReq(e, item._id, setWlist)\n                                        }\n                                        className={`${\n                                            !isWish(item._id, wList) && 'hidden'\n                                        } w-5 h-5 md:w-6 md:h-6 cursor-pointer text-yellow-700 transition-all duration-300 ease-in`}\n                                        fill=\"currentColor\"\n                                        viewBox=\"0 0 20 20\"\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                        <path\n                                            fillRule=\"evenodd\"\n                                            d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\"\n                                            clipRule=\"evenodd\"\n                                        />\n                                    </svg>\n                                </div>\n                                {/* WhisList Logic End */}\n                            </div>\n                        </Fragment>\n                    );\n                })\n            ) : (\n                <div className=\"col-span-2 md:col-span-3 lg:col-span-4 flex items-center justify-center py-24 text-2xl\">\n                    No product found\n                </div>\n            )}\n        </Fragment>\n    );\n};\n\nexport default SingleProduct;\n","import React, { Fragment, createContext, useReducer } from \"react\";\nimport Layout from \"../layout\";\nimport Slider from \"./Slider\";\nimport ProductCategory from \"./ProductCategory\";\nimport { homeState, homeReducer } from \"./HomeContext\";\nimport SingleProduct from \"./SingleProduct\";\n\nexport const HomeContext = createContext();\n\nconst HomeComponent = () => {\n  return (\n    <Fragment>\n      <Slider />\n      {/* Category, Search & Filter Section */}\n      <section className=\"m-4 md:mx-8 md:my-6\">\n        <ProductCategory />\n      </section>\n      {/* Product Section */}\n      <section className=\"m-4 md:mx-8 md:my-6 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4\">\n        <SingleProduct />\n      </section>\n    </Fragment>\n  );\n};\n\nconst Home = (props) => {\n  const [data, dispatch] = useReducer(homeReducer, homeState);\n  return (\n    <Fragment>\n      <HomeContext.Provider value={{ data, dispatch }}>\n        <Layout children={<HomeComponent />} />\n      </HomeContext.Provider>\n    </Fragment>\n  );\n};\n\nexport default Home;\n","import axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_URL;\n\nexport const wishListProducts = async () => {\n  let productArray = JSON.parse(localStorage.getItem(\"wishList\"));\n  try {\n    let res = await axios.post(`${apiURL}/api/product/wish-product`, {\n      productArray,\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { wishListProducts } from \"./FetchApi\";\nconst apiURL = process.env.REACT_APP_API_URL;\n\nconst Product = () => {\n  const history = useHistory();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    setLoading(true);\n    let responseData = await wishListProducts();\n    setTimeout(() => {\n      if (responseData && responseData.Products) {\n        setProducts(responseData.Products);\n        setLoading(false);\n      }\n    }, 50);\n  };\n\n  const removeFromWishList = (id) => {\n    let list = localStorage.getItem(\"wishList\")\n      ? JSON.parse(localStorage.getItem(\"wishList\"))\n      : [];\n    if (list.length > 0) {\n      if (list.includes(id) === true) {\n        list.splice(list.indexOf(id), 1);\n        localStorage.setItem(\"wishList\", JSON.stringify(list));\n        fetchData();\n      }\n    }\n  };\n  if (loading) {\n    return (\n      <div className=\"my-32 text-2xl text-center\">\n        No product found in wishList\n      </div>\n    );\n  }\n  return (\n    <Fragment>\n      <div className=\"grid grid-cols-2 md:grid-cols-1\">\n        {products.length > 0 ? (\n          products.map((product, index) => {\n            return (\n              <div\n                key={index}\n                className=\"relative m-2 md:py-6 md:border-t md:border-b md:my-2 md:mx-0 col-span-1 md:flex md:items-center md:justify-between\"\n              >\n                <div className=\"md:w-1/2 md:flex md:items-center\">\n                  <img\n                    onClick={(e) => history.push(`/products/${product._id}`)}\n                    className=\"cursor-pointer md:h-20 md:w-20 object-cover object-center\"\n                    src={`${apiURL}/uploads/products/${product.pImages[0]}`}\n                    alt=\"wishListproduct\"\n                  />\n                  <div className=\"text-lg md:ml-6 truncate\">\n                    {product.pName}\n                  </div>\n                </div>\n                <div className=\"md:w-1/2 md:flex md:items-center md:justify-around\">\n                  <div className=\"font-semibold text-gray-600\">\n                    ${product.pPrice}.00\n                  </div>\n                  {product.pQuantity > 0 ? (\n                    <div className=\"text-green-500 my-1 md:my-0\">In Stock</div>\n                  ) : (\n                    <div className=\"text-red-500 my-1 md:my-0\">Out Stock</div>\n                  )}\n\n                  <div\n                    style={{ background: \"#303031\" }}\n                    onClick={(e) => history.push(`/products/${product._id}`)}\n                    className=\"inline-block px-4 py-2 text-white text-xs md:text-base text-center cursor-pointer hover:opacity-75\"\n                  >\n                    View\n                  </div>\n                </div>\n                <div className=\"absolute top-0 right-0 mx-2 my-2 md:relative\">\n                  <svg\n                    onClick={(e) => removeFromWishList(product._id)}\n                    className=\"w-6 h-6 cursor-pointer\"\n                    fill=\"currentColor\"\n                    viewBox=\"0 0 20 20\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                      clipRule=\"evenodd\"\n                    />\n                  </svg>\n                </div>\n              </div>\n            );\n          })\n        ) : (\n          <div>No product found in wishList</div>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst SingleWishProduct = (props) => {\n  return (\n    <Fragment>\n      <section className=\"mx-4 mt-20 md:mx-12 md:mt-32 lg:mt-24\">\n        <div className=\"text-2xl mx-2 mb-6\">Wishlist</div>\n        {/* Product List */}\n        <Product />\n      </section>\n    </Fragment>\n  );\n};\n\nexport default SingleWishProduct;\n","import React, { Fragment } from \"react\";\nimport Layout from \"../layout\";\nimport SingleWishProduct from \"./SingleWishProduct\";\n\nconst WishList = () => {\n  return (\n    <Fragment>\n      <Layout children={<SingleWishProduct />} />\n    </Fragment>\n  );\n};\n\nexport default WishList;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticate, isAdmin } from \"./fetchApi\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isAuthenticate() && !isAdmin() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/\",\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default ProtectedRoute;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticate, isAdmin } from \"./fetchApi\";\n\nconst AdminProtectedRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isAdmin() && isAuthenticate() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/user/profile\",\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default AdminProtectedRoute;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticate } from \"./fetchApi\";\n\nconst CartProtectedRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      JSON.parse(localStorage.getItem(\"cart\")).length !== 0 &&\n      isAuthenticate() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/\",\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default CartProtectedRoute;\n","export const layoutState = {\n  navberHamburger: false,\n  loginSignupModal: false,\n  loginSignupError: false,\n  cartModal: false,\n  cartProduct: null,\n  singleProductDetail: null,\n  inCart: null,\n  cartTotalCost: null,\n  orderSuccess: false,\n  loading: false,\n};\n\nexport const layoutReducer = (state, action) => {\n  switch (action.type) {\n    case \"hamburgerToggle\":\n      return {\n        ...state,\n        navberHamburger: action.payload,\n      };\n    case \"loginSignupModalToggle\":\n      return {\n        ...state,\n        loginSignupModal: action.payload,\n      };\n    case \"cartModalToggle\":\n      return {\n        ...state,\n        cartModal: action.payload,\n      };\n    case \"cartProduct\":\n      return {\n        ...state,\n        cartProduct: action.payload,\n      };\n    case \"singleProductDetail\":\n      return {\n        ...state,\n        singleProductDetail: action.payload,\n      };\n    case \"inCart\":\n      return {\n        ...state,\n        inCart: action.payload,\n      };\n    case \"cartTotalCost\":\n      return {\n        ...state,\n        cartTotalCost: action.payload,\n      };\n    case \"loginSignupError\":\n      return {\n        ...state,\n        loginSignupError: action.payload,\n      };\n    case \"orderSuccess\":\n      return {\n        ...state,\n        orderSuccess: action.payload,\n      };\n    case \"loading\":\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport Layout from \"./index\";\n\nconst PageNotFoundComponent = (props) => {\n  return (\n    <div className=\"flex flex-col items-center justify-center my-32\">\n      <span>\n        <svg\n          className=\"w-32 h-32 text-gray-700\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n      </span>\n      <span className=\"text-center text-gray-700 text-4xl font-bold tracking-widest\">\n        404 not found\n      </span>\n    </div>\n  );\n};\n\nconst PageNotFound = (props) => {\n  return <Layout children={<PageNotFoundComponent />} />;\n};\n\nexport default PageNotFound;\n","export const productDetailsState = {\n  loading: false,\n  menu: true,\n};\n\nexport const productDetailsReducer = (state, action) => {\n  switch (action.type) {\n    case \"menu\":\n      return {\n        ...state,\n        menu: action.payload,\n      };\n    case \"loading\":\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    case \"cartState\":\n      return {\n        ...state,\n        cartState: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { Fragment } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Submenu = (props) => {\n  const { categoryId, category, product } = props.value;\n  const history = useHistory();\n  return (\n    <Fragment>\n      {/* Submenu Section */}\n      <section className=\"mx-4 mt-24 md:mx-12 md:mt-32 lg:mt-24\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"text-sm flex space-x-2\">\n            <span\n              className=\"hover:text-yellow-700 cursor-pointer\"\n              onClick={(e) => history.push(\"/\")}\n            >\n              Shop\n            </span>\n            <span\n              className=\"hover:text-yellow-700 cursor-pointer\"\n              onClick={(e) => history.push(`/products/category/${categoryId}`)}\n            >\n              {category}\n            </span>\n            <span className=\"text-yellow-700 cursor-default\">{product}</span>\n          </div>\n          <div>\n            <svg\n              className=\"w-3 h-3\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M13 5l7 7-7 7M5 5l7 7-7 7\"\n              />\n            </svg>\n          </div>\n        </div>\n      </section>\n      {/* Submenu Section */}\n    </Fragment>\n  );\n};\n\nexport default Submenu;\n","import axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_URL;\n\nexport const getSingleProduct = async (pId) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/product/single-product`, {\n      pId: pId,\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const postAddReview = async (formData) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/product/add-review`, formData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const postDeleteReview = async (formData) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/product/delete-review`, formData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from \"react\";\nimport { postAddReview, postDeleteReview } from \"./FetchApi\";\nimport { isAuthenticate } from \"../auth/fetchApi\";\n\nexport const Alert = (color, text) => (\n  <div className={`bg-${color}-200 px-4 py-2 my-2 rounded`}>{text}</div>\n);\n\nexport const reviewSubmitHanlder = (fData, setFdata, fetchData) => {\n  if (!fData.rating || !fData.review) {\n    setFdata({ ...fData, error: \"Rating and review must be required\" });\n  } else if (!isAuthenticate()) {\n    setFdata({ ...fData, error: \"You must need login to review\" });\n  } else {\n    addReview(fData, setFdata, fetchData);\n  }\n};\n\nexport const deleteReview = async (\n  reviewId,\n  productId,\n  fetchData,\n  setFdata\n) => {\n  try {\n    let responseData = await postDeleteReview({\n      rId: reviewId,\n      pId: productId,\n    });\n    if (responseData.success) {\n      fetchData();\n      setFdata({ success: responseData.success });\n    } else if (responseData.error) {\n      fetchData();\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const addReview = async (fData, setFdata, fetchData) => {\n  let formData = {\n    rating: fData.rating,\n    review: fData.review,\n    pId: fData.pId,\n    uId: JSON.parse(localStorage.getItem(\"jwt\")).user._id,\n  };\n  try {\n    let responseData = await postAddReview(formData);\n    if (responseData.success) {\n      setFdata({\n        ...fData,\n        success: responseData.success,\n        review: \"\",\n        rating: \"\",\n      });\n      fetchData();\n    } else if (responseData.error) {\n      setFdata({ ...fData, error: responseData.error, review: \"\", rating: \"\" });\n      fetchData();\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { Fragment, useContext, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Alert } from \"./Action\";\n\nimport moment from \"moment\";\nimport { LayoutContext } from \"../layout\";\nimport { deleteReview } from \"./Action\";\nimport { isAuthenticate } from \"../auth/fetchApi\";\nimport { getSingleProduct } from \"./FetchApi\";\n\nconst AllReviews = (props) => {\n  const { data, dispatch } = useContext(LayoutContext);\n  const { pRatingsReviews } = data.singleProductDetail;\n  let { id } = useParams(); // Prodduct Id\n\n  const [fData, setFdata] = useState({\n    success: false,\n  });\n\n  if (fData.success) {\n    setTimeout(() => {\n      setFdata({ ...fData, success: false });\n    }, 2000);\n  }\n\n  const fetchData = async () => {\n    try {\n      let responseData = await getSingleProduct(id);\n      if (responseData.Product) {\n        dispatch({\n          type: \"singleProductDetail\",\n          payload: responseData.Product,\n        });\n      }\n      if (responseData.error) {\n        console.log(responseData.error);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  console.log(pRatingsReviews);\n  return (\n    <Fragment>\n      <div className=\"md:mx-16 lg:mx-20 xl:mx-24 flex flex-col\">\n        {fData.success ? Alert(\"red\", fData.success) : \"\"}\n      </div>\n      <div className=\"mt-6 mb-12 md:mx-16 lg:mx-20 xl:mx-24\">\n        {/* List start */}\n        {pRatingsReviews.length > 0 ? (\n          pRatingsReviews.map((item, index) => {\n            return (\n              <Fragment key={index}>\n                <div className=\"mb-6 md:mb-8 flex flex-col md:flex-row md:items-start\">\n                  <img\n                    className=\"mx-2 w-16 h-16 rounded-full\"\n                    src=\"https://secure.gravatar.com/avatar/676d90a1574e9d3ebf98dd36f7adad60?s=60&d=mm&r=g\"\n                    alt=\"pic\"\n                  />\n                  <div className=\"mx-2 flex justify-between w-full\">\n                    <div className=\"flex flex-col\">\n                      <div className=\"flex flex-col\">\n                        <span>{item.user ? item.user.name : \"\"}</span>\n                        <span className=\"text-sm text-yellow-700\">\n                          {moment(item.createdAt).format(\"lll\")}\n                        </span>\n                      </div>\n                      <div className=\"leading-tight mt-3\">{item.review}</div>\n                    </div>\n                    <div className=\"flex flex-col\">\n                      <div className=\"flex\">\n                        {/* Yellow Star */}\n                        {[...Array(Number(item.rating))].map((index) => {\n                          return (\n                            <span key={index}>\n                              <svg\n                                className=\"w-4 h-4 fill-current text-yellow-700\"\n                                fill=\"currentColor\"\n                                viewBox=\"0 0 20 20\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                              </svg>\n                            </span>\n                          );\n                        })}\n                        {/* White Star */}\n                        {[...Array(5 - Number(item.rating))].map((index) => {\n                          return (\n                            <span key={index}>\n                              <svg\n                                className=\"w-4 h-4 fill-current text-gray-300\"\n                                fill=\"currentColor\"\n                                viewBox=\"0 0 20 20\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                              </svg>\n                            </span>\n                          );\n                        })}\n                      </div>\n                      {item.user &&\n                      isAuthenticate() &&\n                      item.user._id === isAuthenticate().user._id ? (\n                        <div className=\"flex justify-center my-2\">\n                          <span\n                            onClick={(e) =>\n                              deleteReview(\n                                item._id,\n                                data.singleProductDetail._id,\n                                fetchData,\n                                setFdata\n                              )\n                            }\n                            className=\"hover:bg-gray-300 p-2 rounded-full cursor-pointer\"\n                          >\n                            <svg\n                              className=\"w-6 h-6 text-yellow-700\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              viewBox=\"0 0 24 24\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                              <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth={2}\n                                d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                              />\n                            </svg>\n                          </span>\n                        </div>\n                      ) : (\n                        <div></div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })\n        ) : (\n          <div>No Review found</div>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default AllReviews;\n","import React, { Fragment, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Alert, reviewSubmitHanlder } from \"./Action\";\nimport { LayoutContext } from \"../layout\";\nimport { isAuthenticate } from \"../auth/fetchApi\";\nimport { getSingleProduct } from \"./FetchApi\";\n\nconst ReviewForm = (props) => {\n  const { data, dispatch } = useContext(LayoutContext);\n  let { id } = useParams(); // Product Id\n\n  const [fData, setFdata] = useState({\n    rating: \"\",\n    review: \"\",\n    error: false,\n    success: false,\n    pId: id,\n  });\n\n  if (fData.error || fData.success) {\n    setTimeout(() => {\n      setFdata({ ...fData, error: false, success: false });\n    }, 3000);\n  }\n\n  const fetchData = async () => {\n    try {\n      let responseData = await getSingleProduct(id);\n      if (responseData.Product) {\n        dispatch({\n          type: \"singleProductDetail\",\n          payload: responseData.Product,\n        });\n        console.log(data);\n      }\n      if (responseData.error) {\n        console.log(responseData.error);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const ratingUserList = data.singleProductDetail.pRatingsReviews.map(\n    (item) => {\n      return item.user ? item.user._id : \"\";\n    }\n  );\n\n  return (\n    <Fragment>\n      <div className=\"md:mx-16 lg:mx-20 xl:mx-24 flex flex-col\">\n        {fData.error ? Alert(\"red\", fData.error) : \"\"}\n        {fData.success ? Alert(\"green\", fData.success) : \"\"}\n      </div>\n      {ratingUserList.includes(isAuthenticate().user._id) ? (\n        <div className=\"mb-12 md:mx-16 lg:mx-20 xl:mx-24\"></div>\n      ) : (\n        <div className=\"mb-12 md:mx-16 lg:mx-20 xl:mx-24 flex flex-col\">\n          <div className=\"flex flex-col space-y-2\">\n            <span className=\"text-2xl font-medium\">Add a review</span>\n            <span className=\"text-gray-600 text-sm\">\n              Your email address will not be published. Required fields are\n              marked *\n            </span>\n          </div>\n          {/* Input Rating */}\n          <div className=\"mb-4\">\n            <fieldset\n              onChange={(e) => setFdata({ ...fData, rating: e.target.value })}\n              className=\"rating\"\n            >\n              <input\n                type=\"radio\"\n                className=\"rating\"\n                id=\"star5\"\n                name=\"rating\"\n                defaultValue={5}\n              />\n              <label\n                className=\"full\"\n                htmlFor=\"star5\"\n                title=\"Awesome - 5 stars\"\n              />\n              <input\n                type=\"radio\"\n                className=\"rating\"\n                id=\"star4\"\n                name=\"rating\"\n                defaultValue={4}\n              />\n              <label\n                className=\"full\"\n                htmlFor=\"star4\"\n                title=\"Pretty good - 4 stars\"\n              />\n              <input\n                type=\"radio\"\n                className=\"rating\"\n                id=\"star3\"\n                name=\"rating\"\n                defaultValue={3}\n              />\n              <label className=\"full\" htmlFor=\"star3\" title=\"Meh - 3 stars\" />\n              <input\n                type=\"radio\"\n                className=\"rating\"\n                id=\"star2\"\n                name=\"rating\"\n                defaultValue={2}\n              />\n              <label\n                className=\"full\"\n                htmlFor=\"star2\"\n                title=\"Kinda bad - 2 stars\"\n              />\n              <input\n                type=\"radio\"\n                className=\"rating\"\n                id=\"star1\"\n                name=\"rating\"\n                defaultValue={1}\n              />\n              <label\n                className=\"full\"\n                htmlFor=\"star1\"\n                title=\"Sucks big time - 1 star\"\n              />\n            </fieldset>\n          </div>\n          {/* Review Form */}\n          <div className=\"space-y-4\">\n            <div className=\"flex flex-col\">\n              <label htmlFor=\"textArea\">\n                Review <span className=\"text-sm text-gray-600\">*</span>\n              </label>\n              <textarea\n                onChange={(e) => setFdata({ ...fData, review: e.target.value })}\n                value={fData.review}\n                className=\"border px-4 py-2 focus:outline-none\"\n                name=\"textArea\"\n                id=\"textArea\"\n                cols={30}\n                rows={3}\n                placeholder=\"Your review...\"\n              />\n            </div>\n            <div\n              onClick={(e) => reviewSubmitHanlder(fData, setFdata, fetchData)}\n              style={{ background: \"#303031\" }}\n              className=\"inline-block rounded px-4 py-2 text-white text-center cursor-pointer\"\n            >\n              Submit\n            </div>\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ReviewForm;\n","import React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport AllReviews from \"./AllReviews\";\nimport ReviewForm from \"./ReviewForm\";\n\nimport { ProductDetailsContext } from \"./\";\nimport { LayoutContext } from \"../layout\";\n\nimport { isAuthenticate } from \"../auth/fetchApi\";\n\nimport \"./style.css\";\n\nconst Menu = () => {\n  const { data, dispatch } = useContext(ProductDetailsContext);\n  const { data: layoutData } = useContext(LayoutContext);\n\n  return (\n    <Fragment>\n      <div className=\"flex flex-col md:flex-row items-center justify-center\">\n        <div\n          onClick={(e) => dispatch({ type: \"menu\", payload: true })}\n          className={`${\n            data.menu ? \"border-b-2 border-yellow-700\" : \"\"\n          } px-4 py-3 cursor-pointer`}\n        >\n          Description\n        </div>\n        <div\n          onClick={(e) => dispatch({ type: \"menu\", payload: false })}\n          className={`${\n            !data.menu ? \"border-b-2 border-yellow-700\" : \"\"\n          } px-4 py-3 relative flex cursor-pointer`}\n        >\n          <span>Reviews</span>\n          <span className=\"absolute text-xs top-0 right-0 mt-2 bg-yellow-700 text-white rounded px-1\">\n            {layoutData.singleProductDetail.pRatingsReviews.length}\n          </span>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst RatingReview = () => {\n  return (\n    <Fragment>\n      <AllReviews />\n      {isAuthenticate() ? (\n        <ReviewForm />\n      ) : (\n        <div className=\"mb-12 md:mx-16 lg:mx-20 xl:mx-24 bg-red-200 px-4 py-2 rounded mb-4\">\n          You need to login in for review\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nconst ProductDetailsSectionTwo = (props) => {\n  const { data } = useContext(ProductDetailsContext);\n  const { data: layoutData } = useContext(LayoutContext);\n  const [singleProduct, setSingleproduct] = useState({});\n\n  useEffect(() => {\n    setSingleproduct(\n      layoutData.singleProductDetail ? layoutData.singleProductDetail : \"\"\n    );\n  }, []);\n\n  return (\n    <Fragment>\n      <section className=\"m-4 md:mx-12 md:my-8\">\n        <Menu />\n        {data.menu ? (\n          <div className=\"mt-6\">{singleProduct.pDescription}</div>\n        ) : (\n          <RatingReview />\n        )}\n      </section>\n      <div className=\"m-4 md:mx-8 md:my-6 flex justify-center capitalize font-light tracking-widest bg-white border-t border-b text-gray-800 px-4 py-4 space-x-4\">\n        <div>\n          <span>Category :</span>\n          <span className=\"text-sm text-gray-600\">\n            {\" \"}\n            {singleProduct.pCategory ? singleProduct.pCategory.cName : \"\"}\n          </span>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ProductDetailsSectionTwo;\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ProductDetailsContext } from './index';\nimport { LayoutContext } from '../layout';\nimport Submenu from './Submenu';\nimport ProductDetailsSectionTwo from './ProductDetailsSectionTwo';\n\nimport { getSingleProduct } from './FetchApi';\nimport { cartListProduct } from '../partials/FetchApi';\n\nimport { isWishReq, unWishReq, isWish } from '../home/Mixins';\nimport { updateQuantity, slideImage, addToCart, cartList } from './Mixins';\nimport { totalCost } from '../partials/Mixins';\n\nconst apiURL = process.env.REACT_APP_API_URL;\n\nconst ProductDetailsSection = (props) => {\n    let { id } = useParams();\n\n    const { data, dispatch } = useContext(ProductDetailsContext);\n    const { data: layoutData, dispatch: layoutDispatch } = useContext(\n        LayoutContext\n    ); // Layout Context\n\n    const sProduct = layoutData.singleProductDetail;\n    // console.log(sProduct.pStatus);\n    const [pImages, setPimages] = useState(null);\n    const [count, setCount] = useState(0); // Slide change state\n\n    const [quantitiy, setQuantitiy] = useState(1); // Increse and decrese quantity state\n    const [alertQ, setAlertq] = useState(false); // Alert when quantity greater than stock\n\n    const [wList, setWlist] = useState(\n        JSON.parse(localStorage.getItem('wishList'))\n    ); // Wishlist State Control\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = async () => {\n        dispatch({ type: 'loading', payload: true });\n        try {\n            let responseData = await getSingleProduct(id);\n            setTimeout(() => {\n                if (responseData.Product) {\n                    layoutDispatch({\n                        type: 'singleProductDetail',\n                        payload: responseData.Product,\n                    }); // Dispatch in layout context\n                    setPimages(responseData.Product.pImages);\n                    dispatch({ type: 'loading', payload: false });\n                    layoutDispatch({ type: 'inCart', payload: cartList() }); // This function change cart in cart state\n                }\n                if (responseData.error) {\n                    console.log(responseData.error);\n                }\n            }, 500);\n        } catch (error) {\n            console.log(error);\n        }\n        fetchCartProduct(); // Updating cart total\n    };\n\n    const fetchCartProduct = async () => {\n        try {\n            let responseData = await cartListProduct();\n            if (responseData && responseData.Products) {\n                layoutDispatch({\n                    type: 'cartProduct',\n                    payload: responseData.Products,\n                }); // Layout context Cartproduct fetch and dispatch\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    if (data.loading) {\n        return (\n            <div className=\"col-span-2 md:col-span-3 lg:col-span-4 flex items-center justify-center h-screen\">\n                <svg\n                    className=\"w-12 h-12 animate-spin text-gray-600\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"2\"\n                        d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                    ></path>\n                </svg>\n            </div>\n        );\n    } else if (!sProduct) {\n        return <div>No product</div>;\n    }\n    return (\n        <Fragment>\n            <Submenu\n                value={{\n                    categoryId: sProduct.pCategory._id,\n                    product: sProduct.pName,\n                    category: sProduct.pCategory.cName,\n                }}\n            />\n            <section className=\"m-4 md:mx-12 md:my-6\">\n                <div className=\"grid grid-cols-2 md:grid-cols-12\">\n                    <div className=\"hidden md:block md:col-span-1 md:flex md:flex-col md:space-y-4 md:mr-2\">\n                        <img\n                            onClick={(e) =>\n                                slideImage(\n                                    'increase',\n                                    0,\n                                    count,\n                                    setCount,\n                                    pImages\n                                )\n                            }\n                            className={`${\n                                count === 0 ? '' : 'opacity-25'\n                            } cursor-pointer w-20 h-20 object-cover object-center`}\n                            src={`${apiURL}/uploads/products/${sProduct.pImages[0]}`}\n                            alt=\"pic\"\n                        />\n                        <img\n                            onClick={(e) =>\n                                slideImage(\n                                    'increase',\n                                    1,\n                                    count,\n                                    setCount,\n                                    pImages\n                                )\n                            }\n                            className={`${\n                                count === 1 ? '' : 'opacity-25'\n                            } cursor-pointer w-20 h-20 object-cover object-center`}\n                            src={`${apiURL}/uploads/products/${sProduct.pImages[1]}`}\n                            alt=\"pic\"\n                        />\n                    </div>\n                    <div className=\"col-span-2 md:col-span-7\">\n                        <div className=\"relative\">\n                            <img\n                                className=\"w-full\"\n                                src={`${apiURL}/uploads/products/${sProduct.pImages[count]}`}\n                                alt=\"Pic\"\n                            />\n                            <div className=\"absolute inset-0 flex justify-between items-center mb-4\">\n                                <svg\n                                    onClick={(e) =>\n                                        slideImage(\n                                            'increase',\n                                            null,\n                                            count,\n                                            setCount,\n                                            pImages\n                                        )\n                                    }\n                                    className=\"flex justify-center  w-12 h-12 text-gray-700 opacity-25 cursor-pointer hover:text-yellow-700 hover:opacity-100\"\n                                    fill=\"none\"\n                                    stroke=\"currentColor\"\n                                    viewBox=\"0 0 24 24\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                >\n                                    <path\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        strokeWidth={2}\n                                        d=\"M15 19l-7-7 7-7\"\n                                    />\n                                </svg>\n                                <svg\n                                    onClick={(e) =>\n                                        slideImage(\n                                            'increase',\n                                            null,\n                                            count,\n                                            setCount,\n                                            pImages\n                                        )\n                                    }\n                                    className=\"flex justify-center  w-12 h-12 text-gray-700 opacity-25 cursor-pointer hover:text-yellow-700 hover:opacity-100\"\n                                    fill=\"none\"\n                                    stroke=\"currentColor\"\n                                    viewBox=\"0 0 24 24\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                >\n                                    <path\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        strokeWidth={2}\n                                        d=\"M9 5l7 7-7 7\"\n                                    />\n                                </svg>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-span-2 mt-8 md:mt-0 md:col-span-4 md:ml-6 lg:ml-12\">\n                        <div className=\"flex flex-col leading-8\">\n                            <div className=\"text-2xl tracking-wider\">\n                                {sProduct.pName}\n                            </div>\n                            <div className=\"flex justify-between items-center\">\n                                <span className=\"text-xl tracking-wider text-yellow-700\">\n                                    ${sProduct.pPrice}.00\n                                </span>\n                                <span>\n                                    <svg\n                                        onClick={(e) =>\n                                            isWishReq(e, sProduct._id, setWlist)\n                                        }\n                                        className={`${\n                                            isWish(sProduct._id, wList) &&\n                                            'hidden'\n                                        } w-5 h-5 md:w-6 md:h-6 cursor-pointer text-yellow-700`}\n                                        fill=\"none\"\n                                        stroke=\"currentColor\"\n                                        viewBox=\"0 0 24 24\"\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                        <path\n                                            strokeLinecap=\"round\"\n                                            strokeLinejoin=\"round\"\n                                            strokeWidth={2}\n                                            d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n                                        />\n                                    </svg>\n                                    <svg\n                                        onClick={(e) =>\n                                            unWishReq(e, sProduct._id, setWlist)\n                                        }\n                                        className={`${\n                                            !isWish(sProduct._id, wList) &&\n                                            'hidden'\n                                        } w-5 h-5 md:w-6 md:h-6 cursor-pointer text-yellow-700`}\n                                        fill=\"currentColor\"\n                                        viewBox=\"0 0 20 20\"\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                        <path\n                                            fillRule=\"evenodd\"\n                                            d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\"\n                                            clipRule=\"evenodd\"\n                                        />\n                                    </svg>\n                                </span>\n                            </div>\n                        </div>\n                        <div className=\"my-4 md:my-6 text-gray-600\">\n                            {sProduct.pDescription}\n                        </div>\n                        <div className=\"my-4 md:my-6\">\n                            {quantitiy == sProduct.pQuantity ? (\n                                <span className=\"text-xs text-red-500\">\n                                    Stock limited\n                                </span>\n                            ) : (\n                                ''\n                            )}\n                            <div\n                                className={`flex justify-between items-center px-4 py-2 border ${\n                                    quantitiy === sProduct.pQuantity &&\n                                    'border-red-500'\n                                }`}\n                            >\n                                <div\n                                    className={`${\n                                        quantitiy === sProduct.pQuantity &&\n                                        'text-red-500'\n                                    }`}\n                                >\n                                    Quantity\n                                </div>\n                                {/* Quantity Button */}\n                                {sProduct.pQuantity !== 0 ? (\n                                    <Fragment>\n                                        {layoutData.inCart == null ||\n                                        (layoutData.inCart !== null &&\n                                            layoutData.inCart.includes(\n                                                sProduct._id\n                                            ) === false) ? (\n                                            <div className=\"flex items-center space-x-2\">\n                                                <span\n                                                    onClick={(e) =>\n                                                        updateQuantity(\n                                                            'decrease',\n                                                            sProduct.pQuantity,\n                                                            quantitiy,\n                                                            setQuantitiy,\n                                                            setAlertq\n                                                        )\n                                                    }\n                                                >\n                                                    <svg\n                                                        className=\"w-5 h-5 fill-current cursor-pointer\"\n                                                        fill=\"currentColor\"\n                                                        viewBox=\"0 0 20 20\"\n                                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                                    >\n                                                        <path\n                                                            fillRule=\"evenodd\"\n                                                            d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\n                                                            clipRule=\"evenodd\"\n                                                        />\n                                                    </svg>\n                                                </span>\n                                                <span className=\"font-semibold\">\n                                                    {quantitiy}\n                                                </span>\n                                                <span\n                                                    onClick={(e) =>\n                                                        updateQuantity(\n                                                            'increase',\n                                                            sProduct.pQuantity,\n                                                            quantitiy,\n                                                            setQuantitiy,\n                                                            setAlertq\n                                                        )\n                                                    }\n                                                >\n                                                    <svg\n                                                        className=\"w-5 h-5 fill-current cursor-pointer\"\n                                                        fill=\"currentColor\"\n                                                        viewBox=\"0 0 20 20\"\n                                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                                    >\n                                                        <path\n                                                            fillRule=\"evenodd\"\n                                                            d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n                                                            clipRule=\"evenodd\"\n                                                        />\n                                                    </svg>\n                                                </span>\n                                            </div>\n                                        ) : (\n                                            <div className=\"flex items-center space-x-2\">\n                                                <span>\n                                                    <svg\n                                                        className=\"w-5 h-5 fill-current cursor-not-allowed\"\n                                                        fill=\"currentColor\"\n                                                        viewBox=\"0 0 20 20\"\n                                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                                    >\n                                                        <path\n                                                            fillRule=\"evenodd\"\n                                                            d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\n                                                            clipRule=\"evenodd\"\n                                                        />\n                                                    </svg>\n                                                </span>\n                                                <span className=\"font-semibold\">\n                                                    {quantitiy}\n                                                </span>\n                                                <span>\n                                                    <svg\n                                                        className=\"w-5 h-5 fill-current cursor-not-allowed\"\n                                                        fill=\"currentColor\"\n                                                        viewBox=\"0 0 20 20\"\n                                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                                    >\n                                                        <path\n                                                            fillRule=\"evenodd\"\n                                                            d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n                                                            clipRule=\"evenodd\"\n                                                        />\n                                                    </svg>\n                                                </span>\n                                            </div>\n                                        )}\n                                    </Fragment>\n                                ) : (\n                                    <div className=\"flex items-center space-x-2\">\n                                        <span>\n                                            <svg\n                                                className=\"w-5 h-5 fill-current cursor-not-allowed\"\n                                                fill=\"currentColor\"\n                                                viewBox=\"0 0 20 20\"\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                            >\n                                                <path\n                                                    fillRule=\"evenodd\"\n                                                    d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\n                                                    clipRule=\"evenodd\"\n                                                />\n                                            </svg>\n                                        </span>\n                                        <span className=\"font-semibold\">\n                                            {quantitiy}\n                                        </span>\n                                        <span>\n                                            <svg\n                                                className=\"w-5 h-5 fill-current cursor-not-allowed\"\n                                                fill=\"currentColor\"\n                                                viewBox=\"0 0 20 20\"\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                            >\n                                                <path\n                                                    fillRule=\"evenodd\"\n                                                    d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n                                                    clipRule=\"evenodd\"\n                                                />\n                                            </svg>\n                                        </span>\n                                    </div>\n                                )}\n                                {/* Quantity Button End */}\n                            </div>\n                            {/* Incart and out of stock button */}\n                            {sProduct.pStatus === 'Active' ? (\n                                sProduct.pQuantity !== 0 ? (\n                                    <Fragment>\n                                        {layoutData.inCart !== null &&\n                                        layoutData.inCart.includes(\n                                            sProduct._id\n                                        ) === true ? (\n                                            <div\n                                                style={{\n                                                    background: '#303031',\n                                                }}\n                                                className={`px-4 py-2 text-white text-center cursor-not-allowed uppercase opacity-75`}\n                                            >\n                                                In cart\n                                            </div>\n                                        ) : (\n                                            <div\n                                                onClick={(e) =>\n                                                    addToCart(\n                                                        sProduct._id,\n                                                        quantitiy,\n                                                        sProduct.pPrice,\n                                                        layoutDispatch,\n                                                        setQuantitiy,\n                                                        setAlertq,\n                                                        fetchData,\n                                                        totalCost\n                                                    )\n                                                }\n                                                style={{\n                                                    background: '#303031',\n                                                }}\n                                                className={`px-4 py-2 text-white text-center cursor-pointer uppercase`}\n                                            >\n                                                Add to cart\n                                            </div>\n                                        )}\n                                    </Fragment>\n                                ) : (\n                                    <Fragment>\n                                        {layoutData.inCart !== null &&\n                                        layoutData.inCart.includes(\n                                            sProduct._id\n                                        ) === true ? (\n                                            <div\n                                                style={{\n                                                    background: '#303031',\n                                                }}\n                                                className={`px-4 py-2 text-white text-center cursor-not-allowed uppercase opacity-75`}\n                                            >\n                                                In cart\n                                            </div>\n                                        ) : (\n                                            <div\n                                                style={{\n                                                    background: '#303031',\n                                                }}\n                                                disabled={true}\n                                                className=\"px-4 py-2 text-white opacity-50 cursor-not-allowed text-center uppercase\"\n                                            >\n                                                Out of stock\n                                            </div>\n                                        )}\n                                    </Fragment>\n                                )\n                            ) : null}\n                            {/* Incart and out of stock button End */}\n                        </div>\n                    </div>\n                </div>\n            </section>\n            {/* Product Details Section two */}\n            <ProductDetailsSectionTwo />\n        </Fragment>\n    );\n};\n\nexport default ProductDetailsSection;\n","import React, { Fragment } from \"react\";\nimport ProductDetailsSection from \"./ProductDetailsSection\";\n\nconst Details = (props) => {\n  return (\n    <Fragment>\n      <ProductDetailsSection />\n    </Fragment>\n  );\n};\n\nexport default Details;\n","import React, { Fragment, createContext, useReducer } from \"react\";\nimport Layout from \"../layout\";\nimport {\n  productDetailsState,\n  productDetailsReducer,\n} from \"./ProductDetailsContext\";\nimport Details from \"./Details\";\n\nexport const ProductDetailsContext = createContext();\n\nconst DetailsComponent = () => {\n  return (\n    <Fragment>\n      <Details />\n    </Fragment>\n  );\n};\n\nconst ProductDetails = (props) => {\n  const [data, dispatch] = useReducer(\n    productDetailsReducer,\n    productDetailsState\n  );\n  return (\n    <Fragment>\n      <ProductDetailsContext.Provider value={{ data, dispatch }}>\n        <Layout children={<DetailsComponent />} />\n      </ProductDetailsContext.Provider>\n    </Fragment>\n  );\n};\n\nexport default ProductDetails;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Layout from \"../layout\";\nimport { productByCategory } from \"../../admin/products/FetchApi\";\n\nconst apiURL = process.env.REACT_APP_API_URL;\n\nconst Submenu = ({ category }) => {\n  const history = useHistory();\n  return (\n    <Fragment>\n      {/* Submenu Section */}\n      <section className=\"mx-4 mt-24 md:mx-12 md:mt-32 lg:mt-24\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"text-sm flex space-x-3\">\n            <span\n              className=\"hover:text-yellow-700 cursor-pointer\"\n              onClick={(e) => history.push(\"/\")}\n            >\n              Shop\n            </span>\n            <span className=\"text-yellow-700 cursor-default\">{category}</span>\n          </div>\n          <div>\n            <svg\n              className=\"w-3 h-3\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M13 5l7 7-7 7M5 5l7 7-7 7\"\n              />\n            </svg>\n          </div>\n        </div>\n      </section>\n      {/* Submenu Section */}\n    </Fragment>\n  );\n};\n\nconst AllProduct = ({ products }) => {\n  const history = useHistory();\n  const category =\n    products && products.length > 0 ? products[0].pCategory.cName : \"\";\n  return (\n    <Fragment>\n      <Submenu category={category} />\n      <section className=\"m-4 md:mx-8 md:my-4 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4\">\n        {products && products.length > 0 ? (\n          products.map((item, index) => {\n            return (\n              <Fragment key={index}>\n                <div className=\"relative col-span-1 m-2\">\n                  <img\n                    onClick={(e) => history.push(`/products/${item._id}`)}\n                    className=\"w-full object-cover object-center cursor-pointer\"\n                    src={`${apiURL}/uploads/products/${item.pImages[0]}`}\n                    alt=\"\"\n                  />\n                  <div className=\"flex items-center justify-between mt-2\">\n                    <div className=\"text-gray-600 font-light truncate\">\n                      {item.pName}\n                    </div>\n                    <div className=\"flex items-center space-x-1\">\n                      <span>\n                        <svg\n                          className=\"w-4 h-4 fill-current text-yellow-700\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          viewBox=\"0 0 24 24\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"\n                          />\n                        </svg>\n                      </span>\n                      <span className=\"text-gray-700\">\n                        {item.pRatings ? item.pRatings.length : 0}\n                      </span>\n                    </div>\n                  </div>\n                  <div>{item.pPrice}.00$</div>\n                  <div className=\"absolute top-0 right-0 mx-2 my-2 md:mx-4\">\n                    <svg\n                      className=\"w-5 h-5 md:w-6 md:h-6 cursor-pointer text-yellow-700\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n                      />\n                    </svg>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })\n        ) : (\n          <div className=\"col-span-2 md:col-span-3 lg:col-span-4 flex items-center justify-center py-24 text-2xl\">\n            No product found\n          </div>\n        )}\n      </section>\n    </Fragment>\n  );\n};\n\nconst PageComponent = () => {\n  const [products, setProducts] = useState(null);\n  const { catId } = useParams();\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      let responseData = await productByCategory(catId);\n      if (responseData && responseData.Products) {\n        setProducts(responseData.Products);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Fragment>\n      <AllProduct products={products} />\n    </Fragment>\n  );\n};\n\nconst ProductByCategory = (props) => {\n  return (\n    <Fragment>\n      <Layout children={<PageComponent />} />\n    </Fragment>\n  );\n};\n\nexport default ProductByCategory;\n","import axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_URL;\n\nexport const getBrainTreeToken = async () => {\n  let uId = JSON.parse(localStorage.getItem(\"jwt\")).user._id;\n  try {\n    let res = await axios.post(`${apiURL}/api/braintree/get-token`, {\n      uId: uId,\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPaymentProcess = async (paymentData) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/braintree/payment`, paymentData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createOrder = async (orderData) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/order/create-order`, orderData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { createOrder } from \"./FetchApi\";\n\nexport const fetchData = async (cartListProduct, dispatch) => {\n  dispatch({ type: \"loading\", payload: true });\n  try {\n    let responseData = await cartListProduct();\n    if (responseData && responseData.Products) {\n      setTimeout(function () {\n        dispatch({ type: \"cartProduct\", payload: responseData.Products });\n        dispatch({ type: \"loading\", payload: false });\n      }, 1000);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchbrainTree = async (getBrainTreeToken, setState) => {\n  try {\n    let responseData = await getBrainTreeToken();\n    if (responseData && responseData) {\n      setState({\n        clientToken: responseData.clientToken,\n        success: responseData.success,\n      });\n      console.log(responseData);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const pay = async (\n  data,\n  dispatch,\n  state,\n  setState,\n  getPaymentProcess,\n  totalCost,\n  history\n) => {\n  console.log(state);\n  if (!state.address) {\n    setState({ ...state, error: \"Please provide your address\" });\n  } else if (!state.phone) {\n    setState({ ...state, error: \"Please provide your phone number\" });\n  } else {\n    let nonce;\n    let getNonce = state.instance\n      .requestPaymentMethod()\n      .then((data) => {\n        dispatch({ type: \"loading\", payload: true });\n        nonce = data.nonce;\n        let paymentData = {\n          amountTotal: totalCost(),\n          paymentMethod: nonce,\n        };\n        getPaymentProcess(paymentData)\n          .then(async (res) => {\n            if (res) {\n              let orderData = {\n                allProduct: JSON.parse(localStorage.getItem(\"cart\")),\n                user: JSON.parse(localStorage.getItem(\"jwt\")).user._id,\n                amount: res.transaction.amount,\n                transactionId: res.transaction.id,\n                address: state.address,\n                phone: state.phone,\n              };\n              try {\n                let resposeData = await createOrder(orderData);\n                if (resposeData.success) {\n                  localStorage.setItem(\"cart\", JSON.stringify([]));\n                  dispatch({ type: \"cartProduct\", payload: null });\n                  dispatch({ type: \"cartTotalCost\", payload: null });\n                  dispatch({ type: \"orderSuccess\", payload: true });\n                  setState({ clientToken: \"\", instance: {} });\n                  dispatch({ type: \"loading\", payload: false });\n                  return history.push(\"/\");\n                } else if (resposeData.error) {\n                  console.log(resposeData.error);\n                }\n              } catch (error) {\n                console.log(error);\n              }\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      })\n      .catch((error) => {\n        console.log(error);\n        setState({ ...state, error: error.message });\n      });\n  }\n};\n","import React, { Fragment, useEffect, useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { LayoutContext } from \"../layout\";\nimport { subTotal, quantity, totalCost } from \"../partials/Mixins\";\n\nimport { cartListProduct } from \"../partials/FetchApi\";\nimport { getBrainTreeToken, getPaymentProcess } from \"./FetchApi\";\nimport { fetchData, fetchbrainTree, pay } from \"./Action\";\n\nimport DropIn from \"braintree-web-drop-in-react\";\n\nconst apiURL = process.env.REACT_APP_API_URL;\n\nexport const CheckoutComponent = (props) => {\n  const history = useHistory();\n  const { data, dispatch } = useContext(LayoutContext);\n\n  const [state, setState] = useState({\n    address: \"\",\n    phone: \"\",\n    error: false,\n    success: false,\n    clientToken: null,\n    instance: {},\n  });\n\n  useEffect(() => {\n    fetchData(cartListProduct, dispatch);\n    fetchbrainTree(getBrainTreeToken, setState);\n  }, []);\n\n  if (data.loading) {\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        <svg\n          className=\"w-12 h-12 animate-spin text-gray-600\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n          ></path>\n        </svg>\n        Please wait untill finish\n      </div>\n    );\n  }\n  return (\n    <Fragment>\n      <section className=\"mx-4 mt-20 md:mx-12 md:mt-32 lg:mt-24\">\n        <div className=\"text-2xl mx-2\">Order</div>\n        {/* Product List */}\n        <div className=\"flex flex-col md:flex md:space-x-2 md:flex-row\">\n          <div className=\"md:w-1/2\">\n            <CheckoutProducts products={data.cartProduct} />\n          </div>\n          <div className=\"w-full order-first md:order-last md:w-1/2\">\n            {state.clientToken !== null ? (\n              <Fragment>\n                <div\n                  onBlur={(e) => setState({ ...state, error: false })}\n                  className=\"p-4 md:p-8\"\n                >\n                  {state.error ? (\n                    <div className=\"bg-red-200 py-2 px-4 rounded\">\n                      {state.error}\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                  <div className=\"flex flex-col py-2\">\n                    <label htmlFor=\"address\" className=\"pb-2\">\n                      Dalivery Address\n                    </label>\n                    <input\n                      value={state.address}\n                      onChange={(e) =>\n                        setState({\n                          ...state,\n                          address: e.target.value,\n                          error: false,\n                        })\n                      }\n                      type=\"text\"\n                      id=\"address\"\n                      className=\"border px-4 py-2\"\n                      placeholder=\"Address...\"\n                    />\n                  </div>\n                  <div className=\"flex flex-col py-2 mb-2\">\n                    <label htmlFor=\"phone\" className=\"pb-2\">\n                      Phone\n                    </label>\n                    <input\n                      value={state.phone}\n                      onChange={(e) =>\n                        setState({\n                          ...state,\n                          phone: e.target.value,\n                          error: false,\n                        })\n                      }\n                      type=\"number\"\n                      id=\"phone\"\n                      className=\"border px-4 py-2\"\n                      placeholder=\"+880\"\n                    />\n                  </div>\n                  <DropIn\n                    options={{\n                      authorization: state.clientToken,\n                      paypal: {\n                        flow: \"vault\",\n                      },\n                    }}\n                    onInstance={(instance) => (state.instance = instance)}\n                  />\n                  <div\n                    onClick={(e) =>\n                      pay(\n                        data,\n                        dispatch,\n                        state,\n                        setState,\n                        getPaymentProcess,\n                        totalCost,\n                        history\n                      )\n                    }\n                    className=\"w-full px-4 py-2 text-center text-white font-semibold cursor-pointer\"\n                    style={{ background: \"#303031\" }}\n                  >\n                    Pay now\n                  </div>\n                </div>\n              </Fragment>\n            ) : (\n              <div className=\"flex items-center justify-center py-12\">\n                <svg\n                  className=\"w-12 h-12 animate-spin text-gray-600\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                  ></path>\n                </svg>\n              </div>\n            )}\n          </div>\n        </div>\n      </section>\n    </Fragment>\n  );\n};\n\nconst CheckoutProducts = ({ products }) => {\n  const history = useHistory();\n\n  return (\n    <Fragment>\n      <div className=\"grid grid-cols-2 md:grid-cols-1\">\n        {products !== null && products.length > 0 ? (\n          products.map((product, index) => {\n            return (\n              <div\n                key={index}\n                className=\"col-span-1 m-2 md:py-6 md:border-t md:border-b md:my-2 md:mx-0 md:flex md:items-center md:justify-between\"\n              >\n                <div className=\"md:flex md:items-center md:space-x-4\">\n                  <img\n                    onClick={(e) => history.push(`/products/${product._id}`)}\n                    className=\"cursor-pointer md:h-20 md:w-20 object-cover object-center\"\n                    src={`${apiURL}/uploads/products/${product.pImages[0]}`}\n                    alt=\"wishListproduct\"\n                  />\n                  <div className=\"text-lg md:ml-6 truncate\">\n                    {product.pName}\n                  </div>\n                  <div className=\"md:ml-6 font-semibold text-gray-600 text-sm\">\n                    Price : ${product.pPrice}.00{\" \"}\n                  </div>\n                  <div className=\"md:ml-6 font-semibold text-gray-600 text-sm\">\n                    Quantitiy : {quantity(product._id)}\n                  </div>\n                  <div className=\"font-semibold text-gray-600 text-sm\">\n                    Subtotal : ${subTotal(product._id, product.pPrice)}.00\n                  </div>\n                </div>\n              </div>\n            );\n          })\n        ) : (\n          <div>No product found for checkout</div>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default CheckoutProducts;\n","import React, { Fragment } from \"react\";\nimport Layout from \"../layout\";\nimport { CheckoutComponent } from \"./CheckoutProducts\";\n\nconst CheckoutPage = (props) => {\n  return (\n    <Fragment>\n      <Layout children={<CheckoutComponent />} />\n    </Fragment>\n  );\n};\n\nexport default CheckoutPage;\n","import React, { Fragment } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst AdminNavber = (props) => {\n    const history = useHistory();\n\n    const logout = () => {\n        localStorage.removeItem('jwt');\n        localStorage.removeItem('cart');\n        localStorage.removeItem('wishList');\n        window.location.href = '/';\n    };\n\n    return (\n        <Fragment>\n            <nav className=\"sticky z-10 flex items-center shadow-md justify-between px-4 py-4 md:px-8 top-0 w-full bg-white\">\n                {/*  Large Screen Show  */}\n                <div className=\"hidden lg:block lg:flex lg:items-center lg:space-x-4 mr-32\">\n                    <span>\n                        <svg\n                            className=\"w-8 h-8 cursor-pointer text-gray-600\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            viewBox=\"0 0 24 24\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth={2}\n                                d=\"M4 6h16M4 12h16M4 18h16\"\n                            />\n                        </svg>\n                    </span>\n                </div>\n                {/*  Large Screen Show  */}\n                <div className=\"hidden lg:block\">\n                    <span\n                        onClick={(e) => history.push('/admin/dashboard')}\n                        style={{ letterSpacing: '0.70rem' }}\n                        className=\"flex items-left text-center font-bold uppercase text-gray-800 text-2xl cursor-pointer px-2 text-center\"\n                    >\n                        SIMCHUNG\n                    </span>\n                </div>\n                {/* Small Screen Show */}\n                <div className=\"lg:hidden flex items-center\">\n                    <svg\n                        id=\"hamburgerBtn\"\n                        className=\"lg:hidden w-8 h-8 cursor-pointer text-gray-600\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M4 6h16M4 12h16M4 18h16\"\n                        />\n                    </svg>\n                    <span\n                        onClick={(e) => history.push('/admin/dashboard')}\n                        style={{ letterSpacing: '0.10rem' }}\n                        className=\"flex items-left text-center font-bold uppercase text-gray-800 text-2xl cursor-pointer px-2 text-center\"\n                    >\n                        SIMCHUNG\n                    </span>\n                </div>\n                {/* Both Screen show */}\n                <div className=\"flex items-center\">\n                    <div\n                        className=\"hover:bg-gray-200 rounded-lg p-2\"\n                        title=\"Search\"\n                    >\n                        <svg\n                            className=\"cursor-pointer w-8 h-8 text-gray-600 hover:text-gray-800\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            viewBox=\"0 0 24 24\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth={2}\n                                d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"\n                            />\n                        </svg>\n                    </div>\n                    <div\n                        className=\"hover:bg-gray-200 rounded-lg p-2\"\n                        title=\"Search\"\n                    >\n                        <svg\n                            className=\"cursor-pointer w-8 h-8 text-gray-600 hover:text-gray-800\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            viewBox=\"0 0 24 24\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth={2}\n                                d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                            />\n                        </svg>\n                    </div>\n                    {/* Logout Button Dropdown */}\n                    <div\n                        className=\"userDropdownBtn hover:bg-gray-200 px-2 py-2 rounded-lg relative\"\n                        title=\"Logout\"\n                    >\n                        <svg\n                            className=\"cursor-pointer w-8 h-8 text-gray-600 hover:text-gray-800\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            viewBox=\"0 0 24 24\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth={2}\n                                d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                            />\n                        </svg>\n                        <div className=\"userDropdown absolute right-0 mt-1 bg-gray-200 rounded\">\n                            <li className=\"flex flex-col text-gray-700\">\n                                <span\n                                    onClick={(e) => history.push('/')}\n                                    className=\"flex space-x-1 py-2 px-8 hover:bg-gray-400 cursor-pointer\"\n                                >\n                                    <span>\n                                        <svg\n                                            className=\"w-6 h-6\"\n                                            fill=\"none\"\n                                            stroke=\"currentColor\"\n                                            viewBox=\"0 0 24 24\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                        >\n                                            <path\n                                                strokeLinecap=\"round\"\n                                                strokeLinejoin=\"round\"\n                                                strokeWidth={2}\n                                                d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\"\n                                            />\n                                        </svg>\n                                    </span>\n                                    <span>Shop</span>\n                                </span>\n                                <span className=\"flex space-x-1 py-2 px-8 hover:bg-gray-400 cursor-pointer\">\n                                    <span>\n                                        <svg\n                                            className=\"w-6 h-6\"\n                                            fill=\"none\"\n                                            stroke=\"currentColor\"\n                                            viewBox=\"0 0 24 24\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                        >\n                                            <path\n                                                strokeLinecap=\"round\"\n                                                strokeLinejoin=\"round\"\n                                                strokeWidth={2}\n                                                d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n                                            />\n                                            <path\n                                                strokeLinecap=\"round\"\n                                                strokeLinejoin=\"round\"\n                                                strokeWidth={2}\n                                                d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                                            />\n                                        </svg>\n                                    </span>\n                                    <span>Setting</span>\n                                </span>\n                                <span\n                                    onClick={(e) => logout()}\n                                    className=\"flex space-x-1 py-2 px-8 hover:bg-gray-400 cursor-pointer\"\n                                >\n                                    <span>\n                                        <svg\n                                            className=\"w-6 h-6\"\n                                            fill=\"none\"\n                                            stroke=\"currentColor\"\n                                            viewBox=\"0 0 24 24\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                        >\n                                            <path\n                                                strokeLinecap=\"round\"\n                                                strokeLinejoin=\"round\"\n                                                strokeWidth={2}\n                                                d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                                            />\n                                        </svg>\n                                    </span>\n                                    <span>Logout</span>\n                                </span>\n                            </li>\n                        </div>\n                    </div>\n                </div>\n                {/* Mobile Navber */}\n                {/* End Mobile Navber */}\n            </nav>\n        </Fragment>\n    );\n};\n\nexport default AdminNavber;\n","import React, { Fragment } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nconst AdminSidebar = (props) => {\n  const location = useLocation();\n  const history = useHistory();\n\n  return (\n    <Fragment>\n      <div\n        style={{ boxShadow: \"1px 1px 8px 0.2px #aaaaaa\" }}\n        id=\"sidebar\"\n        className=\"hidden md:block sticky top-0 left-0 h-screen md:w-3/12 lg:w-2/12 sidebarShadow bg-white text-gray-600\"\n      >\n        <div\n          onClick={(e) => history.push(\"/admin/dashboard\")}\n          className={`${\n            location.pathname === \"/admin/dashboard\"\n              ? \"border-r-4 border-gray-800 bg-gray-100\"\n              : \"\"\n          } hover:bg-gray-200 cursor-pointer flex flex-col items-center justify-center py-6`}\n        >\n          <span>\n            <svg\n              className=\"w-8 h-8 text-gray-600 hover:text-gray-800\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M16 8v8m-4-5v5m-4-2v2m-2 4h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\n              />\n            </svg>\n          </span>\n          <span className=\"hover:text-gray-800\">Dashboard</span>\n        </div>\n        <hr className=\"border-b border-gray-200\" />\n        <div\n          onClick={(e) => history.push(\"/admin/dashboard/categories\")}\n          className={`${\n            location.pathname === \"/admin/dashboard/categories\"\n              ? \"border-r-4 border-gray-800 bg-gray-100\"\n              : \"\"\n          } hover:bg-gray-200 cursor-pointer flex flex-col items-center justify-center py-6`}\n        >\n          <span>\n            <svg\n              className=\"w-8 h-8 text-gray-600 hover:text-gray-800\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\"\n              />\n            </svg>\n          </span>\n          <span className=\"hover:text-gray-800\">Categories</span>\n        </div>\n        <hr className=\"border-b border-gray-200\" />\n        <div\n          onClick={(e) => history.push(\"/admin/dashboard/products\")}\n          className={`${\n            location.pathname === \"/admin/dashboard/products\"\n              ? \"border-r-4 border-gray-800 bg-gray-100\"\n              : \"\"\n          } hover:bg-gray-200 cursor-pointer flex flex-col items-center justify-center py-6`}\n        >\n          <span>\n            <svg\n              className=\"w-8 h-8 text-gray-600 hover:text-gray-800\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\"\n              />\n            </svg>\n          </span>\n          <span className=\"hover:text-gray-800\">Product</span>\n        </div>\n        <hr className=\"border-b border-gray-200\" />\n        <div\n          onClick={(e) => history.push(\"/admin/dashboard/orders\")}\n          className={`${\n            location.pathname === \"/admin/dashboard/orders\"\n              ? \"border-r-4 border-gray-800 bg-gray-100\"\n              : \"\"\n          } hover:bg-gray-200 cursor-pointer flex flex-col items-center justify-center py-6`}\n        >\n          <span>\n            <svg\n              className=\"w-8 h-8 text-gray-600 hover:text-gray-800\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\"\n              />\n            </svg>\n          </span>\n          <span className=\"hover:text-gray-800\">Order</span>\n        </div>\n        <hr className=\"border-b border-gray-200\" />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default AdminSidebar;\n","import React, { Fragment } from 'react';\nimport moment from 'moment';\n\nconst AdminFooter = (props) => {\n    return (\n        <Fragment>\n            <footer\n                style={{ background: '#303031', color: '#87898A' }}\n                className=\"z-10 py-6 px-4 md:px-12 text-center\"\n            >\n                Tran Duc Bo Team {moment().format('YYYY')}\n            </footer>\n        </Fragment>\n    );\n};\n\nexport default AdminFooter;\n","import React, { Fragment } from \"react\";\n\nimport AdminNavber from \"../partials/AdminNavber\";\nimport AdminSidebar from \"../partials/AdminSidebar\";\nimport AdminFooter from \"../partials/AdminFooter\";\n\nconst AdminLayout = ({ children }) => {\n  return (\n    <Fragment>\n      <AdminNavber />\n      <section className=\"flex bg-gray-100\">\n        <AdminSidebar />\n        <div className=\"w-full md:w-11/12 h-full\">\n          {/* All Children pass from here */}\n          {children}\n        </div>\n      </section>\n      <AdminFooter />\n    </Fragment>\n  );\n};\n\nexport default AdminLayout;\n","import React, { Fragment, useEffect, useContext } from \"react\";\nimport { GetAllData } from \"./Action\";\nimport { DashboardContext } from \"./\";\n\nconst DashboardCard = (props) => {\n  const { data, dispatch } = useContext(DashboardContext);\n\n  useEffect(() => {\n    GetAllData(dispatch);\n  }, []);\n\n  return (\n    <Fragment>\n      {/* Card Start */}\n      <div className=\"m-4 grid grid-cols-1 md:grid-cols-4 row-gap-4 col-gap-4\">\n        <div className=\"flex flex-col justify-center items-center col-span-1 bg-white p-6 shadow-lg hover:shadow-none cursor-pointer transition-all duration-300 ease-in border-b-4 border-opacity-0 hover:border-opacity-100 border-indigo-200\">\n          <div className=\"bg-indigo-200 p-2 cursor-pointer rounded-full\">\n            <svg\n              className=\"w-6 h-6\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"\n              />\n            </svg>\n          </div>\n          <div className=\"text-2xl font-semibold\">\n            {data ? data.totalData.Users : 0}\n          </div>\n          <div className=\"text-lg font-medium\">Customers</div>\n          <div className=\"flex items-center space-x-1 text-green-500\">\n            <span>7%</span>\n            <span>\n              <svg\n                className=\"w-3 h-3\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M5 10l7-7m0 0l7 7m-7-7v18\"\n                />\n              </svg>\n            </span>\n          </div>\n        </div>\n        <div className=\"flex flex-col justify-center items-center col-span-1 bg-white p-6 shadow-lg hover:shadow-none cursor-pointer transition-all duration-300 ease-in border-b-4 border-opacity-0 hover:border-opacity-100 border-red-200\">\n          <div className=\"bg-red-200 p-2 cursor-pointer rounded-full\">\n            <svg\n              className=\"w-6 h-6\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\"\n              />\n            </svg>\n          </div>\n          <div className=\"text-2xl font-semibold\">\n            {data ? data.totalData.Orders : 0}\n          </div>\n          <div className=\"text-lg font-medium\">Orders</div>\n          <div className=\"flex items-center space-x-1 text-green-500\">\n            <span>10%</span>\n            <span>\n              <svg\n                className=\"w-3 h-3\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M5 10l7-7m0 0l7 7m-7-7v18\"\n                />\n              </svg>\n            </span>\n          </div>\n        </div>\n        <div className=\"flex flex-col justify-center items-center col-span-1 bg-white p-6 shadow-lg hover:shadow-none cursor-pointer transition-all duration-300 ease-in border-b-4 border-opacity-0 hover:border-opacity-100 border-green-200\">\n          <div className=\"bg-green-200 p-2 cursor-pointer rounded-full\">\n            <svg\n              className=\"w-6 h-6\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M10 2a4 4 0 00-4 4v1H5a1 1 0 00-.994.89l-1 9A1 1 0 004 18h12a1 1 0 00.994-1.11l-1-9A1 1 0 0015 7h-1V6a4 4 0 00-4-4zm2 5V6a2 2 0 10-4 0v1h4zm-6 3a1 1 0 112 0 1 1 0 01-2 0zm7-1a1 1 0 100 2 1 1 0 000-2z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </div>\n          <div className=\"text-2xl font-semibold\">\n            {data ? data.totalData.Products : 0}\n          </div>\n          <div className=\"text-lg font-medium\">Product</div>\n        </div>\n        <div className=\"flex flex-col justify-center items-center col-span-1 bg-white p-6 shadow-lg hover:shadow-none cursor-pointer transition-all duration-300 ease-in border-b-4 border-opacity-0 hover:border-opacity-100 border-orange-200\">\n          <div className=\"bg-orange-200 p-2 cursor-pointer rounded-full\">\n            <svg\n              className=\"w-6 h-6\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\"\n              />\n            </svg>\n          </div>\n          <div className=\"text-2xl font-semibold\">\n            {data ? data.totalData.Categories : 0}\n          </div>\n          <div className=\"text-lg font-medium\">Categories</div>\n        </div>\n      </div>\n      {/* End Card */}\n    </Fragment>\n  );\n};\n\nexport default DashboardCard;\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport { DashboardContext } from \"./\";\nimport { uploadImage, sliderImages, deleteImage } from \"./Action\";\n\nconst apiURL = process.env.REACT_APP_API_URL;\n\nconst Customize = () => {\n  const { data, dispatch } = useContext(DashboardContext);\n\n  return (\n    <Fragment>\n      <div className=\"m-4 md:w-1/2\">\n        {!data.uploadSliderBtn ? (\n          <div\n            onClick={(e) =>\n              dispatch({\n                type: \"uploadSliderBtn\",\n                payload: !data.uploadSliderBtn,\n              })\n            }\n            style={{ background: \"#303031\" }}\n            className=\"cursor-pointer rounded-full p-2 flex items-center justify-center text-gray-100 text-sm font-semibold uppercase\"\n          >\n            <svg\n              className=\"w-6 h-6 text-gray-100 mr-2\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n            Customize Slider Image\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n      {data.uploadSliderBtn ? <UploadImageSection /> : \"\"}\n    </Fragment>\n  );\n};\n\nconst UploadImageSection = () => {\n  const { data, dispatch } = useContext(DashboardContext);\n\n  const uploadImageHandler = (image) => {\n    uploadImage(image, dispatch);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"relative m-4 bg-white p-4 shadow-lg\">\n        <h1 className=\"border-b-2 border-yellow-700 mb-4 pb-2 text-2xl font-semibold\">\n          Shop Slider Images\n        </h1>\n        <div className=\"relative flex flex-col space-y-2\">\n          <div\n            style={{ background: \"#303031\" }}\n            className=\"relative z-0 px-4 py-2 rounded text-white flex justify-center space-x-2 md:w-4/12\"\n          >\n            <svg\n              className=\"w-6 h-6\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n              />\n            </svg>{\" \"}\n            <span>Upload File</span>\n          </div>\n          <input\n            onChange={(e) => uploadImageHandler(e.target.files[0])}\n            name=\"image\"\n            accept=\".jpg, .png, .jpeg, .gif, .bmp, .tif, .tiff|image/*\"\n            className=\"absolute z-10 opacity-0 bg-gray-100\"\n            type=\"file\"\n            id=\"image\"\n          />\n        </div>\n        <span\n          onClick={(e) =>\n            dispatch({\n              type: \"uploadSliderBtn\",\n              payload: !data.uploadSliderBtn,\n            })\n          }\n          style={{ background: \"#303031\" }}\n          className=\"cursor-pointer absolute top-0 right-0 m-4 rounded-full p-1\"\n        >\n          <svg\n            className=\"w-6 h-6 text-white\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M6 18L18 6M6 6l12 12\"\n            />\n          </svg>\n        </span>\n        <AllImages />\n      </div>\n    </Fragment>\n  );\n};\n\nconst AllImages = () => {\n  const { data, dispatch } = useContext(DashboardContext);\n\n  useEffect(() => {\n    sliderImages(dispatch);\n  }, []);\n\n  const deleteImageReq = (id) => {\n    deleteImage(id, dispatch);\n  };\n\n  return (\n    <Fragment>\n      {data.imageUpload ? (\n        <div className=\"flex items-center justify-center p-8\">\n          <svg\n            className=\"w-12 h-12 animate-spin text-gray-600\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n            ></path>\n          </svg>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"grid grid-cols-1 md:grid md:grid-cols-2 lg:grid-cols-3 my-4\">\n        {data.sliderImages.length > 0 ? (\n          data.sliderImages.map((item, index) => {\n            return (\n              <div key={index} className=\"relative col-span-1 m-2 border\">\n                <img\n                  className=\"w-full md:h-32 object-center object-cover\"\n                  src={`${apiURL}/uploads/customize/${item.slideImage}`}\n                  alt=\"sliderImages\"\n                />\n                <span\n                  onClick={(e) => deleteImageReq(item._id)}\n                  style={{ background: \"#303031\" }}\n                  className=\"absolute top-0 right-0 m-1 text-white cursor-pointer rounded-full p-1\"\n                >\n                  <svg\n                    className=\"w-6 h-6\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M6 18L18 6M6 6l12 12\"\n                    />\n                  </svg>\n                </span>\n              </div>\n            );\n          })\n        ) : (\n          <div className=\"col-span-1 md:col-span-2 lg:col-span-3 text-center text-xl font-light w-full bg-orange-200 rounded py-2\">\n            No slide image found\n          </div>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Customize;\n","export const dashboardState = {\n  totalData: [],\n  totalOrders: [],\n  uploadSliderBtn: true,\n  imageUpload: false,\n  sliderImages: [],\n};\n\nexport const dashboardReducer = (state, action) => {\n  switch (action.type) {\n    case \"totalData\":\n      return {\n        ...state,\n        totalData: action.payload,\n      };\n    case \"totalOrders\":\n      return {\n        ...state,\n        totalOrders: action.payload,\n      };\n    case \"uploadSliderBtn\":\n      return {\n        ...state,\n        uploadSliderBtn: action.payload,\n      };\n    case \"imageUpload\":\n      return {\n        ...state,\n        imageUpload: action.payload,\n      };\n    case \"sliderImages\":\n      return {\n        ...state,\n        sliderImages: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { DashboardContext } from \"./\";\nimport { todayAllOrders } from \"./Action\";\n\nconst apiURL = process.env.REACT_APP_API_URL;\n\nconst SellTable = () => {\n  const history = useHistory();\n  const { data, dispatch } = useContext(DashboardContext);\n  const [newList, setNewList] = useState(null);\n\n  useEffect(() => {\n    todayAllOrders(dispatch);\n  }, []);\n\n  const ordersList = () => {\n    let newList = [];\n    if (data.totalOrders.Orders !== undefined) {\n      data.totalOrders.Orders.forEach(function (elem) {\n        if (moment(elem.createdAt).format(\"LL\") === moment().format(\"LL\")) {\n          newList = [...newList, elem];\n        }\n      });\n    }\n    return newList;\n  };\n\n  return (\n    <Fragment>\n      <div className=\"col-span-1 overflow-auto bg-white shadow-lg p-4\">\n        <div className=\"text-2xl font-semibold mb-6 text-center\">\n          Today's Orders{\" \"}\n          {data.totalOrders.Orders !== undefined ? ordersList().length : 0}\n        </div>\n        <table className=\"table-auto border w-full my-2\">\n          <thead>\n            <tr>\n              <th className=\"px-4 py-2 border\">Products</th>\n              <th className=\"px-4 py-2 border\">Image</th>\n              <th className=\"px-4 py-2 border\">Status</th>\n              <th className=\"px-4 py-2 border\">Order Address</th>\n              <th className=\"px-4 py-2 border\">Ordered at</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.totalOrders.Orders !== undefined ? (\n              ordersList().map((item, key) => {\n                return <TodayOrderTable order={item} key={key} />;\n              })\n            ) : (\n              <tr>\n                <td\n                  colSpan=\"5\"\n                  className=\"text-xl text-center font-semibold py-8\"\n                >\n                  No orders found today\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n        <div className=\"text-sm text-gray-600 mt-2\">\n          Total{\" \"}\n          {data.totalOrders.Orders !== undefined ? ordersList().length : 0}{\" \"}\n          orders found\n        </div>\n        <div className=\"flex justify-center\">\n          <span\n            onClick={(e) => history.push(\"/admin/dashboard/orders\")}\n            style={{ background: \"#303031\" }}\n            className=\"cursor-pointer px-4 py-2 text-white rounded-full\"\n          >\n            View All\n          </span>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst TodayOrderTable = ({ order }) => {\n  return (\n    <Fragment>\n      <tr>\n        <td className=\"w-48 hover:bg-gray-200 p-2 flex flex-col space-y-1\">\n          {order.allProduct.map((item, index) => {\n            return (\n              <div key={index} className=\"flex space-x-2\">\n                <span>{item.id.pName}</span>\n                <span>{item.quantitiy}x</span>\n              </div>\n            );\n          })}\n        </td>\n        <td className=\"p-2 text-left\">\n          {order.allProduct.map((item, index) => {\n            return (\n              <img\n                key={index}\n                className=\"w-12 h-12 object-cover\"\n                src={`${apiURL}/uploads/products/${item.id.pImages[0]}`}\n                alt=\"Pic\"\n              />\n            );\n          })}\n        </td>\n        <td className=\"p-2 text-center\">\n          {order.status === \"Not processed\" && (\n            <span className=\"block text-red-600 rounded-full text-center text-xs px-2 font-semibold\">\n              {order.status}\n            </span>\n          )}\n          {order.status === \"Processing\" && (\n            <span className=\"block text-yellow-600 rounded-full text-center text-xs px-2 font-semibold\">\n              {order.status}\n            </span>\n          )}\n          {order.status === \"Shipped\" && (\n            <span className=\"block text-blue-600 rounded-full text-center text-xs px-2 font-semibold\">\n              {order.status}\n            </span>\n          )}\n          {order.status === \"Delivered\" && (\n            <span className=\"block text-green-600 rounded-full text-center text-xs px-2 font-semibold\">\n              {order.status}\n            </span>\n          )}\n          {order.status === \"Cancelled\" && (\n            <span className=\"block text-red-600 rounded-full text-center text-xs px-2 font-semibold\">\n              {order.status}\n            </span>\n          )}\n        </td>\n        <td className=\"p-2 text-center\">{order.address}</td>\n        <td className=\"p-2 text-center\">\n          {moment(order.createdAt).format(\"lll\")}\n        </td>\n      </tr>\n    </Fragment>\n  );\n};\n\nconst TodaySell = (props) => {\n  return (\n    <div className=\"m-4\">\n      <SellTable />\n    </div>\n  );\n};\n\nexport default TodaySell;\n","import React, { Fragment, createContext, useReducer } from \"react\";\nimport AdminLayout from \"../layout\";\nimport DashboardCard from \"./DashboardCard\";\nimport Customize from \"./Customize\";\nimport { dashboardState, dashboardReducer } from \"./DashboardContext\";\nimport TodaySell from \"./TodaySell\";\n\nexport const DashboardContext = createContext();\n\nconst DashboardComponent = () => {\n  return (\n    <Fragment>\n      <DashboardCard />\n      <Customize />\n      <TodaySell />\n    </Fragment>\n  );\n};\n\nconst DashboardAdmin = (props) => {\n  const [data, dispatch] = useReducer(dashboardReducer, dashboardState);\n  return (\n    <Fragment>\n      <DashboardContext.Provider value={{ data, dispatch }}>\n        <AdminLayout children={<DashboardComponent />} />\n      </DashboardContext.Provider>\n    </Fragment>\n  );\n};\n\nexport default DashboardAdmin;\n","import React, { Fragment, useContext, useState } from \"react\";\nimport { CategoryContext } from \"./index\";\nimport { createCategory, getAllCategory } from \"./FetchApi\";\n\nconst AddCategoryModal = (props) => {\n  const { data, dispatch } = useContext(CategoryContext);\n\n  const alert = (msg, type) => (\n    <div className={`bg-${type}-200 py-2 px-4 w-full`}>{msg}</div>\n  );\n\n  const [fData, setFdata] = useState({\n    cName: \"\",\n    cDescription: \"\",\n    cImage: \"\",\n    cStatus: \"Active\",\n    success: false,\n    error: false,\n  });\n\n  const fetchData = async () => {\n    let responseData = await getAllCategory();\n    if (responseData.Categories) {\n      dispatch({\n        type: \"fetchCategoryAndChangeState\",\n        payload: responseData.Categories,\n      });\n    }\n  };\n\n  if (fData.error || fData.success) {\n    setTimeout(() => {\n      setFdata({ ...fData, success: false, error: false });\n    }, 2000);\n  }\n\n  const submitForm = async (e) => {\n    dispatch({ type: \"loading\", payload: true });\n    // Reset and prevent the form\n    e.preventDefault();\n    e.target.reset();\n\n    if (!fData.cImage) {\n      dispatch({ type: \"loading\", payload: false });\n      return setFdata({ ...fData, error: \"Please upload a category image\" });\n    }\n\n    try {\n      let responseData = await createCategory(fData);\n      if (responseData.success) {\n        fetchData();\n        setFdata({\n          ...fData,\n          cName: \"\",\n          cDescription: \"\",\n          cImage: \"\",\n          cStatus: \"Active\",\n          success: responseData.success,\n          error: false,\n        });\n        dispatch({ type: \"loading\", payload: false });\n        setTimeout(() => {\n          setFdata({\n            ...fData,\n            cName: \"\",\n            cDescription: \"\",\n            cImage: \"\",\n            cStatus: \"Active\",\n            success: false,\n            error: false,\n          });\n        }, 2000);\n      } else if (responseData.error) {\n        setFdata({ ...fData, success: false, error: responseData.error });\n        dispatch({ type: \"loading\", payload: false });\n        setTimeout(() => {\n          return setFdata({ ...fData, error: false, success: false });\n        }, 2000);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Fragment>\n      {/* Black Overlay */}\n      <div\n        onClick={(e) => dispatch({ type: \"addCategoryModal\", payload: false })}\n        className={`${\n          data.addCategoryModal ? \"\" : \"hidden\"\n        } fixed top-0 left-0 z-30 w-full h-full bg-black opacity-50`}\n      />\n      {/* End Black Overlay */}\n\n      {/* Modal Start */}\n      <div\n        className={`${\n          data.addCategoryModal ? \"\" : \"hidden\"\n        } fixed inset-0 m-4  flex items-center z-30 justify-center`}\n      >\n        <div className=\"relative bg-white w-12/12 md:w-3/6 shadow-lg flex flex-col items-center space-y-4  overflow-y-auto px-4 py-4 md:px-8\">\n          <div className=\"flex items-center justify-between w-full pt-4\">\n            <span className=\"text-left font-semibold text-2xl tracking-wider\">\n              Add Category\n            </span>\n            {/* Close Modal */}\n            <span\n              style={{ background: \"#303031\" }}\n              onClick={(e) =>\n                dispatch({ type: \"addCategoryModal\", payload: false })\n              }\n              className=\"cursor-pointer text-gray-100 py-2 px-2 rounded-full\"\n            >\n              <svg\n                className=\"w-6 h-6\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </span>\n          </div>\n          {fData.error ? alert(fData.error, \"red\") : \"\"}\n          {fData.success ? alert(fData.success, \"green\") : \"\"}\n          <form className=\"w-full\" onSubmit={(e) => submitForm(e)}>\n            <div className=\"flex flex-col space-y-1 w-full py-4\">\n              <label htmlFor=\"name\">Category Name</label>\n              <input\n                onChange={(e) =>\n                  setFdata({\n                    ...fData,\n                    success: false,\n                    error: false,\n                    cName: e.target.value,\n                  })\n                }\n                value={fData.cName}\n                className=\"px-4 py-2 border focus:outline-none\"\n                type=\"text\"\n              />\n            </div>\n            <div className=\"flex flex-col space-y-1 w-full\">\n              <label htmlFor=\"description\">Category Description</label>\n              <textarea\n                onChange={(e) =>\n                  setFdata({\n                    ...fData,\n                    success: false,\n                    error: false,\n                    cDescription: e.target.value,\n                  })\n                }\n                value={fData.cDescription}\n                className=\"px-4 py-2 border focus:outline-none\"\n                name=\"description\"\n                id=\"description\"\n                cols={5}\n                rows={5}\n              />\n            </div>\n            {/* Image Field & function */}\n            <div className=\"flex flex-col space-y-1 w-full\">\n              <label htmlFor=\"name\">Category Image</label>\n              <input\n                accept=\".jpg, .jpeg, .png\"\n                onChange={(e) => {\n                  setFdata({\n                    ...fData,\n                    success: false,\n                    error: false,\n                    cImage: e.target.files[0],\n                  });\n                }}\n                className=\"px-4 py-2 border focus:outline-none\"\n                type=\"file\"\n              />\n            </div>\n            <div className=\"flex flex-col space-y-1 w-full\">\n              <label htmlFor=\"status\">Category Status</label>\n              <select\n                name=\"status\"\n                onChange={(e) =>\n                  setFdata({\n                    ...fData,\n                    success: false,\n                    error: false,\n                    cStatus: e.target.value,\n                  })\n                }\n                className=\"px-4 py-2 border focus:outline-none\"\n                id=\"status\"\n              >\n                <option name=\"status\" value=\"Active\">\n                  Active\n                </option>\n                <option name=\"status\" value=\"Disabled\">\n                  Disabled\n                </option>\n              </select>\n            </div>\n            <div className=\"flex flex-col space-y-1 w-full pb-4 md:pb-6 mt-4\">\n              <button\n                style={{ background: \"#303031\" }}\n                type=\"submit\"\n                className=\"bg-gray-800 text-gray-100 rounded-full text-lg font-medium py-2\"\n              >\n                Create category\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default AddCategoryModal;\n","import React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport { CategoryContext } from \"./index\";\nimport { editCategory, getAllCategory } from \"./FetchApi\";\n\nconst EditCategoryModal = (props) => {\n  const { data, dispatch } = useContext(CategoryContext);\n\n  const [des, setDes] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [cId, setCid] = useState(\"\");\n\n  useEffect(() => {\n    setDes(data.editCategoryModal.des);\n    setStatus(data.editCategoryModal.status);\n    setCid(data.editCategoryModal.cId);\n  }, [data.editCategoryModal.modal]);\n\n  const fetchData = async () => {\n    let responseData = await getAllCategory();\n    if (responseData.Categories) {\n      dispatch({\n        type: \"fetchCategoryAndChangeState\",\n        payload: responseData.Categories,\n      });\n    }\n  };\n\n  const submitForm = async () => {\n    dispatch({ type: \"loading\", payload: true });\n    let edit = await editCategory(cId, des, status);\n    if (edit.error) {\n      console.log(edit.error);\n      dispatch({ type: \"loading\", payload: false });\n    } else if (edit.success) {\n      console.log(edit.success);\n      dispatch({ type: \"editCategoryModalClose\" });\n      setTimeout(() => {\n        fetchData();\n        dispatch({ type: \"loading\", payload: false });\n      }, 1000);\n    }\n  };\n\n  return (\n    <Fragment>\n      {/* Black Overlay */}\n      <div\n        onClick={(e) => dispatch({ type: \"editCategoryModalClose\" })}\n        className={`${\n          data.editCategoryModal.modal ? \"\" : \"hidden\"\n        } fixed top-0 left-0 z-30 w-full h-full bg-black opacity-50`}\n      />\n      {/* End Black Overlay */}\n\n      {/* Modal Start */}\n      <div\n        className={`${\n          data.editCategoryModal.modal ? \"\" : \"hidden\"\n        } fixed inset-0 m-4  flex items-center z-30 justify-center`}\n      >\n        <div className=\"relative bg-white w-11/12 md:w-3/6 shadow-lg flex flex-col items-center space-y-4  overflow-y-auto px-4 py-4 md:px-8\">\n          <div className=\"flex items-center justify-between w-full pt-4\">\n            <span className=\"text-left font-semibold text-2xl tracking-wider\">\n              Add Category\n            </span>\n            {/* Close Modal */}\n            <span\n              style={{ background: \"#303031\" }}\n              onClick={(e) => dispatch({ type: \"editCategoryModalClose\" })}\n              className=\"cursor-pointer text-gray-100 py-2 px-2 rounded-full\"\n            >\n              <svg\n                className=\"w-6 h-6\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </span>\n          </div>\n          <div className=\"flex flex-col space-y-1 w-full\">\n            <label htmlFor=\"description\">Category Description</label>\n            <textarea\n              value={des}\n              onChange={(e) => setDes(e.target.value)}\n              className=\"px-4 py-2 border focus:outline-none\"\n              name=\"description\"\n              id=\"description\"\n              cols={5}\n              rows={5}\n            />\n          </div>\n          <div className=\"flex flex-col space-y-1 w-full\">\n            <label htmlFor=\"status\">Category Status</label>\n            <select\n              value={status}\n              name=\"status\"\n              onChange={(e) => setStatus(e.target.value)}\n              className=\"px-4 py-2 border focus:outline-none\"\n              id=\"status\"\n            >\n              <option name=\"status\" value=\"Active\">\n                Active\n              </option>\n              <option name=\"status\" value=\"Disabled\">\n                Disabled\n              </option>\n            </select>\n          </div>\n          <div className=\"flex flex-col space-y-1 w-full pb-4 md:pb-6\">\n            <button\n              style={{ background: \"#303031\" }}\n              onClick={(e) => submitForm()}\n              className=\"rounded-full bg-gray-800 text-gray-100 text-lg font-medium py-2\"\n            >\n              Create category\n            </button>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default EditCategoryModal;\n","import React, { Fragment, useContext } from \"react\";\nimport { CategoryContext } from \"./index\";\nimport AddCategoryModal from \"./AddCategoryModal\";\nimport EditCategoryModal from \"./EditCategoryModal\";\n\nconst CategoryMenu = (props) => {\n  const { dispatch } = useContext(CategoryContext);\n\n  return (\n    <Fragment>\n      <div className=\"col-span-1 flex items-center\">\n        <div className=\"flex flex-col space-y-4 md:flex-row md:justify-between md:items-center w-full\">\n          {/* It's open the add category modal */}\n          <div\n            style={{ background: \"#303031\" }}\n            onClick={(e) =>\n              dispatch({ type: \"addCategoryModal\", payload: true })\n            }\n            className=\"cursor-pointer rounded-full p-2 flex items-center justify-center text-gray-100 text-sm font-semibold uppercase\"\n          >\n            <svg\n              className=\"w-6 h-6 text-gray-100 mr-2\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n            Add Category\n          </div>\n        </div>\n        <AddCategoryModal />\n        <EditCategoryModal />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default CategoryMenu;\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport { getAllCategory, deleteCategory } from \"./FetchApi\";\nimport { CategoryContext } from \"./index\";\nimport moment from \"moment\";\n\nconst apiURL = process.env.REACT_APP_API_URL;\n\nconst AllCategory = (props) => {\n  const { data, dispatch } = useContext(CategoryContext);\n  const { categories, loading } = data;\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    dispatch({ type: \"loading\", payload: true });\n    let responseData = await getAllCategory();\n    setTimeout(() => {\n      if (responseData && responseData.Categories) {\n        dispatch({\n          type: \"fetchCategoryAndChangeState\",\n          payload: responseData.Categories,\n        });\n        dispatch({ type: \"loading\", payload: false });\n      }\n    }, 1000);\n  };\n\n  const deleteCategoryReq = async (cId) => {\n    let deleteC = await deleteCategory(cId);\n    if (deleteC.error) {\n      console.log(deleteC.error);\n    } else if (deleteC.success) {\n      console.log(deleteC.success);\n      fetchData();\n    }\n  };\n\n  /* This method call the editmodal & dispatch category context */\n  const editCategory = (cId, type, des, status) => {\n    if (type) {\n      dispatch({\n        type: \"editCategoryModalOpen\",\n        cId: cId,\n        des: des,\n        status: status,\n      });\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <svg\n          class=\"w-12 h-12 animate-spin text-gray-600\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n          ></path>\n        </svg>\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <div className=\"col-span-1 overflow-auto bg-white shadow-lg p-4\">\n        <table className=\"table-auto border w-full my-2\">\n          <thead>\n            <tr>\n              <th className=\"px-4 py-2 border\">Category</th>\n              <th className=\"px-4 py-2 border\">Description</th>\n              <th className=\"px-4 py-2 border\">Image</th>\n              <th className=\"px-4 py-2 border\">Status</th>\n              <th className=\"px-4 py-2 border\">Created at</th>\n              <th className=\"px-4 py-2 border\">Updated at</th>\n              <th className=\"px-4 py-2 border\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {categories && categories.length > 0 ? (\n              categories.map((item, key) => {\n                return (\n                  <CategoryTable\n                    category={item}\n                    editCat={(cId, type, des, status) =>\n                      editCategory(cId, type, des, status)\n                    }\n                    deleteCat={(cId) => deleteCategoryReq(cId)}\n                    key={key}\n                  />\n                );\n              })\n            ) : (\n              <tr>\n                <td\n                  colSpan=\"7\"\n                  className=\"text-xl text-center font-semibold py-8\"\n                >\n                  No category found\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n        <div className=\"text-sm text-gray-600 mt-2\">\n          Total {categories && categories.length} category found\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\n/* Single Category Component */\nconst CategoryTable = ({ category, deleteCat, editCat }) => {\n  return (\n    <Fragment>\n      <tr>\n        <td className=\"p-2 text-left\">\n          {category.cName.length > 20\n            ? category.cName.slice(0, 20) + \"...\"\n            : category.cName}\n        </td>\n        <td className=\"p-2 text-left\">\n          {category.cDescription.length > 30\n            ? category.cDescription.slice(0, 30) + \"...\"\n            : category.cDescription}\n        </td>\n        <td className=\"p-2 text-center\">\n          <img\n            className=\"w-12 h-12 object-cover object-center\"\n            src={`${apiURL}/uploads/categories/${category.cImage}`}\n            alt=\"\"\n          />\n        </td>\n        <td className=\"p-2 text-center\">\n          {category.cStatus === \"Active\" ? (\n            <span className=\"bg-green-200 rounded-full text-center text-xs px-2 font-semibold\">\n              {category.cStatus}\n            </span>\n          ) : (\n            <span className=\"bg-red-200 rounded-full text-center text-xs px-2 font-semibold\">\n              {category.cStatus}\n            </span>\n          )}\n        </td>\n        <td className=\"p-2 text-center\">\n          {moment(category.createdAt).format(\"lll\")}\n        </td>\n        <td className=\"p-2 text-center\">\n          {moment(category.updatedAt).format(\"lll\")}\n        </td>\n        <td className=\"p-2 flex items-center justify-center\">\n          <span\n            onClick={(e) =>\n              editCat(\n                category._id,\n                true,\n                category.cDescription,\n                category.cStatus\n              )\n            }\n            className=\"cursor-pointer hover:bg-gray-200 rounded-lg p-2 mx-1\"\n          >\n            <svg\n              className=\"w-6 h-6 fill-current text-green-500\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\n              <path\n                fillRule=\"evenodd\"\n                d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </span>\n          <span\n            onClick={(e) => deleteCat(category._id)}\n            className=\"cursor-pointer hover:bg-gray-200 rounded-lg p-2 mx-1\"\n          >\n            <svg\n              className=\"w-6 h-6 fill-current text-red-500\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </span>\n        </td>\n      </tr>\n    </Fragment>\n  );\n};\n\nexport default AllCategory;\n","export const categoryState = {\n  categories: [],\n  addCategoryModal: false,\n  editCategoryModal: {\n    modal: false,\n    cId: null,\n    des: \"\",\n    status: \"\",\n  },\n  loading: false,\n};\n\nexport const categoryReducer = (state, action) => {\n  switch (action.type) {\n    /* Get all category */\n    case \"fetchCategoryAndChangeState\":\n      return {\n        ...state,\n        categories: action.payload,\n      };\n    /* Create a category */\n    case \"addCategoryModal\":\n      return {\n        ...state,\n        addCategoryModal: action.payload,\n      };\n    /* Edit a category */\n    case \"editCategoryModalOpen\":\n      return {\n        ...state,\n        editCategoryModal: {\n          modal: true,\n          cId: action.cId,\n          des: action.des,\n          status: action.status,\n        },\n      };\n    case \"editCategoryModalClose\":\n      return {\n        ...state,\n        editCategoryModal: {\n          modal: false,\n          cId: null,\n          des: \"\",\n          status: \"\",\n        },\n      };\n    case \"loading\":\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { Fragment, createContext, useReducer } from \"react\";\nimport AdminLayout from \"../layout\";\nimport CategoryMenu from \"./CategoryMenu\";\nimport AllCategories from \"./AllCategories\";\nimport { categoryState, categoryReducer } from \"./CategoryContext\";\n\n/* This context manage all of the caregories component's data */\nexport const CategoryContext = createContext();\n\nconst CategoryComponent = () => {\n  return (\n    <div className=\"grid grid-cols-1 space-y-4 p-4\">\n      <CategoryMenu />\n      <AllCategories />\n    </div>\n  );\n};\n\nconst Categories = (props) => {\n  const [data, dispatch] = useReducer(categoryReducer, categoryState);\n  return (\n    <Fragment>\n      <CategoryContext.Provider value={{ data, dispatch }}>\n        <AdminLayout children={<CategoryComponent />} />\n      </CategoryContext.Provider>\n    </Fragment>\n  );\n};\n\nexport default Categories;\n","import React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport { ProductContext } from \"./index\";\nimport { createProduct, getAllProduct } from \"./FetchApi\";\nimport { getAllCategory } from \"../categories/FetchApi\";\n\nconst AddProductDetail = ({ categories }) => {\n  const { data, dispatch } = useContext(ProductContext);\n\n  const alert = (msg, type) => (\n    <div className={`bg-${type}-200 py-2 px-4 w-full`}>{msg}</div>\n  );\n\n  const [fData, setFdata] = useState({\n    pName: \"\",\n    pDescription: \"\",\n    pStatus: \"Active\",\n    pImage: null, // Initial value will be null or empty array\n    pCategory: \"\",\n    pPrice: \"\",\n    pOffer: 0,\n    pQuantity: \"\",\n    success: false,\n    error: false,\n  });\n\n  const fetchData = async () => {\n    let responseData = await getAllProduct();\n    setTimeout(() => {\n      if (responseData && responseData.Products) {\n        dispatch({\n          type: \"fetchProductsAndChangeState\",\n          payload: responseData.Products,\n        });\n      }\n    }, 1000);\n  };\n\n  const submitForm = async (e) => {\n    e.preventDefault();\n    e.target.reset();\n\n    if (!fData.pImage) {\n      setFdata({ ...fData, error: \"Please upload at least 2 image\" });\n      setTimeout(() => {\n        setFdata({ ...fData, error: false });\n      }, 2000);\n    }\n\n    try {\n      let responseData = await createProduct(fData);\n      if (responseData.success) {\n        fetchData();\n        setFdata({\n          ...fData,\n          pName: \"\",\n          pDescription: \"\",\n          pImage: \"\",\n          pStatus: \"Active\",\n          pCategory: \"\",\n          pPrice: \"\",\n          pQuantity: \"\",\n          pOffer: 0,\n          success: responseData.success,\n          error: false,\n        });\n        setTimeout(() => {\n          setFdata({\n            ...fData,\n            pName: \"\",\n            pDescription: \"\",\n            pImage: \"\",\n            pStatus: \"Active\",\n            pCategory: \"\",\n            pPrice: \"\",\n            pQuantity: \"\",\n            pOffer: 0,\n            success: false,\n            error: false,\n          });\n        }, 2000);\n      } else if (responseData.error) {\n        setFdata({ ...fData, success: false, error: responseData.error });\n        setTimeout(() => {\n          return setFdata({ ...fData, error: false, success: false });\n        }, 2000);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Fragment>\n      {/* Black Overlay */}\n      <div\n        onClick={(e) => dispatch({ type: \"addProductModal\", payload: false })}\n        className={`${\n          data.addProductModal ? \"\" : \"hidden\"\n        } fixed top-0 left-0 z-30 w-full h-full bg-black opacity-50`}\n      />\n      {/* End Black Overlay */}\n\n      {/* Modal Start */}\n      <div\n        className={`${\n          data.addProductModal ? \"\" : \"hidden\"\n        } fixed inset-0 flex items-center z-30 justify-center overflow-auto`}\n      >\n        <div className=\"mt-32 md:mt-0 relative bg-white w-11/12 md:w-3/6 shadow-lg flex flex-col items-center space-y-4 px-4 py-4 md:px-8\">\n          <div className=\"flex items-center justify-between w-full pt-4\">\n            <span className=\"text-left font-semibold text-2xl tracking-wider\">\n              Add Product\n            </span>\n            {/* Close Modal */}\n            <span\n              style={{ background: \"#303031\" }}\n              onClick={(e) =>\n                dispatch({ type: \"addProductModal\", payload: false })\n              }\n              className=\"cursor-pointer text-gray-100 py-2 px-2 rounded-full\"\n            >\n              <svg\n                className=\"w-6 h-6\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </span>\n          </div>\n          {fData.error ? alert(fData.error, \"red\") : \"\"}\n          {fData.success ? alert(fData.success, \"green\") : \"\"}\n          <form className=\"w-full\" onSubmit={(e) => submitForm(e)}>\n            <div className=\"flex space-x-1 py-4\">\n              <div className=\"w-1/2 flex flex-col space-y-1 space-x-1\">\n                <label htmlFor=\"name\">Product Name *</label>\n                <input\n                  value={fData.pName}\n                  onChange={(e) =>\n                    setFdata({\n                      ...fData,\n                      error: false,\n                      success: false,\n                      pName: e.target.value,\n                    })\n                  }\n                  className=\"px-4 py-2 border focus:outline-none\"\n                  type=\"text\"\n                />\n              </div>\n              <div className=\"w-1/2 flex flex-col space-y-1 space-x-1\">\n                <label htmlFor=\"price\">Product Price *</label>\n                <input\n                  value={fData.pPrice}\n                  onChange={(e) =>\n                    setFdata({\n                      ...fData,\n                      error: false,\n                      success: false,\n                      pPrice: e.target.value,\n                    })\n                  }\n                  type=\"number\"\n                  className=\"px-4 py-2 border focus:outline-none\"\n                  id=\"price\"\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col space-y-2\">\n              <label htmlFor=\"description\">Product Description *</label>\n              <textarea\n                value={fData.pDescription}\n                onChange={(e) =>\n                  setFdata({\n                    ...fData,\n                    error: false,\n                    success: false,\n                    pDescription: e.target.value,\n                  })\n                }\n                className=\"px-4 py-2 border focus:outline-none\"\n                name=\"description\"\n                id=\"description\"\n                cols={5}\n                rows={2}\n              />\n            </div>\n            {/* Most Important part for uploading multiple image */}\n            <div className=\"flex flex-col mt-4\">\n              <label htmlFor=\"image\">Product Images *</label>\n              <span className=\"text-gray-600 text-xs\">Must need 2 images</span>\n              <input\n                onChange={(e) =>\n                  setFdata({\n                    ...fData,\n                    error: false,\n                    success: false,\n                    pImage: [...e.target.files],\n                  })\n                }\n                type=\"file\"\n                accept=\".jpg, .jpeg, .png\"\n                className=\"px-4 py-2 border focus:outline-none\"\n                id=\"image\"\n                multiple\n              />\n            </div>\n            {/* Most Important part for uploading multiple image */}\n            <div className=\"flex space-x-1 py-4\">\n              <div className=\"w-1/2 flex flex-col space-y-1\">\n                <label htmlFor=\"status\">Product Status *</label>\n                <select\n                  value={fData.pStatus}\n                  onChange={(e) =>\n                    setFdata({\n                      ...fData,\n                      error: false,\n                      success: false,\n                      pStatus: e.target.value,\n                    })\n                  }\n                  name=\"status\"\n                  className=\"px-4 py-2 border focus:outline-none\"\n                  id=\"status\"\n                >\n                  <option name=\"status\" value=\"Active\">\n                    Active\n                  </option>\n                  <option name=\"status\" value=\"Disabled\">\n                    Disabled\n                  </option>\n                </select>\n              </div>\n              <div className=\"w-1/2 flex flex-col space-y-1\">\n                <label htmlFor=\"status\">Product Category *</label>\n                <select\n                  value={fData.pCategory}\n                  onChange={(e) =>\n                    setFdata({\n                      ...fData,\n                      error: false,\n                      success: false,\n                      pCategory: e.target.value,\n                    })\n                  }\n                  name=\"status\"\n                  className=\"px-4 py-2 border focus:outline-none\"\n                  id=\"status\"\n                >\n                  <option disabled value=\"\">\n                    Select a category\n                  </option>\n                  {categories.length > 0\n                    ? categories.map(function (elem) {\n                        return (\n                          <option name=\"status\" value={elem._id} key={elem._id}>\n                            {elem.cName}\n                          </option>\n                        );\n                      })\n                    : \"\"}\n                </select>\n              </div>\n            </div>\n            <div className=\"flex space-x-1 py-4\">\n              <div className=\"w-1/2 flex flex-col space-y-1\">\n                <label htmlFor=\"quantity\">Product in Stock *</label>\n                <input\n                  value={fData.pQuantity}\n                  onChange={(e) =>\n                    setFdata({\n                      ...fData,\n                      error: false,\n                      success: false,\n                      pQuantity: e.target.value,\n                    })\n                  }\n                  type=\"number\"\n                  className=\"px-4 py-2 border focus:outline-none\"\n                  id=\"quantity\"\n                />\n              </div>\n              <div className=\"w-1/2 flex flex-col space-y-1\">\n                <label htmlFor=\"offer\">Product Offfer (%) *</label>\n                <input\n                  value={fData.pOffer}\n                  onChange={(e) =>\n                    setFdata({\n                      ...fData,\n                      error: false,\n                      success: false,\n                      pOffer: e.target.value,\n                    })\n                  }\n                  type=\"number\"\n                  className=\"px-4 py-2 border focus:outline-none\"\n                  id=\"offer\"\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col space-y-1 w-full pb-4 md:pb-6 mt-4\">\n              <button\n                style={{ background: \"#303031\" }}\n                type=\"submit\"\n                className=\"rounded-full bg-gray-800 text-gray-100 text-lg font-medium py-2\"\n              >\n                Create product\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst AddProductModal = (props) => {\n  useEffect(() => {\n    fetchCategoryData();\n  }, []);\n\n  const [allCat, setAllCat] = useState({});\n\n  const fetchCategoryData = async () => {\n    let responseData = await getAllCategory();\n    if (responseData.Categories) {\n      setAllCat(responseData.Categories);\n    }\n  };\n\n  return (\n    <Fragment>\n      <AddProductDetail categories={allCat} />\n    </Fragment>\n  );\n};\n\nexport default AddProductModal;\n","import React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport { ProductContext } from \"./index\";\nimport { editProduct, getAllProduct } from \"./FetchApi\";\nimport { getAllCategory } from \"../categories/FetchApi\";\nconst apiURL = process.env.REACT_APP_API_URL;\n\nconst EditProductModal = (props) => {\n  const { data, dispatch } = useContext(ProductContext);\n\n  const [categories, setCategories] = useState(null);\n\n  const alert = (msg, type) => (\n    <div className={`bg-${type}-200 py-2 px-4 w-full`}>{msg}</div>\n  );\n\n  const [editformData, setEditformdata] = useState({\n    pId: \"\",\n    pName: \"\",\n    pDescription: \"\",\n    pImages: null,\n    pEditImages: null,\n    pStatus: \"\",\n    pCategory: \"\",\n    pQuantity: \"\",\n    pPrice: \"\",\n    pOffer: \"\",\n    error: false,\n    success: false,\n  });\n\n  useEffect(() => {\n    fetchCategoryData();\n  }, []);\n\n  const fetchCategoryData = async () => {\n    let responseData = await getAllCategory();\n    if (responseData.Categories) {\n      setCategories(responseData.Categories);\n    }\n  };\n\n  useEffect(() => {\n    setEditformdata({\n      pId: data.editProductModal.pId,\n      pName: data.editProductModal.pName,\n      pDescription: data.editProductModal.pDescription,\n      pImages: data.editProductModal.pImages,\n      pStatus: data.editProductModal.pStatus,\n      pCategory: data.editProductModal.pCategory,\n      pQuantity: data.editProductModal.pQuantity,\n      pPrice: data.editProductModal.pPrice,\n      pOffer: data.editProductModal.pOffer,\n    });\n  }, [data.editProductModal]);\n\n  const fetchData = async () => {\n    let responseData = await getAllProduct();\n    if (responseData && responseData.Products) {\n      dispatch({\n        type: \"fetchProductsAndChangeState\",\n        payload: responseData.Products,\n      });\n    }\n  };\n\n  const submitForm = async (e) => {\n    e.preventDefault();\n    if (!editformData.pEditImages) {\n      console.log(\"Image Not upload=============\", editformData);\n    } else {\n      console.log(\"Image uploading\");\n    }\n    try {\n      let responseData = await editProduct(editformData);\n      if (responseData.success) {\n        fetchData();\n        setEditformdata({ ...editformData, success: responseData.success });\n        setTimeout(() => {\n          return setEditformdata({\n            ...editformData,\n            success: responseData.success,\n          });\n        }, 2000);\n      } else if (responseData.error) {\n        setEditformdata({ ...editformData, error: responseData.error });\n        setTimeout(() => {\n          return setEditformdata({\n            ...editformData,\n            error: responseData.error,\n          });\n        }, 2000);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Fragment>\n      {/* Black Overlay */}\n      <div\n        onClick={(e) =>\n          dispatch({ type: \"editProductModalClose\", payload: false })\n        }\n        className={`${\n          data.editProductModal.modal ? \"\" : \"hidden\"\n        } fixed top-0 left-0 z-30 w-full h-full bg-black opacity-50`}\n      />\n      {/* End Black Overlay */}\n\n      {/* Modal Start */}\n      <div\n        className={`${\n          data.editProductModal.modal ? \"\" : \"hidden\"\n        } fixed inset-0 flex items-center z-30 justify-center overflow-auto`}\n      >\n        <div className=\"mt-32 md:mt-0 relative bg-white w-11/12 md:w-3/6 shadow-lg flex flex-col items-center space-y-4 px-4 py-4 md:px-8\">\n          <div className=\"flex items-center justify-between w-full pt-4\">\n            <span className=\"text-left font-semibold text-2xl tracking-wider\">\n              Edit Product\n            </span>\n            {/* Close Modal */}\n            <span\n              style={{ background: \"#303031\" }}\n              onClick={(e) =>\n                dispatch({ type: \"editProductModalClose\", payload: false })\n              }\n              className=\"cursor-pointer text-gray-100 py-2 px-2 rounded-full\"\n            >\n              <svg\n                className=\"w-6 h-6\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </span>\n          </div>\n          {editformData.error ? alert(editformData.error, \"red\") : \"\"}\n          {editformData.success ? alert(editformData.success, \"green\") : \"\"}\n          <form className=\"w-full\" onSubmit={(e) => submitForm(e)}>\n            <div className=\"flex space-x-1 py-4\">\n              <div className=\"w-1/2 flex flex-col space-y-1 space-x-1\">\n                <label htmlFor=\"name\">Product Name *</label>\n                <input\n                  value={editformData.pName}\n                  onChange={(e) =>\n                    setEditformdata({\n                      ...editformData,\n                      error: false,\n                      success: false,\n                      pName: e.target.value,\n                    })\n                  }\n                  className=\"px-4 py-2 border focus:outline-none\"\n                  type=\"text\"\n                />\n              </div>\n              <div className=\"w-1/2 flex flex-col space-y-1 space-x-1\">\n                <label htmlFor=\"price\">Product Price *</label>\n                <input\n                  value={editformData.pPrice}\n                  onChange={(e) =>\n                    setEditformdata({\n                      ...editformData,\n                      error: false,\n                      success: false,\n                      pPrice: e.target.value,\n                    })\n                  }\n                  type=\"number\"\n                  className=\"px-4 py-2 border focus:outline-none\"\n                  id=\"price\"\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col space-y-2\">\n              <label htmlFor=\"description\">Product Description *</label>\n              <textarea\n                value={editformData.pDescription}\n                onChange={(e) =>\n                  setEditformdata({\n                    ...editformData,\n                    error: false,\n                    success: false,\n                    pDescription: e.target.value,\n                  })\n                }\n                className=\"px-4 py-2 border focus:outline-none\"\n                name=\"description\"\n                id=\"description\"\n                cols={5}\n                rows={2}\n              />\n            </div>\n            {/* Most Important part for uploading multiple image */}\n            <div className=\"flex flex-col mt-4\">\n              <label htmlFor=\"image\">Product Images *</label>\n              {editformData.pImages ? (\n                <div className=\"flex space-x-1\">\n                  <img\n                    className=\"h-16 w-16 object-cover\"\n                    src={`${apiURL}/uploads/products/${editformData.pImages[0]}`}\n                    alt=\"productImage\"\n                  />\n                  <img\n                    className=\"h-16 w-16 object-cover\"\n                    src={`${apiURL}/uploads/products/${editformData.pImages[1]}`}\n                    alt=\"productImage\"\n                  />\n                </div>\n              ) : (\n                \"\"\n              )}\n              <span className=\"text-gray-600 text-xs\">Must need 2 images</span>\n              <input\n                onChange={(e) =>\n                  setEditformdata({\n                    ...editformData,\n                    error: false,\n                    success: false,\n                    pEditImages: [...e.target.files],\n                  })\n                }\n                type=\"file\"\n                accept=\".jpg, .jpeg, .png\"\n                className=\"px-4 py-2 border focus:outline-none\"\n                id=\"image\"\n                multiple\n              />\n            </div>\n            {/* Most Important part for uploading multiple image */}\n            <div className=\"flex space-x-1 py-4\">\n              <div className=\"w-1/2 flex flex-col space-y-1\">\n                <label htmlFor=\"status\">Product Status *</label>\n                <select\n                  value={editformData.pStatus}\n                  onChange={(e) =>\n                    setEditformdata({\n                      ...editformData,\n                      error: false,\n                      success: false,\n                      pStatus: e.target.value,\n                    })\n                  }\n                  name=\"status\"\n                  className=\"px-4 py-2 border focus:outline-none\"\n                  id=\"status\"\n                >\n                  <option name=\"status\" value=\"Active\">\n                    Active\n                  </option>\n                  <option name=\"status\" value=\"Disabled\">\n                    Disabled\n                  </option>\n                </select>\n              </div>\n              <div className=\"w-1/2 flex flex-col space-y-1\">\n                <label htmlFor=\"status\">Product Category *</label>\n                <select\n                  onChange={(e) =>\n                    setEditformdata({\n                      ...editformData,\n                      error: false,\n                      success: false,\n                      pCategory: e.target.value,\n                    })\n                  }\n                  name=\"status\"\n                  className=\"px-4 py-2 border focus:outline-none\"\n                  id=\"status\"\n                >\n                  <option disabled value=\"\">\n                    Select a category\n                  </option>\n                  {categories && categories.length > 0\n                    ? categories.map((elem) => {\n                        return (\n                          <Fragment key={elem._id}>\n                            {editformData.pCategory._id &&\n                            editformData.pCategory._id === elem._id ? (\n                              <option\n                                name=\"status\"\n                                value={elem._id}\n                                key={elem._id}\n                                selected\n                              >\n                                {elem.cName}\n                              </option>\n                            ) : (\n                              <option\n                                name=\"status\"\n                                value={elem._id}\n                                key={elem._id}\n                              >\n                                {elem.cName}\n                              </option>\n                            )}\n                          </Fragment>\n                        );\n                      })\n                    : \"\"}\n                </select>\n              </div>\n            </div>\n            <div className=\"flex space-x-1 py-4\">\n              <div className=\"w-1/2 flex flex-col space-y-1\">\n                <label htmlFor=\"quantity\">Product in Stock *</label>\n                <input\n                  value={editformData.pQuantity}\n                  onChange={(e) =>\n                    setEditformdata({\n                      ...editformData,\n                      error: false,\n                      success: false,\n                      pQuantity: e.target.value,\n                    })\n                  }\n                  type=\"number\"\n                  className=\"px-4 py-2 border focus:outline-none\"\n                  id=\"quantity\"\n                />\n              </div>\n              <div className=\"w-1/2 flex flex-col space-y-1\">\n                <label htmlFor=\"offer\">Product Offfer (%) *</label>\n                <input\n                  value={editformData.pOffer}\n                  onChange={(e) =>\n                    setEditformdata({\n                      ...editformData,\n                      error: false,\n                      success: false,\n                      pOffer: e.target.value,\n                    })\n                  }\n                  type=\"number\"\n                  className=\"px-4 py-2 border focus:outline-none\"\n                  id=\"offer\"\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col space-y-1 w-full pb-4 md:pb-6 mt-4\">\n              <button\n                style={{ background: \"#303031\" }}\n                type=\"submit\"\n                className=\"rounded-full bg-gray-800 text-gray-100 text-lg font-medium py-2\"\n              >\n                Update product\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default EditProductModal;\n","import React, { Fragment, useContext } from \"react\";\nimport { ProductContext } from \"./index\";\nimport AddProductModal from \"./AddProductModal\";\nimport EditProductModal from \"./EditProductModal\";\n\nconst ProductMenu = (props) => {\n  const { dispatch } = useContext(ProductContext);\n  return (\n    <Fragment>\n      <div className=\"col-span-1 flex justify-between items-center\">\n        <div className=\"flex items-center\">\n          {/* It's open the add product modal */}\n          <span\n            style={{ background: \"#303031\" }}\n            onClick={(e) =>\n              dispatch({ type: \"addProductModal\", payload: true })\n            }\n            className=\"rounded-full cursor-pointer p-2 bg-gray-800 flex items-center text-gray-100 text-sm font-semibold uppercase\"\n          >\n            <svg\n              className=\"w-6 h-6 text-gray-100 mr-2\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n            Add Product\n          </span>\n        </div>\n        <AddProductModal />\n        <EditProductModal />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ProductMenu;\n","import React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport { getAllProduct, deleteProduct } from \"./FetchApi\";\nimport moment from \"moment\";\nimport { ProductContext } from \"./index\";\n\nconst apiURL = process.env.REACT_APP_API_URL;\n\nconst AllProduct = (props) => {\n  const { data, dispatch } = useContext(ProductContext);\n  const { products } = data;\n\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    setLoading(true);\n    let responseData = await getAllProduct();\n    setTimeout(() => {\n      if (responseData && responseData.Products) {\n        dispatch({\n          type: \"fetchProductsAndChangeState\",\n          payload: responseData.Products,\n        });\n        setLoading(false);\n      }\n    }, 1000);\n  };\n\n  const deleteProductReq = async (pId) => {\n    let deleteC = await deleteProduct(pId);\n    if (deleteC.error) {\n      console.log(deleteC.error);\n    } else if (deleteC.success) {\n      console.log(deleteC.success);\n      fetchData();\n    }\n  };\n\n  /* This method call the editmodal & dispatch product context */\n  const editProduct = (pId, product, type) => {\n    if (type) {\n      dispatch({\n        type: \"editProductModalOpen\",\n        product: { ...product, pId: pId },\n      });\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <svg\n          className=\"w-12 h-12 animate-spin text-gray-600\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n          ></path>\n        </svg>\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <div className=\"col-span-1 overflow-auto bg-white shadow-lg p-4\">\n        <table className=\"table-auto border w-full my-2\">\n          <thead>\n            <tr>\n              <th className=\"px-4 py-2 border\">Product</th>\n              <th className=\"px-4 py-2 border\">Description</th>\n              <th className=\"px-4 py-2 border\">Image</th>\n              <th className=\"px-4 py-2 border\">Status</th>\n              <th className=\"px-4 py-2 border\">Stock</th>\n              <th className=\"px-4 py-2 border\">Category</th>\n              <th className=\"px-4 py-2 border\">Offer</th>\n              <th className=\"px-4 py-2 border\">Created at</th>\n              <th className=\"px-4 py-2 border\">Updated at</th>\n              <th className=\"px-4 py-2 border\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {products && products.length > 0 ? (\n              products.map((item, key) => {\n                return (\n                  <ProductTable\n                    product={item}\n                    editProduct={(pId, product, type) =>\n                      editProduct(pId, product, type)\n                    }\n                    deleteProduct={(pId) => deleteProductReq(pId)}\n                    key={key}\n                  />\n                );\n              })\n            ) : (\n              <tr>\n                <td\n                  colSpan=\"10\"\n                  className=\"text-xl text-center font-semibold py-8\"\n                >\n                  No product found\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n        <div className=\"text-sm text-gray-600 mt-2\">\n          Total {products && products.length} product found\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\n/* Single Product Component */\nconst ProductTable = ({ product, deleteProduct, editProduct }) => {\n  return (\n    <Fragment>\n      <tr>\n        <td className=\"p-2 text-left\">\n          {product.pName.length > 15\n            ? product.pDescription.substring(1, 15) + \"...\"\n            : product.pName}\n        </td>\n        <td className=\"p-2 text-left\">\n          {product.pDescription.slice(0, 15)}...\n        </td>\n        <td className=\"p-2 text-center\">\n          <img\n            className=\"w-12 h-12 object-cover object-center\"\n            src={`${apiURL}/uploads/products/${product.pImages[0]}`}\n            alt=\"pic\"\n          />\n        </td>\n        <td className=\"p-2 text-center\">\n          {product.pStatus === \"Active\" ? (\n            <span className=\"bg-green-200 rounded-full text-center text-xs px-2 font-semibold\">\n              {product.pStatus}\n            </span>\n          ) : (\n            <span className=\"bg-red-200 rounded-full text-center text-xs px-2 font-semibold\">\n              {product.pStatus}\n            </span>\n          )}\n        </td>\n        <td className=\"p-2 text-center\">{product.pQuantity}</td>\n        <td className=\"p-2 text-center\">{product.pCategory.cName}</td>\n        <td className=\"p-2 text-center\">{product.pOffer}</td>\n        <td className=\"p-2 text-center\">\n          {moment(product.createdAt).format(\"lll\")}\n        </td>\n        <td className=\"p-2 text-center\">\n          {moment(product.updatedAt).format(\"lll\")}\n        </td>\n        <td className=\"p-2 flex items-center justify-center\">\n          <span\n            onClick={(e) => editProduct(product._id, product, true)}\n            className=\"cursor-pointer hover:bg-gray-200 rounded-lg p-2 mx-1\"\n          >\n            <svg\n              className=\"w-6 h-6 fill-current text-green-500\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\n              <path\n                fillRule=\"evenodd\"\n                d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </span>\n          <span\n            onClick={(e) => deleteProduct(product._id)}\n            className=\"cursor-pointer hover:bg-gray-200 rounded-lg p-2 mx-1\"\n          >\n            <svg\n              className=\"w-6 h-6 fill-current text-red-500\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </span>\n        </td>\n      </tr>\n    </Fragment>\n  );\n};\n\nexport default AllProduct;\n","export const productState = {\n  products: null,\n  addProductModal: false,\n  editProductModal: {\n    modal: false,\n    pId: \"\",\n    pName: \"\",\n    pDescription: \"\",\n    pImages: null,\n    pStatus: \"\",\n    pCategory: \"\",\n    pQuantity: \"\",\n    pPrice: \"\",\n    pOffer: \"\",\n  },\n};\n\nexport const productReducer = (state, action) => {\n  switch (action.type) {\n    /* Get all product */\n    case \"fetchProductsAndChangeState\":\n      return {\n        ...state,\n        products: action.payload,\n      };\n    /* Create a product */\n    case \"addProductModal\":\n      return {\n        ...state,\n        addProductModal: action.payload,\n      };\n    /* Edit a product */\n    case \"editProductModalOpen\":\n      return {\n        ...state,\n        editProductModal: {\n          modal: true,\n          pId: action.product.pId,\n          pName: action.product.pName,\n          pDescription: action.product.pDescription,\n          pImages: action.product.pImages,\n          pStatus: action.product.pStatus,\n          pCategory: action.product.pCategory,\n          pQuantity: action.product.pQuantity,\n          pPrice: action.product.pPrice,\n          pOffer: action.product.pOffer,\n        },\n      };\n    case \"editProductModalClose\":\n      return {\n        ...state,\n        editProductModal: {\n          modal: false,\n          pId: \"\",\n          pName: \"\",\n          pDescription: \"\",\n          pImages: null,\n          pStatus: \"\",\n          pCategory: \"\",\n          pQuantity: \"\",\n          pPrice: \"\",\n          pOffer: \"\",\n        },\n      };\n    default:\n      return state;\n  }\n};\n","import React, { Fragment, createContext, useReducer } from \"react\";\nimport AdminLayout from \"../layout\";\nimport ProductMenu from \"./ProductMenu\";\nimport ProductTable from \"./ProductTable\";\nimport { productState, productReducer } from \"./ProductContext\";\n\n/* This context manage all of the products component's data */\nexport const ProductContext = createContext();\n\nconst ProductComponent = () => {\n  return (\n    <div className=\"grid grid-cols-1 space-y-4 p-4\">\n      <ProductMenu />\n      <ProductTable />\n    </div>\n  );\n};\n\nconst Products = (props) => {\n  /* To use useReducer make sure that reducer is the first arg */\n  const [data, dispatch] = useReducer(productReducer, productState);\n\n  return (\n    <Fragment>\n      <ProductContext.Provider value={{ data, dispatch }}>\n        <AdminLayout children={<ProductComponent />} />\n      </ProductContext.Provider>\n    </Fragment>\n  );\n};\n\nexport default Products;\n","import React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport { OrderContext } from \"./index\";\nimport { getAllOrder, editCategory } from \"./FetchApi\";\n\nconst UpdateOrderModal = (props) => {\n  const { data, dispatch } = useContext(OrderContext);\n\n  const [status, setStatus] = useState(\"\");\n\n  const [oId, setOid] = useState(\"\");\n\n  useEffect(() => {\n    setOid(data.updateOrderModal.oId);\n    setStatus(data.updateOrderModal.status);\n  }, [data.updateOrderModal.modal]);\n\n  const fetchData = async () => {\n    let responseData = await getAllOrder();\n    if (responseData.Orders) {\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: responseData.Orders,\n      });\n    }\n  };\n\n  const submitForm = async () => {\n    dispatch({ type: \"loading\", payload: true });\n    let responseData = await editCategory(oId, status);\n    if (responseData.error) {\n      dispatch({ type: \"loading\", payload: false });\n    } else if (responseData.success) {\n      console.log(responseData.success);\n      dispatch({ type: \"updateOrderModalClose\" });\n      fetchData();\n      dispatch({ type: \"loading\", payload: false });\n    }\n  };\n\n  return (\n    <Fragment>\n      {/* Black Overlay */}\n      <div\n        onClick={(e) => dispatch({ type: \"updateOrderModalClose\" })}\n        className={`${\n          data.updateOrderModal.modal ? \"\" : \"hidden\"\n        } fixed top-0 left-0 z-30 w-full h-full bg-black opacity-50`}\n      />\n      {/* End Black Overlay */}\n\n      {/* Modal Start */}\n      <div\n        className={`${\n          data.updateOrderModal.modal ? \"\" : \"hidden\"\n        } fixed inset-0 m-4  flex items-center z-30 justify-center`}\n      >\n        <div className=\"relative bg-white w-11/12 md:w-3/6 shadow-lg flex flex-col items-center space-y-4  overflow-y-auto px-4 py-4 md:px-8\">\n          <div className=\"flex items-center justify-between w-full pt-4\">\n            <span className=\"text-left font-semibold text-2xl tracking-wider\">\n              Update Order\n            </span>\n            {/* Close Modal */}\n            <span\n              style={{ background: \"#303031\" }}\n              onClick={(e) => dispatch({ type: \"updateOrderModalClose\" })}\n              className=\"cursor-pointer text-gray-100 py-2 px-2 rounded-full\"\n            >\n              <svg\n                className=\"w-6 h-6\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </span>\n          </div>\n          <div className=\"flex flex-col space-y-1 w-full\">\n            <label htmlFor=\"status\">Order Status</label>\n            <select\n              value={status}\n              name=\"status\"\n              onChange={(e) => setStatus(e.target.value)}\n              className=\"px-4 py-2 border focus:outline-none\"\n              id=\"status\"\n            >\n              <option name=\"status\" value=\"Not processed\">\n                Not processed\n              </option>\n              <option name=\"status\" value=\"Processing\">\n                Processing\n              </option>\n              <option name=\"status\" value=\"Shipped\">\n                Shipped\n              </option>\n              <option name=\"status\" value=\"Delivered\">\n                Delivered\n              </option>\n              <option name=\"status\" value=\"Cancelled\">\n                Cancelled\n              </option>\n            </select>\n          </div>\n          <div className=\"flex flex-col space-y-1 w-full pb-4 md:pb-6\">\n            <button\n              style={{ background: \"#303031\" }}\n              onClick={(e) => submitForm()}\n              className=\"rounded-full bg-gray-800 text-gray-100 text-lg font-medium py-2\"\n            >\n              Update category\n            </button>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UpdateOrderModal;\n","import React, { Fragment } from \"react\";\n\nconst SearchFilter = (props) => {\n  return (\n    <Fragment>\n      <div className=\"rounded-full flex items-center justify-between overflow-hidden\">\n        <span style={{ background: \"#303031\" }} className=\"py-2 px-3\">\n          <svg\n            className=\"rounded-l-full w-6 h-6 text-gray-100\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        </span>\n        <input\n          placeholder=\"Transaction id...\"\n          className=\"py-2 px-2 focus:outline-none rounded-r-full w-full\"\n          type=\"text\"\n        />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default SearchFilter;\n","import { getAllOrder, deleteOrder } from \"./FetchApi\";\n\nexport const fetchData = async (dispatch) => {\n  dispatch({ type: \"loading\", payload: true });\n  let responseData = await getAllOrder();\n  setTimeout(() => {\n    if (responseData && responseData.Orders) {\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: responseData.Orders,\n      });\n      dispatch({ type: \"loading\", payload: false });\n    }\n  }, 1000);\n};\n\n/* This method call the editmodal & dispatch category context */\nexport const editOrderReq = (oId, type, status, dispatch) => {\n  if (type) {\n    console.log(\"click update\");\n    dispatch({ type: \"updateOrderModalOpen\", oId: oId, status: status });\n  }\n};\n\nexport const deleteOrderReq = async (oId, dispatch) => {\n  let responseData = await deleteOrder(oId);\n  console.log(responseData);\n  if (responseData && responseData.success) {\n    fetchData(dispatch);\n  }\n};\n\n/* Filter All Order */\nexport const filterOrder = async (\n  type,\n  data,\n  dispatch,\n  dropdown,\n  setDropdown\n) => {\n  let responseData = await getAllOrder();\n  if (responseData && responseData.Orders) {\n    let newData;\n    if (type === \"All\") {\n      dispatch({\n        type: \"fetchOrderAndChangeState\",\n        payload: responseData.Orders,\n      });\n      setDropdown(!dropdown);\n    } else if (type === \"Not processed\") {\n      newData = responseData.Orders.filter(\n        (item) => item.status === \"Not processed\"\n      );\n      dispatch({ type: \"fetchOrderAndChangeState\", payload: newData });\n      setDropdown(!dropdown);\n    } else if (type === \"Processing\") {\n      newData = responseData.Orders.filter(\n        (item) => item.status === \"Processing\"\n      );\n      dispatch({ type: \"fetchOrderAndChangeState\", payload: newData });\n      setDropdown(!dropdown);\n    } else if (type === \"Shipped\") {\n      newData = responseData.Orders.filter((item) => item.status === \"Shipped\");\n      dispatch({ type: \"fetchOrderAndChangeState\", payload: newData });\n      setDropdown(!dropdown);\n    } else if (type === \"Delivered\") {\n      newData = responseData.Orders.filter(\n        (item) => item.status === \"Delivered\"\n      );\n      dispatch({ type: \"fetchOrderAndChangeState\", payload: newData });\n      setDropdown(!dropdown);\n    } else if (type === \"Cancelled\") {\n      newData = responseData.Orders.filter(\n        (item) => item.status === \"Cancelled\"\n      );\n      dispatch({ type: \"fetchOrderAndChangeState\", payload: newData });\n      setDropdown(!dropdown);\n    }\n  }\n};\n","import React, { Fragment, useState, useContext } from \"react\";\nimport { OrderContext } from \"./index\";\nimport UpdateOrderModal from \"./UpdateOrderModal\";\nimport SearchFilter from \"./SearchFilter\";\nimport { filterOrder } from \"./Actions\";\n\nconst OrderMenu = (props) => {\n  const { data, dispatch } = useContext(OrderContext);\n  const [dropdown, setDropdown] = useState(false);\n  return (\n    <Fragment>\n      <div className=\"col-span-1 flex items-center\">\n        <div className=\"flex flex-col space-y-4 md:flex-row md:justify-between md:items-center md:space-y-0 w-full\">\n          {/* It's open the add order modal */}\n          <div\n            style={{ background: \"#303031\" }}\n            className=\"relative rounded-full text-gray-100 text-sm font-semibold uppercase\"\n          >\n            <div\n              onClick={(e) => setDropdown(!dropdown)}\n              className=\"flex items-center cursor-pointer rounded-full overflow-hidden p-2 justify-center\"\n            >\n              <svg\n                className=\"w-6 h-6 text-gray-100 mr-2\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 20 20\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path d=\"M5 4a1 1 0 00-2 0v7.268a2 2 0 000 3.464V16a1 1 0 102 0v-1.268a2 2 0 000-3.464V4zM11 4a1 1 0 10-2 0v1.268a2 2 0 000 3.464V16a1 1 0 102 0V8.732a2 2 0 000-3.464V4zM16 3a1 1 0 011 1v7.268a2 2 0 010 3.464V16a1 1 0 11-2 0v-1.268a2 2 0 010-3.464V4a1 1 0 011-1z\" />\n              </svg>\n              <span className=\"pr-2\">Filter</span>\n            </div>\n            <div\n              style={{ background: \"#303031\" }}\n              className={`${\n                dropdown ? \"\" : \"hidden\"\n              } absolute top-0 left-0 mt-12 rounded-lg overflow-hidden w-full md:w-48 flex flex-col z-10`}\n            >\n              <span\n                onClick={(e) =>\n                  filterOrder(\"All\", data, dispatch, dropdown, setDropdown)\n                }\n                className=\"px-4 py-2 hover:bg-black text-center cursor-pointer\"\n              >\n                All\n              </span>\n              <span\n                onClick={(e) =>\n                  filterOrder(\n                    \"Not processed\",\n                    data,\n                    dispatch,\n                    dropdown,\n                    setDropdown\n                  )\n                }\n                className=\"px-4 py-2 hover:bg-black text-center cursor-pointer\"\n              >\n                Not processed\n              </span>\n              <span\n                onClick={(e) =>\n                  filterOrder(\n                    \"Processing\",\n                    data,\n                    dispatch,\n                    dropdown,\n                    setDropdown\n                  )\n                }\n                className=\"px-4 py-2 hover:bg-black text-center cursor-pointer\"\n              >\n                Processing\n              </span>\n              <span\n                onClick={(e) =>\n                  filterOrder(\"Shipped\", data, dispatch, dropdown, setDropdown)\n                }\n                className=\"px-4 py-2 hover:bg-black text-center cursor-pointer\"\n              >\n                Shipped\n              </span>\n              <span\n                onClick={(e) =>\n                  filterOrder(\n                    \"Delivered\",\n                    data,\n                    dispatch,\n                    dropdown,\n                    setDropdown\n                  )\n                }\n                className=\"px-4 py-2 hover:bg-black text-center cursor-pointer\"\n              >\n                Delivered\n              </span>\n              <span\n                onClick={(e) =>\n                  filterOrder(\n                    \"Cancelled\",\n                    data,\n                    dispatch,\n                    dropdown,\n                    setDropdown\n                  )\n                }\n                className=\"px-4 py-2 hover:bg-black text-center cursor-pointer\"\n              >\n                Cancelled\n              </span>\n            </div>\n          </div>\n          <div>\n            <SearchFilter />\n          </div>\n        </div>\n        {/*<AddCategoryModal/>*/}\n        <UpdateOrderModal />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default OrderMenu;\n","import React, { Fragment, useContext, useEffect } from 'react';\nimport moment from 'moment';\n\nimport { OrderContext } from './index';\nimport { fetchData, editOrderReq, deleteOrderReq } from './Actions';\n\nconst apiURL = process.env.REACT_APP_API_URL;\n\nconst AllCategory = (props) => {\n    const { data, dispatch } = useContext(OrderContext);\n    const { orders, loading } = data;\n\n    useEffect(() => {\n        fetchData(dispatch);\n    }, []);\n\n    if (loading) {\n        return (\n            <div className=\"flex items-center justify-center p-8\">\n                <svg\n                    className=\"w-12 h-12 animate-spin text-gray-600\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"2\"\n                        d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                    ></path>\n                </svg>\n            </div>\n        );\n    }\n    return (\n        <Fragment>\n            <div className=\"col-span-1 overflow-auto bg-white shadow-lg p-4\">\n                <table className=\"table-auto border w-full my-2\">\n                    <thead>\n                        <tr>\n                            <th className=\"px-4 py-2 border\">Products</th>\n                            <th className=\"px-4 py-2 border\">Status</th>\n                            <th className=\"px-4 py-2 border\">Total</th>\n                            <th className=\"px-4 py-2 border\">Transaction Id</th>\n                            <th className=\"px-4 py-2 border\">Customer</th>\n                            <th className=\"px-4 py-2 border\">Email</th>\n                            <th className=\"px-4 py-2 border\">Phone</th>\n                            <th className=\"px-4 py-2 border\">Address</th>\n                            <th className=\"px-4 py-2 border\">Created at</th>\n                            <th className=\"px-4 py-2 border\">Updated at</th>\n                            <th className=\"px-4 py-2 border\">Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orders && orders.length > 0 ? (\n                            orders.map((item, i) => {\n                                return (\n                                    <CategoryTable\n                                        key={i}\n                                        order={item}\n                                        editOrder={(oId, type, status) =>\n                                            editOrderReq(\n                                                oId,\n                                                type,\n                                                status,\n                                                dispatch\n                                            )\n                                        }\n                                    />\n                                );\n                            })\n                        ) : (\n                            <tr>\n                                <td\n                                    colSpan=\"12\"\n                                    className=\"text-xl text-center font-semibold py-8\"\n                                >\n                                    No order found\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n                <div className=\"text-sm text-gray-600 mt-2\">\n                    Total {orders && orders.length} order found\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\n/* Single Category Component */\nconst CategoryTable = ({ order, editOrder }) => {\n    const { dispatch } = useContext(OrderContext);\n\n    return (\n        <Fragment>\n            <tr className=\"border-b\">\n                <td className=\"w-48 hover:bg-gray-200 p-2 flex flex-col space-y-1\">\n                    {order.allProduct.map((product, i) => {\n                        return (\n                            <span\n                                className=\"block flex items-center space-x-2\"\n                                key={i}\n                            >\n                                <img\n                                    className=\"w-8 h-8 object-cover object-center\"\n                                    // src={`${apiURL}/uploads/products/${product.id.pImages[0]}`}\n                                    alt=\"productImage\"\n                                />\n                                <span>{product.id.pName}</span>\n                                <span>{product.quantitiy}x</span>\n                            </span>\n                        );\n                    })}\n                </td>\n                <td className=\"hover:bg-gray-200 p-2 text-center cursor-default\">\n                    {order.status === 'Not processed' && (\n                        <span className=\"block text-red-600 rounded-full text-center text-xs px-2 font-semibold\">\n                            {order.status}\n                        </span>\n                    )}\n                    {order.status === 'Processing' && (\n                        <span className=\"block text-yellow-600 rounded-full text-center text-xs px-2 font-semibold\">\n                            {order.status}\n                        </span>\n                    )}\n                    {order.status === 'Shipped' && (\n                        <span className=\"block text-blue-600 rounded-full text-center text-xs px-2 font-semibold\">\n                            {order.status}\n                        </span>\n                    )}\n                    {order.status === 'Delivered' && (\n                        <span className=\"block text-green-600 rounded-full text-center text-xs px-2 font-semibold\">\n                            {order.status}\n                        </span>\n                    )}\n                    {order.status === 'Cancelled' && (\n                        <span className=\"block text-red-600 rounded-full text-center text-xs px-2 font-semibold\">\n                            {order.status}\n                        </span>\n                    )}\n                </td>\n                <td className=\"hover:bg-gray-200 p-2 text-center\">\n                    ${order.amount}.00\n                </td>\n                <td className=\"hover:bg-gray-200 p-2 text-center\">\n                    {order.transactionId}\n                </td>\n                <td className=\"hover:bg-gray-200 p-2 text-center\">\n                    {order.user.name}\n                </td>\n                <td className=\"hover:bg-gray-200 p-2 text-center\">\n                    {order.user.email}\n                </td>\n                <td className=\"hover:bg-gray-200 p-2 text-center\">\n                    {order.phone}\n                </td>\n                <td className=\"hover:bg-gray-200 p-2 text-center\">\n                    {order.address}\n                </td>\n                <td className=\"hover:bg-gray-200 p-2 text-center\">\n                    {moment(order.createdAt).format('lll')}\n                </td>\n                <td className=\"hover:bg-gray-200 p-2 text-center\">\n                    {moment(order.updatedAt).format('lll')}\n                </td>\n                <td className=\"p-2 flex items-center justify-center\">\n                    <span\n                        onClick={(e) =>\n                            editOrder(order._id, true, order.status)\n                        }\n                        className=\"cursor-pointer hover:bg-gray-200 rounded-lg p-2 mx-1\"\n                    >\n                        <svg\n                            className=\"w-6 h-6 fill-current text-green-500\"\n                            fill=\"currentColor\"\n                            viewBox=\"0 0 20 20\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\n                            <path\n                                fillRule=\"evenodd\"\n                                d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\n                                clipRule=\"evenodd\"\n                            />\n                        </svg>\n                    </span>\n                    <span\n                        onClick={(e) => deleteOrderReq(order._id, dispatch)}\n                        className=\"cursor-pointer hover:bg-gray-200 rounded-lg p-2 mx-1\"\n                    >\n                        <svg\n                            className=\"w-6 h-6 text-red-500\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            viewBox=\"0 0 24 24\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth={2}\n                                d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                            />\n                        </svg>\n                    </span>\n                </td>\n            </tr>\n        </Fragment>\n    );\n};\n\nexport default AllCategory;\n","export const orderState = {\n  orders: [],\n  addCategoryModal: false,\n  updateOrderModal: {\n    modal: false,\n    oId: null,\n    status: \"\",\n  },\n  loading: false,\n};\n\nexport const orderReducer = (state, action) => {\n  switch (action.type) {\n    /* Get all category */\n    case \"fetchOrderAndChangeState\":\n      return {\n        ...state,\n        orders: action.payload,\n      };\n    /* Create a category */\n    case \"addCategoryModal\":\n      return {\n        ...state,\n        addCategoryModal: action.payload,\n      };\n    /* Edit a category */\n    case \"updateOrderModalOpen\":\n      return {\n        ...state,\n        updateOrderModal: {\n          modal: true,\n          oId: action.oId,\n          status: action.status,\n        },\n      };\n    case \"updateOrderModalClose\":\n      return {\n        ...state,\n        updateOrderModal: {\n          modal: false,\n          oId: null,\n          status: \"\",\n        },\n      };\n    case \"loading\":\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { Fragment, createContext, useReducer } from \"react\";\nimport AdminLayout from \"../layout\";\nimport OrderMenu from \"./OrderMenu\";\nimport AllOrders from \"./AllOrders\";\nimport { orderState, orderReducer } from \"./OrderContext\";\n\n/* This context manage all of the orders component's data */\nexport const OrderContext = createContext();\n\nconst OrderComponent = () => {\n  return (\n    <div className=\"grid grid-cols-1 space-y-4 p-4\">\n      <OrderMenu />\n      <AllOrders />\n    </div>\n  );\n};\n\nconst Orders = (props) => {\n  const [data, dispatch] = useReducer(orderReducer, orderState);\n  return (\n    <Fragment>\n      <OrderContext.Provider value={{ data, dispatch }}>\n        <AdminLayout children={<OrderComponent />} />\n      </OrderContext.Provider>\n    </Fragment>\n  );\n};\n\nexport default Orders;\n","import axios from \"axios\";\nconst apiURL = process.env.REACT_APP_API_URL;\n\nexport const getUserById = async (uId) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/user/signle-user`, { uId });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePersonalInformationFetch = async (userData) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/user/edit-user`, userData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getOrderByUser = async (uId) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/order/order-by-user`, { uId });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePassword = async (formData) => {\n  try {\n    let res = await axios.post(`${apiURL}/api/user/change-password`, formData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  getUserById,\n  updatePersonalInformationFetch,\n  getOrderByUser,\n  updatePassword,\n} from \"./FetchApi\";\n\nexport const logout = () => {\n  localStorage.removeItem(\"jwt\");\n  localStorage.removeItem(\"cart\");\n  localStorage.removeItem(\"wishList\");\n  window.location.href = \"/\";\n};\n\nexport const fetchData = async (dispatch) => {\n  dispatch({ type: \"loading\", payload: true });\n  let userId = JSON.parse(localStorage.getItem(\"jwt\"))\n    ? JSON.parse(localStorage.getItem(\"jwt\")).user._id\n    : \"\";\n  try {\n    let responseData = await getUserById(userId);\n    setTimeout(() => {\n      if (responseData && responseData.User) {\n        dispatch({ type: \"userDetails\", payload: responseData.User });\n        dispatch({ type: \"loading\", payload: false });\n      }\n    }, 500);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchOrderByUser = async (dispatch) => {\n  dispatch({ type: \"loading\", payload: true });\n  let userId = JSON.parse(localStorage.getItem(\"jwt\"))\n    ? JSON.parse(localStorage.getItem(\"jwt\")).user._id\n    : \"\";\n  try {\n    let responseData = await getOrderByUser(userId);\n    setTimeout(() => {\n      if (responseData && responseData.Order) {\n        console.log(responseData);\n        dispatch({ type: \"OrderByUser\", payload: responseData.Order });\n        dispatch({ type: \"loading\", payload: false });\n      }\n    }, 500);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePersonalInformationAction = async (dispatch, fData) => {\n  const formData = {\n    uId: fData.id,\n    name: fData.name,\n    phoneNumber: fData.phone,\n  };\n  dispatch({ type: \"loading\", payload: true });\n  try {\n    let responseData = await updatePersonalInformationFetch(formData);\n    setTimeout(() => {\n      if (responseData && responseData.success) {\n        dispatch({ type: \"loading\", payload: false });\n        fetchData(dispatch);\n      }\n    }, 500);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleChangePassword = async (fData, setFdata, dispatch) => {\n  if (!fData.newPassword || !fData.oldPassword || !fData.confirmPassword) {\n    setFdata({\n      ...fData,\n      error: \"Please provide your all password and a new password\",\n    });\n  } else if (fData.newPassword !== fData.confirmPassword) {\n    setFdata({ ...fData, error: \"Password does't match\" });\n  } else {\n    const formData = {\n      uId: JSON.parse(localStorage.getItem(\"jwt\")).user._id,\n      oldPassword: fData.oldPassword,\n      newPassword: fData.newPassword,\n    };\n    dispatch({ type: \"loading\", payload: true });\n    try {\n      let responseData = await updatePassword(formData);\n      if (responseData && responseData.success) {\n        setFdata({\n          ...fData,\n          success: responseData.success,\n          error: \"\",\n          oldPassword: \"\",\n          newPassword: \"\",\n          confirmPassword: \"\",\n        });\n        dispatch({ type: \"loading\", payload: false });\n      } else if (responseData.error) {\n        dispatch({ type: \"loading\", payload: false });\n        setFdata({\n          ...fData,\n          error: responseData.error,\n          success: \"\",\n          oldPassword: \"\",\n          newPassword: \"\",\n          confirmPassword: \"\",\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};\n","import React, { Fragment, useContext } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { logout } from \"./Action\";\nimport { DashboardUserContext } from \"./Layout\";\n\nconst Sidebar = (props) => {\n  const { data } = useContext(DashboardUserContext);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  return (\n    <Fragment>\n      <div className=\"flex flex-col w-full space-y-4 md:w-3/12 font-medium\">\n        <div\n          style={{ background: \"#303031\" }}\n          className=\"flex items-center space-x-2 rounded shadow p-2 text-gray-100\"\n        >\n          <svg\n            className=\"cursor-pointer w-16 h-16 text-gray-100\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n          <div className=\"flex flex-col w-full\">\n            <span className=\"text-sm\">Hello,</span>\n            <span className=\"text-lg\">\n              {data.userDetails ? data.userDetails.name : \"\"}\n            </span>\n          </div>\n        </div>\n        <div className=\"shadow hidden md:block w-full flex flex-col\">\n          <div\n            onClick={(e) => history.push(\"/user/orders\")}\n            className={`${\n              location.pathname === \"/user/orders\"\n                ? \"border-r-4 border-yellow-700 bg-gray-200\"\n                : \"\"\n            }  px-4 py-4 hover:bg-gray-200 cursor-pointer`}\n          >\n            My Orders\n          </div>\n          <hr />\n          <div\n            onClick={(e) => history.push(\"/user/profile\")}\n            className={`${\n              location.pathname === \"/user/profile\"\n                ? \"border-r-4 border-yellow-700 bg-gray-200\"\n                : \"\"\n            }  px-4 py-4 hover:bg-gray-200 cursor-pointer`}\n          >\n            My Accounts\n          </div>\n          <hr />\n          <div\n            onClick={(e) => history.push(\"/wish-list\")}\n            className={` px-4 py-4 hover:bg-gray-200 cursor-pointer`}\n          >\n            My Wishlist\n          </div>\n          <hr />\n          <div\n            onClick={(e) => history.push(\"/user/setting\")}\n            className={`${\n              location.pathname === \"/user/setting\"\n                ? \"border-r-4 border-yellow-700 bg-gray-200\"\n                : \"\"\n            }  px-4 py-4 hover:bg-gray-200 cursor-pointer`}\n          >\n            Setting\n          </div>\n          <hr />\n          <div\n            onClick={(e) => logout()}\n            className={`${\n              location.pathname === \"/admin/dashboard/categories\"\n                ? \"border-r-4 border-yellow-700 bg-gray-200\"\n                : \"\"\n            }  px-4 py-4 hover:bg-gray-200 cursor-pointer`}\n          >\n            Logout\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Sidebar;\n","export const dashboardUserState = {\n  userDetails: null,\n  loading: false,\n  OrderByUser: null,\n};\n\nexport const dashboardUserReducer = (state, action) => {\n  switch (action.type) {\n    case \"userDetails\":\n      return {\n        ...state,\n        userDetails: action.payload,\n      };\n    case \"OrderByUser\":\n      return {\n        ...state,\n        OrderByUser: action.payload,\n      };\n    case \"loading\":\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { Fragment, createContext, useReducer, useEffect } from \"react\";\nimport { Navber, Footer, CartModal } from \"../partials\";\nimport Sidebar from \"./Sidebar\";\nimport {\n  dashboardUserState,\n  dashboardUserReducer,\n} from \"./DashboardUserContext\";\nimport { fetchData } from \"./Action\";\n\nexport const DashboardUserContext = createContext();\n\nconst Layout = ({ children }) => {\n  const [data, dispatch] = useReducer(dashboardUserReducer, dashboardUserState);\n\n  useEffect(() => {\n    fetchData(dispatch);\n  }, []);\n\n  return (\n    <Fragment>\n      <DashboardUserContext.Provider value={{ data, dispatch }}>\n        <div className=\"flex-grow\">\n          <Navber />\n          <CartModal />\n          <div className=\"mx-4 mt-24 md:mx-12 md:mt-32 lg:mt-24 flex flex-col md:flex-row\">\n            <Sidebar />\n            {/* All Children pass from here */}\n            {children}\n          </div>\n        </div>\n        <Footer />\n      </DashboardUserContext.Provider>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport { DashboardUserContext } from \"./Layout\";\nimport { updatePersonalInformationAction } from \"./Action\";\n\nconst ProfileComponent = () => {\n  const { data, dispatch } = useContext(DashboardUserContext);\n  const userDetails = data.userDetails !== null ? data.userDetails : \"\";\n\n  const [fData, setFdata] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    success: false,\n  });\n\n  useEffect(() => {\n    setFdata({\n      ...fData,\n      id: userDetails._id,\n      name: userDetails.name,\n      email: userDetails.email,\n      phone: userDetails.phoneNumber,\n    });\n  }, [userDetails]);\n\n  const handleSubmit = () => {\n    updatePersonalInformationAction(dispatch, fData);\n  };\n\n  if (data.loading) {\n    return (\n      <div className=\"w-full md:w-9/12 flex items-center justify-center \">\n        <svg\n          className=\"w-12 h-12 animate-spin text-gray-600\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n          ></path>\n        </svg>\n      </div>\n    );\n  }\n  return (\n    <Fragment>\n      <div className=\"flex flex-col w-full my-4 md:my-0 md:w-9/12 md:px-8\">\n        <div className=\"shadow-lg border\">\n          <div className=\"py-4 px-4 text-lg font-semibold border-t-2 border-yellow-700\">\n            Personal Information\n          </div>\n          <hr />\n          <div className=\"py-4 px-4 md:px-8 lg:px-16 flex flex-col space-y-4\">\n            {fData.success ? (\n              <div className=\"bg-green-200 px-4 py-2 rounded\">\n                {fData.success}\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div className=\"flex flex-col space-y-2\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                onChange={(e) => setFdata({ ...fData, name: e.target.value })}\n                value={fData.name}\n                type=\"text\"\n                id=\"name\"\n                className=\"border px-4 py-2 w-full focus:outline-none\"\n              />\n            </div>\n            <div className=\"flex flex-col space-y-2\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                value={fData.email}\n                readOnly\n                type=\"email\"\n                id=\"email\"\n                className=\"cursor-not-allowed border px-4 py-2 bg-gray-200 w-full focus:outline-none focus:cursor-not-allowed\"\n              />\n              <span className=\"text-xs text-gray-500\">\n                You can't change your email\n              </span>\n            </div>\n            <div className=\"flex flex-col space-y-2\">\n              <label htmlFor=\"number\">Phone Number</label>\n              <input\n                onChange={(e) => setFdata({ ...fData, phone: e.target.value })}\n                value={fData.phone}\n                type=\"number\"\n                id=\"number\"\n                className=\"border px-4 py-2 w-full focus:outline-none\"\n              />\n            </div>\n            <div\n              onClick={(e) => handleSubmit()}\n              style={{ background: \"#303031\" }}\n              className=\"w-full text-center cursor-pointer px-4 py-2 text-gray-100\"\n            >\n              Update Information\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst UserProfile = (props) => {\n  return (\n    <Fragment>\n      <Layout children={<ProfileComponent />} />\n    </Fragment>\n  );\n};\n\nexport default UserProfile;\n","import React, { Fragment, useEffect, useContext } from \"react\";\nimport moment from \"moment\";\n\nimport Layout from \"./Layout\";\nimport { DashboardUserContext } from \"./Layout\";\nimport { fetchOrderByUser } from \"./Action\";\n\nconst apiURL = process.env.REACT_APP_API_URL;\n\nconst TableHeader = () => {\n  return (\n    <Fragment>\n      <thead>\n        <tr>\n          <th className=\"px-4 py-2 border\">Products</th>\n          <th className=\"px-4 py-2 border\">Status</th>\n          <th className=\"px-4 py-2 border\">Total</th>\n          <th className=\"px-4 py-2 border\">Phone</th>\n          <th className=\"px-4 py-2 border\">Address</th>\n          <th className=\"px-4 py-2 border\">Transaction Id</th>\n          <th className=\"px-4 py-2 border\">Checkout</th>\n          <th className=\"px-4 py-2 border\">Processing</th>\n        </tr>\n      </thead>\n    </Fragment>\n  );\n};\n\nconst TableBody = ({ order }) => {\n  return (\n    <Fragment>\n      <tr className=\"border-b\">\n        <td className=\"w-48 hover:bg-gray-200 p-2 flex flex-col space-y-1\">\n          {order.allProduct.map((product, i) => {\n            return (\n              <span className=\"block flex items-center space-x-2\" key={i}>\n                <img\n                  className=\"w-8 h-8 object-cover object-center\"\n                  src={`${apiURL}/uploads/products/${product.id.pImages[0]}`}\n                  alt=\"productImage\"\n                />\n                <span>{product.id.pName}</span>\n                <span>{product.quantitiy}x</span>\n              </span>\n            );\n          })}\n        </td>\n        <td className=\"hover:bg-gray-200 p-2 text-center cursor-default\">\n          {order.status === \"Not processed\" && (\n            <span className=\"block text-red-600 rounded-full text-center text-xs px-2 font-semibold\">\n              {order.status}\n            </span>\n          )}\n          {order.status === \"Processing\" && (\n            <span className=\"block text-yellow-600 rounded-full text-center text-xs px-2 font-semibold\">\n              {order.status}\n            </span>\n          )}\n          {order.status === \"Shipped\" && (\n            <span className=\"block text-blue-600 rounded-full text-center text-xs px-2 font-semibold\">\n              {order.status}\n            </span>\n          )}\n          {order.status === \"Delivered\" && (\n            <span className=\"block text-green-600 rounded-full text-center text-xs px-2 font-semibold\">\n              {order.status}\n            </span>\n          )}\n          {order.status === \"Cancelled\" && (\n            <span className=\"block text-red-600 rounded-full text-center text-xs px-2 font-semibold\">\n              {order.status}\n            </span>\n          )}\n        </td>\n        <td className=\"hover:bg-gray-200 p-2 text-center\">\n          ${order.amount}.00\n        </td>\n        <td className=\"hover:bg-gray-200 p-2 text-center\">{order.phone}</td>\n        <td className=\"hover:bg-gray-200 p-2 text-center\">{order.address}</td>\n        <td className=\"hover:bg-gray-200 p-2 text-center\">\n          {order.transactionId}\n        </td>\n        <td className=\"hover:bg-gray-200 p-2 text-center\">\n          {moment(order.createdAt).format(\"lll\")}\n        </td>\n        <td className=\"hover:bg-gray-200 p-2 text-center\">\n          {moment(order.updatedAt).format(\"lll\")}\n        </td>\n      </tr>\n    </Fragment>\n  );\n};\n\nconst OrdersComponent = () => {\n  const { data, dispatch } = useContext(DashboardUserContext);\n  const { OrderByUser: orders } = data;\n\n  useEffect(() => {\n    fetchOrderByUser(dispatch);\n  }, []);\n\n  if (data.loading) {\n    return (\n      <div className=\"w-full md:w-9/12 flex items-center justify-center py-24\">\n        <svg\n          className=\"w-12 h-12 animate-spin text-gray-600\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n          ></path>\n        </svg>\n      </div>\n    );\n  }\n  return (\n    <Fragment>\n      <div className=\"flex flex-col w-full my-4 md:my-0 md:w-9/12 md:px-8\">\n        <div className=\"border\">\n          <div className=\"py-4 px-4 text-lg font-semibold border-t-2 border-yellow-700\">\n            Orders\n          </div>\n          <hr />\n          <div className=\"overflow-auto bg-white shadow-lg p-4\">\n            <table className=\"table-auto border w-full my-2\">\n              <TableHeader />\n              <tbody>\n                {orders && orders.length > 0 ? (\n                  orders.map((item, i) => {\n                    return <TableBody key={i} order={item} />;\n                  })\n                ) : (\n                  <tr>\n                    <td\n                      colSpan=\"8\"\n                      className=\"text-xl text-center font-semibold py-8\"\n                    >\n                      No order found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n            <div className=\"text-sm text-gray-600 mt-2\">\n              Total {orders && orders.length} order found\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst UserOrders = (props) => {\n  return (\n    <Fragment>\n      <Layout children={<OrdersComponent />} />\n    </Fragment>\n  );\n};\n\nexport default UserOrders;\n","import React, { Fragment, useState, useContext } from \"react\";\nimport Layout from \"./Layout\";\nimport { handleChangePassword } from \"./Action\";\nimport { DashboardUserContext } from \"./Layout\";\n\nconst SettingComponent = () => {\n  const { data, dispatch } = useContext(DashboardUserContext);\n\n  const [fData, setFdata] = useState({\n    oldPassword: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\",\n    success: false,\n    error: false,\n    passwordView: false,\n    type: \"password\",\n  });\n\n  if (fData.success || fData.error) {\n    setTimeout(() => {\n      setFdata({ ...fData, success: false, error: false });\n    }, 1500);\n  }\n\n  if (data.loading) {\n    return (\n      <div className=\"w-full md:w-9/12 flex items-center justify-center \">\n        <svg\n          className=\"w-12 h-12 animate-spin text-gray-600\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n          ></path>\n        </svg>\n      </div>\n    );\n  }\n  return (\n    <Fragment>\n      <div className=\"flex flex-col w-full my-4 md:my-0 md:w-9/12 md:px-8\">\n        <div className=\"shadow-lg border\">\n          <div className=\"py-4 px-4 text-lg font-semibold border-t-2 border-yellow-700\">\n            Change Password\n          </div>\n          <hr />\n          <div className=\"py-4 px-4 md:px-8 lg:px-16 flex flex-col space-y-4\">\n            {fData.success ? (\n              <div className=\"bg-green-200 px-4 py-2 rounded\">\n                {fData.success}\n              </div>\n            ) : (\n              \"\"\n            )}\n            {fData.error ? (\n              <div className=\"bg-red-200 px-4 py-2 rounded\">{fData.error}</div>\n            ) : (\n              \"\"\n            )}\n            <div className=\"flex flex-col space-y-2\">\n              <label htmlFor=\"oldPassword\">Old Password</label>\n              <div className=\"relative\">\n                <input\n                  onChange={(e) =>\n                    setFdata({ ...fData, oldPassword: e.target.value })\n                  }\n                  value={fData.oldPassword}\n                  type={fData.type}\n                  id=\"oldPassword\"\n                  className=\"z-10 border px-4 py-2 w-full focus:outline-none\"\n                />\n                <span\n                  onClick={(e) =>\n                    setFdata({\n                      ...fData,\n                      passwordView: false,\n                      type: \"password\",\n                    })\n                  }\n                  className={`${\n                    fData.passwordView ? \"\" : \"hidden\"\n                  } absolute right-0 m-2 box-border cursor-pointer`}\n                >\n                  <svg\n                    className=\"w-6 h-6\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                    />\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n                    />\n                  </svg>\n                </span>\n                <span\n                  onClick={(e) =>\n                    setFdata({ ...fData, passwordView: true, type: \"text\" })\n                  }\n                  className={`${\n                    !fData.passwordView ? \"\" : \"hidden\"\n                  } absolute right-0 m-2 box-border cursor-pointer`}\n                >\n                  <svg\n                    className=\"w-6 h-6\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\"\n                    />\n                  </svg>\n                </span>\n              </div>\n            </div>\n            <div className=\"flex flex-col space-y-2\">\n              <label htmlFor=\"newPassword\">New Password</label>\n              <input\n                onChange={(e) =>\n                  setFdata({ ...fData, newPassword: e.target.value })\n                }\n                value={fData.newPassword}\n                type=\"password\"\n                id=\"newPassword\"\n                className=\"border px-4 py-2 w-full focus:outline-none\"\n              />\n            </div>\n            <div className=\"flex flex-col space-y-2\">\n              <label htmlFor=\"confirmPassword\">Confirm Password</label>\n              <input\n                onChange={(e) =>\n                  setFdata({ ...fData, confirmPassword: e.target.value })\n                }\n                value={fData.confirmPassword}\n                type=\"password\"\n                id=\"confirmPassword\"\n                className=\"border px-4 py-2 w-full focus:outline-none\"\n              />\n            </div>\n            <div\n              onClick={(e) => handleChangePassword(fData, setFdata, dispatch)}\n              style={{ background: \"#303031\" }}\n              className=\"w-full text-center cursor-pointer px-4 py-2 text-gray-100\"\n            >\n              Change password\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst SettingUser = (props) => {\n  return (\n    <Fragment>\n      <Layout children={<SettingComponent />} />\n    </Fragment>\n  );\n};\n\nexport default SettingUser;\n","import React from \"react\";\nimport {\n  Home,\n  WishList,\n  ProtectedRoute,\n  AdminProtectedRoute,\n  CartProtectedRoute,\n  PageNotFound,\n  ProductDetails,\n  ProductByCategory,\n  CheckoutPage,\n} from \"./shop\";\nimport { DashboardAdmin, Categories, Products, Orders } from \"./admin\";\nimport { UserProfile, UserOrders, SettingUser } from \"./shop/dashboardUser\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n/* Routing All page will be here */\nconst Routes = (props) => {\n  return (\n    <Router>\n      <Switch>\n        {/* Shop & Public Routes */}\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/wish-list\" component={WishList} />\n        <Route exact path=\"/products/:id\" component={ProductDetails} />\n        <Route\n          exact\n          path=\"/products/category/:catId\"\n          component={ProductByCategory}\n        />\n        <CartProtectedRoute\n          exact={true}\n          path=\"/checkout\"\n          component={CheckoutPage}\n        />\n        {/* Shop & Public Routes End */}\n\n        {/* Admin Routes */}\n        <AdminProtectedRoute\n          exact={true}\n          path=\"/admin/dashboard\"\n          component={DashboardAdmin}\n        />\n        <AdminProtectedRoute\n          exact={true}\n          path=\"/admin/dashboard/categories\"\n          component={Categories}\n        />\n        <AdminProtectedRoute\n          exact={true}\n          path=\"/admin/dashboard/products\"\n          component={Products}\n        />\n        <AdminProtectedRoute\n          exact={true}\n          path=\"/admin/dashboard/orders\"\n          component={Orders}\n        />\n        {/* Admin Routes End */}\n\n        {/* User Dashboard */}\n        <ProtectedRoute\n          exact={true}\n          path=\"/user/profile\"\n          component={UserProfile}\n        />\n        <ProtectedRoute\n          exact={true}\n          path=\"/user/orders\"\n          component={UserOrders}\n        />\n        <ProtectedRoute\n          exact={true}\n          path=\"/user/setting\"\n          component={SettingUser}\n        />\n        {/* User Dashboard End */}\n\n        {/* 404 Page */}\n        <Route component={PageNotFound} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import React, { Fragment, useReducer } from 'react';\nimport Routes from './components';\nimport { LayoutContext, layoutState, layoutReducer } from './components/shop';\n\nfunction App() {\n    const [data, dispatch] = useReducer(layoutReducer, layoutState);\n    return (\n        <Fragment>\n            <LayoutContext.Provider value={{ data, dispatch }}>\n                <Routes />\n            </LayoutContext.Provider>\n        </Fragment>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}